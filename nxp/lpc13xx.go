// Automatically generated file. DO NOT EDIT.
// Generated by gen-device-svd.go from LPC13xx_svd_v1.svd, see https://github.com/posborne/cmsis-svd/tree/master/data/NXP

// +build nxp,lpc13xx

// LPC13xx
//

package nxp

import (
	"runtime/interrupt"
	"runtime/volatile"
	"unsafe"
)

// Some information about this device.
const (
	DEVICE = "LPC13xx"
)

// Interrupt numbers.
const (
	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_0 = 0

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_1 = 1

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_2 = 2

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_3 = 3

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_4 = 4

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_5 = 5

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_6 = 6

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_7 = 7

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_8 = 8

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_9 = 9

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_10 = 10

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO0_11 = 11

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_0 = 12

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_1 = 13

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_2 = 14

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_3 = 15

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_4 = 16

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_5 = 17

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_6 = 18

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_7 = 19

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_8 = 20

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_9 = 21

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_10 = 22

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO1_11 = 23

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_0 = 24

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_1 = 25

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_2 = 26

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_3 = 27

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_4 = 28

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_5 = 29

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_6 = 30

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_7 = 31

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_8 = 32

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_9 = 33

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_10 = 34

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO2_11 = 35

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO3_0 = 36

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO3_1 = 37

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO3_2 = 38

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_PIO3_3 = 39

	// Product name title=UM10375 Chapter title=LPC13xx I2C-bus controller Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_I2C0 = 40

	// Product name title=UM10375 Chapter title=LPC13xx 16-bit timer/counters (CT16B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_CT16B0 = 41

	IRQ_CT16B1 = 42

	// Product name title=UM10375 Chapter title=LPC13xx 32-bit timer/counters (CT32B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_CT32B0 = 43

	IRQ_CT32B1 = 44

	// Product name title=UM10375 Chapter title=LPC13xx SSP0/1 Modification date=4/20/2011 Major revision=2 Minor revision=1
	IRQ_SSP0 = 45

	// Product name title=UM10375 Chapter title=LPC13xx UART Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_UART = 46

	// Product name title=UM10375 Chapter title=LPC13xx USB device controller Modification date=4/20/2011 Major revision=2 Minor revision=1
	IRQ_USBIRQ = 47

	// Product name title=UM10375 Chapter title=LPC13xx USB device controller Modification date=4/20/2011 Major revision=2 Minor revision=1
	IRQ_USBFIQ = 48

	// Product name title=UM10375 Chapter title=LPC13xx Analog-to-Digital Converter (ADC) Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_ADC = 49

	// Product name title=UM10375 Chapter title=LPC13xx Windowed WatchDog Timer (WWDT) Modification date=4/19/2011 Major revision=2 Minor revision=1
	IRQ_WDT = 50

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	IRQ_BOD = 51

	IRQ_PIO_3 = 53

	IRQ_PIO_2 = 54

	IRQ_PIO_1 = 55

	// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
	IRQ_PIO_0 = 56

	IRQ_SSP1 = 57

	// Highest interrupt number on this device.
	IRQ_max = 57
)

// Map interrupt numbers to function names.
// These aren't real calls, they're removed by the compiler.
var (
	_ = interrupt.Register(IRQ_PIO0_0, "PIO0_0_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_1, "PIO0_1_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_2, "PIO0_2_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_3, "PIO0_3_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_4, "PIO0_4_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_5, "PIO0_5_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_6, "PIO0_6_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_7, "PIO0_7_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_8, "PIO0_8_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_9, "PIO0_9_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_10, "PIO0_10_IRQHandler")
	_ = interrupt.Register(IRQ_PIO0_11, "PIO0_11_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_0, "PIO1_0_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_1, "PIO1_1_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_2, "PIO1_2_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_3, "PIO1_3_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_4, "PIO1_4_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_5, "PIO1_5_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_6, "PIO1_6_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_7, "PIO1_7_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_8, "PIO1_8_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_9, "PIO1_9_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_10, "PIO1_10_IRQHandler")
	_ = interrupt.Register(IRQ_PIO1_11, "PIO1_11_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_0, "PIO2_0_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_1, "PIO2_1_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_2, "PIO2_2_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_3, "PIO2_3_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_4, "PIO2_4_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_5, "PIO2_5_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_6, "PIO2_6_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_7, "PIO2_7_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_8, "PIO2_8_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_9, "PIO2_9_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_10, "PIO2_10_IRQHandler")
	_ = interrupt.Register(IRQ_PIO2_11, "PIO2_11_IRQHandler")
	_ = interrupt.Register(IRQ_PIO3_0, "PIO3_0_IRQHandler")
	_ = interrupt.Register(IRQ_PIO3_1, "PIO3_1_IRQHandler")
	_ = interrupt.Register(IRQ_PIO3_2, "PIO3_2_IRQHandler")
	_ = interrupt.Register(IRQ_PIO3_3, "PIO3_3_IRQHandler")
	_ = interrupt.Register(IRQ_I2C0, "I2C0_IRQHandler")
	_ = interrupt.Register(IRQ_CT16B0, "CT16B0_IRQHandler")
	_ = interrupt.Register(IRQ_CT16B1, "CT16B1_IRQHandler")
	_ = interrupt.Register(IRQ_CT32B0, "CT32B0_IRQHandler")
	_ = interrupt.Register(IRQ_CT32B1, "CT32B1_IRQHandler")
	_ = interrupt.Register(IRQ_SSP0, "SSP0_IRQHandler")
	_ = interrupt.Register(IRQ_UART, "UART_IRQHandler")
	_ = interrupt.Register(IRQ_USBIRQ, "USBIRQ_IRQHandler")
	_ = interrupt.Register(IRQ_USBFIQ, "USBFIQ_IRQHandler")
	_ = interrupt.Register(IRQ_ADC, "ADC_IRQHandler")
	_ = interrupt.Register(IRQ_WDT, "WDT_IRQHandler")
	_ = interrupt.Register(IRQ_BOD, "BOD_IRQHandler")
	_ = interrupt.Register(IRQ_PIO_3, "PIO_3_IRQHandler")
	_ = interrupt.Register(IRQ_PIO_2, "PIO_2_IRQHandler")
	_ = interrupt.Register(IRQ_PIO_1, "PIO_1_IRQHandler")
	_ = interrupt.Register(IRQ_PIO_0, "PIO_0_IRQHandler")
	_ = interrupt.Register(IRQ_SSP1, "SSP1_IRQHandler")
)

// Peripherals.
var (
	// Product name title=UM10375 Chapter title=LPC13xx I2C-bus controller Modification date=4/19/2011 Major revision=2 Minor revision=1
	I2C = (*I2C_Type)(unsafe.Pointer(uintptr(0x40000000)))

	// Product name title=UM10375 Chapter title=LPC13xx Windowed WatchDog Timer (WWDT) Modification date=4/19/2011 Major revision=2 Minor revision=1
	WWDT = (*WWDT_Type)(unsafe.Pointer(uintptr(0x40004000)))

	// Product name title=UM10375 Chapter title=LPC13xx UART Modification date=4/19/2011 Major revision=2 Minor revision=1
	UART = (*UART_Type)(unsafe.Pointer(uintptr(0x40008000)))

	// Product name title=UM10375 Chapter title=LPC13xx 16-bit timer/counters (CT16B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	CT16B0 = (*CT16B0_Type)(unsafe.Pointer(uintptr(0x4000c000)))

	// Product name title=UM10375 Chapter title=LPC13xx 16-bit timer/counters (CT16B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	CT16B1 = (*CT16B0_Type)(unsafe.Pointer(uintptr(0x40010000)))

	// Product name title=UM10375 Chapter title=LPC13xx 32-bit timer/counters (CT32B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	CT32B0 = (*CT32B0_Type)(unsafe.Pointer(uintptr(0x40014000)))

	// Product name title=UM10375 Chapter title=LPC13xx 32-bit timer/counters (CT32B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
	CT32B1 = (*CT32B0_Type)(unsafe.Pointer(uintptr(0x40018000)))

	// Product name title=UM10375 Chapter title=LPC13xx Analog-to-Digital Converter (ADC) Modification date=4/19/2011 Major revision=2 Minor revision=1
	ADC = (*ADC_Type)(unsafe.Pointer(uintptr(0x4001c000)))

	// Product name title=UM10375 Chapter title=LPC13xx USB device controller Modification date=4/20/2011 Major revision=2 Minor revision=1
	USB = (*USB_Type)(unsafe.Pointer(uintptr(0x40020000)))

	// Product name title=UM10375 Chapter title=LPC13xx Power Management Unit (PMU) Modification date=4/20/2011 Major revision=2 Minor revision=1
	PMU = (*PMU_Type)(unsafe.Pointer(uintptr(0x40038000)))

	// Product name title=UM10375 Chapter title=LPC13xx Flash memory programming firmware Modification date=4/20/2011 Major revision=2 Minor revision=1
	FMC = (*FMC_Type)(unsafe.Pointer(uintptr(0x4003c000)))

	// Product name title=UM10375 Chapter title=LPC13xx SSP0/1 Modification date=4/20/2011 Major revision=2 Minor revision=1
	SSP0 = (*SSP0_Type)(unsafe.Pointer(uintptr(0x40040000)))

	// Product name title=UM10375 Chapter title=LPC13xx I/O configuration Modification date=4/20/2011 Major revision=2 Minor revision=1
	IOCON = (*IOCON_Type)(unsafe.Pointer(uintptr(0x40044000)))

	// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
	SYSCON = (*SYSCON_Type)(unsafe.Pointer(uintptr(0x40048000)))

	// Product name title=UM10375 Chapter title=LPC13xx SSP0/1 Modification date=4/20/2011 Major revision=2 Minor revision=1
	SSP1 = (*SSP0_Type)(unsafe.Pointer(uintptr(0x40058000)))

	// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
	GPIO0 = (*GPIO_Type)(unsafe.Pointer(uintptr(0x50000000)))

	// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
	GPIO1 = (*GPIO_Type)(unsafe.Pointer(uintptr(0x50010000)))

	// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
	GPIO2 = (*GPIO_Type)(unsafe.Pointer(uintptr(0x50020000)))

	// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
	GPIO3 = (*GPIO_Type)(unsafe.Pointer(uintptr(0x50030000)))
)

// Product name title=UM10375 Chapter title=LPC13xx I2C-bus controller Modification date=4/19/2011 Major revision=2 Minor revision=1
type I2C_Type struct {
	CONSET      volatile.Register32 // 0x0
	STAT        volatile.Register32 // 0x4
	DAT         volatile.Register32 // 0x8
	ADR0        volatile.Register32 // 0xC
	SCLH        volatile.Register32 // 0x10
	SCLL        volatile.Register32 // 0x14
	CONCLR      volatile.Register32 // 0x18
	MMCTRL      volatile.Register32 // 0x1C
	ADR1        volatile.Register32 // 0x20
	ADR2        volatile.Register32 // 0x24
	ADR3        volatile.Register32 // 0x28
	DATA_BUFFER volatile.Register32 // 0x2C
	MASK0       volatile.Register32 // 0x30
	MASK1       volatile.Register32 // 0x34
	MASK2       volatile.Register32 // 0x38
	MASK3       volatile.Register32 // 0x3C
}

// Product name title=UM10375 Chapter title=LPC13xx Windowed WatchDog Timer (WWDT) Modification date=4/19/2011 Major revision=2 Minor revision=1
type WWDT_Type struct {
	MOD     volatile.Register32 // 0x0
	TC      volatile.Register32 // 0x4
	FEED    volatile.Register32 // 0x8
	TV      volatile.Register32 // 0xC
	_       [4]byte
	WARNINT volatile.Register32 // 0x14
	WINDOW  volatile.Register32 // 0x18
}

// Product name title=UM10375 Chapter title=LPC13xx UART Modification date=4/19/2011 Major revision=2 Minor revision=1
type UART_Type struct {
	RBR           volatile.Register32 // 0x0
	DLM           volatile.Register32 // 0x4
	IIR           volatile.Register32 // 0x8
	LCR           volatile.Register32 // 0xC
	MCR           volatile.Register32 // 0x10
	LSR           volatile.Register32 // 0x14
	MSR           volatile.Register32 // 0x18
	SCR           volatile.Register32 // 0x1C
	ACR           volatile.Register32 // 0x20
	_             [4]byte
	FDR           volatile.Register32 // 0x28
	_             [4]byte
	TER           volatile.Register32 // 0x30
	_             [24]byte
	RS485CTRL     volatile.Register32 // 0x4C
	RS485ADRMATCH volatile.Register32 // 0x50
	RS485DLY      volatile.Register32 // 0x54
}

// Product name title=UM10375 Chapter title=LPC13xx 16-bit timer/counters (CT16B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
type CT16B0_Type struct {
	BIR   volatile.Register32 // 0x0
	BTCR  volatile.Register32 // 0x4
	BTC   volatile.Register32 // 0x8
	BPR   volatile.Register32 // 0xC
	BPC   volatile.Register32 // 0x10
	BMCR  volatile.Register32 // 0x14
	BMR0  volatile.Register32 // 0x18
	BMR1  volatile.Register32 // 0x1C
	BMR2  volatile.Register32 // 0x20
	BMR3  volatile.Register32 // 0x24
	BCCR  volatile.Register32 // 0x28
	BCR0  volatile.Register32 // 0x2C
	_     [12]byte
	BEMR  volatile.Register32 // 0x3C
	_     [48]byte
	BCTCR volatile.Register32 // 0x70
	BPWMC volatile.Register32 // 0x74
}

// Product name title=UM10375 Chapter title=LPC13xx 32-bit timer/counters (CT32B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
type CT32B0_Type struct {
	BIR   volatile.Register32 // 0x0
	BTCR  volatile.Register32 // 0x4
	BTC   volatile.Register32 // 0x8
	BPR   volatile.Register32 // 0xC
	BPC   volatile.Register32 // 0x10
	BMCR  volatile.Register32 // 0x14
	BMR0  volatile.Register32 // 0x18
	BMR1  volatile.Register32 // 0x1C
	BMR2  volatile.Register32 // 0x20
	BMR3  volatile.Register32 // 0x24
	BCCR  volatile.Register32 // 0x28
	BCR0  volatile.Register32 // 0x2C
	_     [12]byte
	BEMR  volatile.Register32 // 0x3C
	_     [48]byte
	BCTCR volatile.Register32 // 0x70
	BPWMC volatile.Register32 // 0x74
}

// Product name title=UM10375 Chapter title=LPC13xx Analog-to-Digital Converter (ADC) Modification date=4/19/2011 Major revision=2 Minor revision=1
type ADC_Type struct {
	CR    volatile.Register32 // 0x0
	GDR   volatile.Register32 // 0x4
	_     [4]byte
	INTEN volatile.Register32 // 0xC
	DR0   volatile.Register32 // 0x10
	DR1   volatile.Register32 // 0x14
	DR2   volatile.Register32 // 0x18
	DR3   volatile.Register32 // 0x1C
	DR4   volatile.Register32 // 0x20
	DR5   volatile.Register32 // 0x24
	DR6   volatile.Register32 // 0x28
	DR7   volatile.Register32 // 0x2C
	STAT  volatile.Register32 // 0x30
}

// Product name title=UM10375 Chapter title=LPC13xx USB device controller Modification date=4/20/2011 Major revision=2 Minor revision=1
type USB_Type struct {
	DEVINTST   volatile.Register32 // 0x0
	DEVINTEN   volatile.Register32 // 0x4
	DEVINTCTRL volatile.Register32 // 0x8
	DEVINTSET  volatile.Register32 // 0xC
	CMDCODE    volatile.Register32 // 0x10
	CMDDATA    volatile.Register32 // 0x14
	RXDATA     volatile.Register32 // 0x18
	TXDATA     volatile.Register32 // 0x1C
	RXPLEN     volatile.Register32 // 0x20
	TXPLENn    volatile.Register32 // 0x24
	CTRL       volatile.Register32 // 0x28
	DEVFIQSEL  volatile.Register32 // 0x2C
}

// Product name title=UM10375 Chapter title=LPC13xx Power Management Unit (PMU) Modification date=4/20/2011 Major revision=2 Minor revision=1
type PMU_Type struct {
	PCON   volatile.Register32 // 0x0
	GPREG0 volatile.Register32 // 0x4
	GPREG1 volatile.Register32 // 0x8
	GPREG2 volatile.Register32 // 0xC
	GPREG3 volatile.Register32 // 0x10
	GPREG4 volatile.Register32 // 0x14
}

// Product name title=UM10375 Chapter title=LPC13xx Flash memory programming firmware Modification date=4/20/2011 Major revision=2 Minor revision=1
type FMC_Type struct {
	_         [16]byte
	FLASHCFG  volatile.Register32 // 0x10
	_         [12]byte
	FMSSTART  volatile.Register32 // 0x20
	FMSSTOP   volatile.Register32 // 0x24
	_         [4]byte
	FMSW0     volatile.Register32 // 0x2C
	FMSW1     volatile.Register32 // 0x30
	FMSW2     volatile.Register32 // 0x34
	FMSW3     volatile.Register32 // 0x38
	_         [4004]byte
	FMSTAT    volatile.Register32 // 0xFE0
	_         [4]byte
	FMSTATCLR volatile.Register32 // 0xFE8
}

// Product name title=UM10375 Chapter title=LPC13xx SSP0/1 Modification date=4/20/2011 Major revision=2 Minor revision=1
type SSP0_Type struct {
	CR0  volatile.Register32 // 0x0
	CR1  volatile.Register32 // 0x4
	DR   volatile.Register32 // 0x8
	SR   volatile.Register32 // 0xC
	CPSR volatile.Register32 // 0x10
	IMSC volatile.Register32 // 0x14
	RIS  volatile.Register32 // 0x18
	MIS  volatile.Register32 // 0x1C
	ICR  volatile.Register32 // 0x20
}

// Product name title=UM10375 Chapter title=LPC13xx I/O configuration Modification date=4/20/2011 Major revision=2 Minor revision=1
type IOCON_Type struct {
	PIO2_6        volatile.Register32 // 0x0
	_             [4]byte
	PIO2_0        volatile.Register32 // 0x8
	RESET_PIO0_0  volatile.Register32 // 0xC
	PIO0_1        volatile.Register32 // 0x10
	PIO1_8        volatile.Register32 // 0x14
	_             [4]byte
	PIO0_2        volatile.Register32 // 0x1C
	PIO2_7        volatile.Register32 // 0x20
	PIO2_8        volatile.Register32 // 0x24
	PIO2_1        volatile.Register32 // 0x28
	PIO0_3        volatile.Register32 // 0x2C
	PIO0_4        volatile.Register32 // 0x30
	PIO0_5        volatile.Register32 // 0x34
	PIO1_9        volatile.Register32 // 0x38
	PIO3_4        volatile.Register32 // 0x3C
	PIO2_4        volatile.Register32 // 0x40
	PIO2_5        volatile.Register32 // 0x44
	PIO3_5        volatile.Register32 // 0x48
	PIO0_6        volatile.Register32 // 0x4C
	PIO0_7        volatile.Register32 // 0x50
	PIO2_9        volatile.Register32 // 0x54
	PIO2_10       volatile.Register32 // 0x58
	PIO2_2        volatile.Register32 // 0x5C
	PIO0_8        volatile.Register32 // 0x60
	PIO0_9        volatile.Register32 // 0x64
	SWCLK_PIO0_10 volatile.Register32 // 0x68
	PIO1_10       volatile.Register32 // 0x6C
	PIO2_11       volatile.Register32 // 0x70
	R_PIO0_11     volatile.Register32 // 0x74
	R_PIO1_0      volatile.Register32 // 0x78
	R_PIO1_1      volatile.Register32 // 0x7C
	R_PIO1_2      volatile.Register32 // 0x80
	PIO3_0        volatile.Register32 // 0x84
	PIO3_1        volatile.Register32 // 0x88
	PIO2_3        volatile.Register32 // 0x8C
	SWDIO_PIO1_3  volatile.Register32 // 0x90
	PIO1_4        volatile.Register32 // 0x94
	PIO1_11       volatile.Register32 // 0x98
	PIO3_2        volatile.Register32 // 0x9C
	PIO1_5        volatile.Register32 // 0xA0
	PIO1_6        volatile.Register32 // 0xA4
	PIO1_7        volatile.Register32 // 0xA8
	PIO3_3        volatile.Register32 // 0xAC
	SCK0_LOC      volatile.Register32 // 0xB0
	DSR_LOC       volatile.Register32 // 0xB4
	DCD_LOC       volatile.Register32 // 0xB8
	RI_LOC        volatile.Register32 // 0xBC
}

// Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
type SYSCON_Type struct {
	SYSMEMREMAP   volatile.Register32 // 0x0
	PRESETCTRL    volatile.Register32 // 0x4
	SYSPLLCTRL    volatile.Register32 // 0x8
	SYSPLLSTAT    volatile.Register32 // 0xC
	USBPLLCTRL    volatile.Register32 // 0x10
	USBPLLSTAT    volatile.Register32 // 0x14
	_             [8]byte
	SYSOSCCTRL    volatile.Register32 // 0x20
	WDTOSCCTRL    volatile.Register32 // 0x24
	IRCCTRL       volatile.Register32 // 0x28
	_             [4]byte
	SYSRESSTAT    volatile.Register32 // 0x30
	_             [12]byte
	SYSPLLCLKSEL  volatile.Register32 // 0x40
	SYSPLLCLKUEN  volatile.Register32 // 0x44
	USBPLLCLKSEL  volatile.Register32 // 0x48
	USBPLLCLKUEN  volatile.Register32 // 0x4C
	_             [32]byte
	MAINCLKSEL    volatile.Register32 // 0x70
	MAINCLKUEN    volatile.Register32 // 0x74
	SYSAHBCLKDIV  volatile.Register32 // 0x78
	_             [4]byte
	SYSAHBCLKCTRL volatile.Register32 // 0x80
	_             [16]byte
	SSP0CLKDIV    volatile.Register32 // 0x94
	UARTCLKDIV    volatile.Register32 // 0x98
	SSP1CLKDIV    volatile.Register32 // 0x9C
	_             [12]byte
	TRACECLKDIV   volatile.Register32 // 0xAC
	SYSTICKCLKDIV volatile.Register32 // 0xB0
	_             [12]byte
	USBCLKSEL     volatile.Register32 // 0xC0
	USBCLKUEN     volatile.Register32 // 0xC4
	USBCLKDIV     volatile.Register32 // 0xC8
	_             [4]byte
	WDTCLKSEL     volatile.Register32 // 0xD0
	WDTCLKUEN     volatile.Register32 // 0xD4
	WDTCLKDIV     volatile.Register32 // 0xD8
	_             [4]byte
	CLKOUTCLKSEL  volatile.Register32 // 0xE0
	CLKOUTUEN     volatile.Register32 // 0xE4
	CLKOUTDIV     volatile.Register32 // 0xE8
	_             [20]byte
	PIOPORCAP0    volatile.Register32 // 0x100
	PIOPORCAP1    volatile.Register32 // 0x104
	_             [72]byte
	BODCTRL       volatile.Register32 // 0x150
	SYSTCKCAL     volatile.Register32 // 0x154
	_             [168]byte
	STARTAPRP0    volatile.Register32 // 0x200
	STARTERP0     volatile.Register32 // 0x204
	STARTRSRP0CLR volatile.Register32 // 0x208
	STARTSRP0     volatile.Register32 // 0x20C
	STARTAPRP1    volatile.Register32 // 0x210
	STARTERP1     volatile.Register32 // 0x214
	STARTRSRP1CLR volatile.Register32 // 0x218
	STARTSRP1     volatile.Register32 // 0x21C
	_             [16]byte
	PDSLEEPCFG    volatile.Register32 // 0x230
	PDAWAKECFG    volatile.Register32 // 0x234
	PDRUNCFG      volatile.Register32 // 0x238
	_             [440]byte
	DEVICE_ID     volatile.Register32 // 0x3F4
}

// Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
type GPIO_Type struct {
	_    [16380]byte
	DATA volatile.Register32 // 0x3FFC
	_    [16384]byte
	DIR  volatile.Register32 // 0x8000
	IS   volatile.Register32 // 0x8004
	IBE  volatile.Register32 // 0x8008
	IEV  volatile.Register32 // 0x800C
	IE   volatile.Register32 // 0x8010
	RIS  volatile.Register32 // 0x8014
	MIS  volatile.Register32 // 0x8018
	IC   volatile.Register32 // 0x801C
}

// Bitfields for I2C: Product name title=UM10375 Chapter title=LPC13xx I2C-bus controller Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// CONSET: I2C Control Set Register. When a one is written to a bit of this register, the corresponding bit in the I2C control register is set. Writing a zero has no effect on the corresponding bit in the I2C control register.
	// Position of RESERVED field.
	I2C_CONSET_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	I2C_CONSET_RESERVED_Msk = 0x3
	// Position of AA field.
	I2C_CONSET_AA_Pos = 0x2
	// Bit mask of AA field.
	I2C_CONSET_AA_Msk = 0x4
	// Bit AA.
	I2C_CONSET_AA = 0x4
	// Position of SI field.
	I2C_CONSET_SI_Pos = 0x3
	// Bit mask of SI field.
	I2C_CONSET_SI_Msk = 0x8
	// Bit SI.
	I2C_CONSET_SI = 0x8
	// Position of STO field.
	I2C_CONSET_STO_Pos = 0x4
	// Bit mask of STO field.
	I2C_CONSET_STO_Msk = 0x10
	// Bit STO.
	I2C_CONSET_STO = 0x10
	// Position of STA field.
	I2C_CONSET_STA_Pos = 0x5
	// Bit mask of STA field.
	I2C_CONSET_STA_Msk = 0x20
	// Bit STA.
	I2C_CONSET_STA = 0x20
	// Position of I2EN field.
	I2C_CONSET_I2EN_Pos = 0x6
	// Bit mask of I2EN field.
	I2C_CONSET_I2EN_Msk = 0x40
	// Bit I2EN.
	I2C_CONSET_I2EN = 0x40
	// Position of RESERVED field.
	I2C_CONSET_RESERVED_Pos = 0x7
	// Bit mask of RESERVED field.
	I2C_CONSET_RESERVED_Msk = 0xffffff80

	// STAT: I2C Status Register. During I2C operation, this register provides detailed status codes that allow software to determine the next action needed.
	// Position of RESERVED field.
	I2C_STAT_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	I2C_STAT_RESERVED_Msk = 0x7
	// Position of Status field.
	I2C_STAT_Status_Pos = 0x3
	// Bit mask of Status field.
	I2C_STAT_Status_Msk = 0xf8
	// Position of RESERVED field.
	I2C_STAT_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_STAT_RESERVED_Msk = 0xffffff00

	// DAT: I2C Data Register. During master or slave transmit mode, data to be transmitted is written to this register. During master or slave receive mode, data that has been received may be read from this register.
	// Position of Data field.
	I2C_DAT_Data_Pos = 0x0
	// Bit mask of Data field.
	I2C_DAT_Data_Msk = 0xff
	// Position of RESERVED field.
	I2C_DAT_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_DAT_RESERVED_Msk = 0xffffff00

	// ADR0: I2C Slave Address Register 0. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.
	// Position of GC field.
	I2C_ADR0_GC_Pos = 0x0
	// Bit mask of GC field.
	I2C_ADR0_GC_Msk = 0x1
	// Bit GC.
	I2C_ADR0_GC = 0x1
	// Position of Address field.
	I2C_ADR0_Address_Pos = 0x1
	// Bit mask of Address field.
	I2C_ADR0_Address_Msk = 0xfe
	// Position of RESERVED field.
	I2C_ADR0_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_ADR0_RESERVED_Msk = 0xffffff00

	// SCLH: SCH Duty Cycle Register High Half Word. Determines the high time of the I2C clock.
	// Position of SCLH field.
	I2C_SCLH_SCLH_Pos = 0x0
	// Bit mask of SCLH field.
	I2C_SCLH_SCLH_Msk = 0xffff
	// Position of RESERVED field.
	I2C_SCLH_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	I2C_SCLH_RESERVED_Msk = 0xffff0000

	// SCLL: SCL Duty Cycle Register Low Half Word. Determines the low time of the I2C clock. I2nSCLL and I2nSCLH together determine the clock frequency generated by an I2C master and certain times used in slave mode.
	// Position of SCLL field.
	I2C_SCLL_SCLL_Pos = 0x0
	// Bit mask of SCLL field.
	I2C_SCLL_SCLL_Msk = 0xffff
	// Position of RESERVED field.
	I2C_SCLL_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	I2C_SCLL_RESERVED_Msk = 0xffff0000

	// CONCLR: I2C Control Clear Register. When a one is written to a bit of this register, the corresponding bit in the I2C control register is cleared. Writing a zero has no effect on the corresponding bit in the I2C control register.
	// Position of RESERVED field.
	I2C_CONCLR_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	I2C_CONCLR_RESERVED_Msk = 0x3
	// Position of AAC field.
	I2C_CONCLR_AAC_Pos = 0x2
	// Bit mask of AAC field.
	I2C_CONCLR_AAC_Msk = 0x4
	// Bit AAC.
	I2C_CONCLR_AAC = 0x4
	// Position of SIC field.
	I2C_CONCLR_SIC_Pos = 0x3
	// Bit mask of SIC field.
	I2C_CONCLR_SIC_Msk = 0x8
	// Bit SIC.
	I2C_CONCLR_SIC = 0x8
	// Position of RESERVED field.
	I2C_CONCLR_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	I2C_CONCLR_RESERVED_Msk = 0x10
	// Bit RESERVED.
	I2C_CONCLR_RESERVED = 0x10
	// Position of STAC field.
	I2C_CONCLR_STAC_Pos = 0x5
	// Bit mask of STAC field.
	I2C_CONCLR_STAC_Msk = 0x20
	// Bit STAC.
	I2C_CONCLR_STAC = 0x20
	// Position of I2ENC field.
	I2C_CONCLR_I2ENC_Pos = 0x6
	// Bit mask of I2ENC field.
	I2C_CONCLR_I2ENC_Msk = 0x40
	// Bit I2ENC.
	I2C_CONCLR_I2ENC = 0x40
	// Position of RESERVED field.
	I2C_CONCLR_RESERVED_Pos = 0x7
	// Bit mask of RESERVED field.
	I2C_CONCLR_RESERVED_Msk = 0x80
	// Bit RESERVED.
	I2C_CONCLR_RESERVED = 0x80
	// Position of RESERVED field.
	I2C_CONCLR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_CONCLR_RESERVED_Msk = 0xffffff00

	// MMCTRL: Monitor mode control register.
	// Position of MM_ENA field.
	I2C_MMCTRL_MM_ENA_Pos = 0x0
	// Bit mask of MM_ENA field.
	I2C_MMCTRL_MM_ENA_Msk = 0x1
	// Bit MM_ENA.
	I2C_MMCTRL_MM_ENA = 0x1
	// Monitor mode disabled.
	I2C_MMCTRL_MM_ENA_DISABLED = 0x0
	// The I 2C module will enter monitor mode. In this mode the SDA output will be forced high. This will prevent the I2C module from outputting data of any kind (including ACK) onto the I2C data bus. Depending on the state of the ENA_SCL bit, the output may be also forced high, preventing the module from having control over the I2C clock line.
	I2C_MMCTRL_MM_ENA_ENABLED = 0x1
	// Position of ENA_SCL field.
	I2C_MMCTRL_ENA_SCL_Pos = 0x1
	// Bit mask of ENA_SCL field.
	I2C_MMCTRL_ENA_SCL_Msk = 0x2
	// Bit ENA_SCL.
	I2C_MMCTRL_ENA_SCL = 0x2
	// When this bit is cleared to 0, the SCL output will be forced high when the module is in monitor mode. As described above, this will prevent the module from having any control over the I2C clock line.
	I2C_MMCTRL_ENA_SCL_HIGH = 0x0
	// When this bit is set, the I2C module may exercise the same control over the clock line that it would in normal operation. This means that, acting as a slave peripheral, the I2C module can stretch the clock line (hold it low) until it has had time to respond to an I2C interrupt.[1]
	I2C_MMCTRL_ENA_SCL_NORMAL = 0x1
	// Position of MATCH_ALL field.
	I2C_MMCTRL_MATCH_ALL_Pos = 0x2
	// Bit mask of MATCH_ALL field.
	I2C_MMCTRL_MATCH_ALL_Msk = 0x4
	// Bit MATCH_ALL.
	I2C_MMCTRL_MATCH_ALL = 0x4
	// When this bit is cleared, an interrupt will only be generated when a match occurs to one of the (up-to) four address registers described above. That is, the module will respond as a normal slave as far as address-recognition is concerned.
	I2C_MMCTRL_MATCH_ALL_MATCH = 0x0
	// When this bit is set to 1 and the I 2C is in monitor mode, an interrupt will be generated on ANY address received. This will enable the part to monitor all traffic on the bus.
	I2C_MMCTRL_MATCH_ALL_ANYINT = 0x1
	// Position of RESERVED field.
	I2C_MMCTRL_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	I2C_MMCTRL_RESERVED_Msk = 0xfffffff8

	// ADR1: I2C Slave Address Register 1. Contains the 7-bit slave address for operation of the I2C interface in slave mode, and is not used in master mode. The least significant bit determines whether a slave responds to the General Call address.
	// Position of GC field.
	I2C_ADR_GC_Pos = 0x0
	// Bit mask of GC field.
	I2C_ADR_GC_Msk = 0x1
	// Bit GC.
	I2C_ADR_GC = 0x1
	// Position of Address field.
	I2C_ADR_Address_Pos = 0x1
	// Bit mask of Address field.
	I2C_ADR_Address_Msk = 0xfe
	// Position of RESERVED field.
	I2C_ADR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_ADR_RESERVED_Msk = 0xffffff00

	// DATA_BUFFER: Data buffer register. The contents of the 8 MSBs of the I2DAT shift register will be transferred to the DATA_BUFFER automatically after every nine bits (8 bits of data plus ACK or NACK) has been received on the bus.
	// Position of Data field.
	I2C_DATA_BUFFER_Data_Pos = 0x0
	// Bit mask of Data field.
	I2C_DATA_BUFFER_Data_Msk = 0xff
	// Position of RESERVED field.
	I2C_DATA_BUFFER_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_DATA_BUFFER_RESERVED_Msk = 0xffffff00

	// MASK0: I2C Slave address mask register n. This mask register is associated with I2ADRn to determine an address match. The mask register has no effect when comparing to the General Call address (0000000).
	// Position of RESERVED field.
	I2C_MASK_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	I2C_MASK_RESERVED_Msk = 0x1
	// Bit RESERVED.
	I2C_MASK_RESERVED = 0x1
	// Position of MASK field.
	I2C_MASK_MASK_Pos = 0x1
	// Bit mask of MASK field.
	I2C_MASK_MASK_Msk = 0xfe
	// Position of RESERVED field.
	I2C_MASK_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	I2C_MASK_RESERVED_Msk = 0xffffff00
)

// Bitfields for WWDT: Product name title=UM10375 Chapter title=LPC13xx Windowed WatchDog Timer (WWDT) Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// MOD: Watchdog mode register. This register contains the basic mode and status of the Watchdog Timer.
	// Position of WDEN field.
	WWDT_MOD_WDEN_Pos = 0x0
	// Bit mask of WDEN field.
	WWDT_MOD_WDEN_Msk = 0x1
	// Bit WDEN.
	WWDT_MOD_WDEN = 0x1
	// The watchdog timer is stopped.
	WWDT_MOD_WDEN_STOP = 0x0
	// The watchdog timer is running.
	WWDT_MOD_WDEN_RUN = 0x1
	// Position of WDRESET field.
	WWDT_MOD_WDRESET_Pos = 0x1
	// Bit mask of WDRESET field.
	WWDT_MOD_WDRESET_Msk = 0x2
	// Bit WDRESET.
	WWDT_MOD_WDRESET = 0x2
	// A watchdog timeout will not cause a chip reset.
	WWDT_MOD_WDRESET_RESET = 0x0
	// A watchdog timeout will cause a chip reset.
	WWDT_MOD_WDRESET_INTERRUPT = 0x1
	// Position of WDTOF field.
	WWDT_MOD_WDTOF_Pos = 0x2
	// Bit mask of WDTOF field.
	WWDT_MOD_WDTOF_Msk = 0x4
	// Bit WDTOF.
	WWDT_MOD_WDTOF = 0x4
	// Position of WDINT field.
	WWDT_MOD_WDINT_Pos = 0x3
	// Bit mask of WDINT field.
	WWDT_MOD_WDINT_Msk = 0x8
	// Bit WDINT.
	WWDT_MOD_WDINT = 0x8
	// Position of WDPROTECT field.
	WWDT_MOD_WDPROTECT_Pos = 0x4
	// Bit mask of WDPROTECT field.
	WWDT_MOD_WDPROTECT_Msk = 0x10
	// Bit WDPROTECT.
	WWDT_MOD_WDPROTECT = 0x10
	// The watchdog reload value (WDTC) can be changed at any time.
	WWDT_MOD_WDPROTECT_ANYTIME = 0x0
	// The watchdog reload value (WDTC) can be changed only after the counter is below the value of WDWARNINT and WDWINDOW. Note: this mode is intended for use only when WDRESET =1.
	WWDT_MOD_WDPROTECT_MATCH = 0x1
	// Position of RESERVED field.
	WWDT_MOD_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	WWDT_MOD_RESERVED_Msk = 0xffffffe0

	// TC: Watchdog timer constant register. This register determines the time-out value.
	// Position of Count field.
	WWDT_TC_Count_Pos = 0x0
	// Bit mask of Count field.
	WWDT_TC_Count_Msk = 0xffffff
	// Position of RESERVED field.
	WWDT_TC_RESERVED_Pos = 0x18
	// Bit mask of RESERVED field.
	WWDT_TC_RESERVED_Msk = 0xff000000

	// FEED: Watchdog feed sequence register. Writing 0xAA followed by 0x55 to this register reloads the Watchdog timer with the value contained in WDTC.
	// Position of Feed field.
	WWDT_FEED_Feed_Pos = 0x0
	// Bit mask of Feed field.
	WWDT_FEED_Feed_Msk = 0xff
	// Position of RESERVED field.
	WWDT_FEED_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	WWDT_FEED_RESERVED_Msk = 0xffffff00

	// TV: Watchdog timer value register. This register reads out the current value of the Watchdog timer.
	// Position of Count field.
	WWDT_TV_Count_Pos = 0x0
	// Bit mask of Count field.
	WWDT_TV_Count_Msk = 0xffffff
	// Position of RESERVED field.
	WWDT_TV_RESERVED_Pos = 0x18
	// Bit mask of RESERVED field.
	WWDT_TV_RESERVED_Msk = 0xff000000

	// WARNINT: Watchdog Warning Interrupt compare value.
	// Position of WARNINT field.
	WWDT_WARNINT_WARNINT_Pos = 0x0
	// Bit mask of WARNINT field.
	WWDT_WARNINT_WARNINT_Msk = 0x3ff
	// Position of RESERVED field.
	WWDT_WARNINT_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	WWDT_WARNINT_RESERVED_Msk = 0xfffffc00

	// WINDOW: Watchdog Window compare value.
	// Position of WINDOW field.
	WWDT_WINDOW_WINDOW_Pos = 0x0
	// Bit mask of WINDOW field.
	WWDT_WINDOW_WINDOW_Msk = 0xffffff
	// Position of RESERVED field.
	WWDT_WINDOW_RESERVED_Pos = 0x18
	// Bit mask of RESERVED field.
	WWDT_WINDOW_RESERVED_Msk = 0xff000000
)

// Bitfields for UART: Product name title=UM10375 Chapter title=LPC13xx UART Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// RBR: Receiver Buffer Register. Contains the next received character to be read. When DLAB=0.
	// Position of RBR field.
	UART_RBR_RBR_Pos = 0x0
	// Bit mask of RBR field.
	UART_RBR_RBR_Msk = 0xff
	// Position of RESERVED field.
	UART_RBR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_RBR_RESERVED_Msk = 0xffffff00

	// THR: Transmit Holding Register. The next character to be transmitted is written here. When DLAB=0.
	// Position of THR field.
	UART_THR_THR_Pos = 0x0
	// Bit mask of THR field.
	UART_THR_THR_Msk = 0xff
	// Position of RESERVED field.
	UART_THR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_THR_RESERVED_Msk = 0xffffff00

	// DLL: Divisor Latch LSB. Least significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. When DLAB=1.
	// Position of DLLSB field.
	UART_DLL_DLLSB_Pos = 0x0
	// Bit mask of DLLSB field.
	UART_DLL_DLLSB_Msk = 0xff
	// Position of RESERVED field.
	UART_DLL_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_DLL_RESERVED_Msk = 0xffffff00

	// DLM: Divisor Latch MSB. Most significant byte of the baud rate divisor value. The full divisor is used to generate a baud rate from the fractional rate divider. When DLAB=1.
	// Position of DLMSB field.
	UART_DLM_DLMSB_Pos = 0x0
	// Bit mask of DLMSB field.
	UART_DLM_DLMSB_Msk = 0xff
	// Position of RESERVED field.
	UART_DLM_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_DLM_RESERVED_Msk = 0xffffff00

	// IER: Interrupt Enable Register. Contains individual interrupt enable bits for the 7 potential UART interrupts. When DLAB=0.
	// Position of RBRIE field.
	UART_IER_RBRIE_Pos = 0x0
	// Bit mask of RBRIE field.
	UART_IER_RBRIE_Msk = 0x1
	// Bit RBRIE.
	UART_IER_RBRIE = 0x1
	// Disable the RDA interrupt.
	UART_IER_RBRIE_DISABLE = 0x0
	// Enable the RDA interrupt.
	UART_IER_RBRIE_ENABLE = 0x1
	// Position of THREIE field.
	UART_IER_THREIE_Pos = 0x1
	// Bit mask of THREIE field.
	UART_IER_THREIE_Msk = 0x2
	// Bit THREIE.
	UART_IER_THREIE = 0x2
	// Disable the THRE interrupt.
	UART_IER_THREIE_DISABLE = 0x0
	// Enable the THRE interrupt.
	UART_IER_THREIE_ENABLE = 0x1
	// Position of RXLIE field.
	UART_IER_RXLIE_Pos = 0x2
	// Bit mask of RXLIE field.
	UART_IER_RXLIE_Msk = 0x4
	// Bit RXLIE.
	UART_IER_RXLIE = 0x4
	// Disable the RX line status interrupts.
	UART_IER_RXLIE_DISABLE = 0x0
	// Enable the RX line status interrupts.
	UART_IER_RXLIE_ENABLE = 0x1
	// Position of RESERVED field.
	UART_IER_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	UART_IER_RESERVED_Msk = 0x8
	// Bit RESERVED.
	UART_IER_RESERVED = 0x8
	// Position of RESERVED field.
	UART_IER_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	UART_IER_RESERVED_Msk = 0x70
	// Position of RESERVED field.
	UART_IER_RESERVED_Pos = 0x7
	// Bit mask of RESERVED field.
	UART_IER_RESERVED_Msk = 0x80
	// Bit RESERVED.
	UART_IER_RESERVED = 0x80
	// Position of ABEOINTEN field.
	UART_IER_ABEOINTEN_Pos = 0x8
	// Bit mask of ABEOINTEN field.
	UART_IER_ABEOINTEN_Msk = 0x100
	// Bit ABEOINTEN.
	UART_IER_ABEOINTEN = 0x100
	// Disable end of auto-baud Interrupt.
	UART_IER_ABEOINTEN_DISABLE = 0x0
	// Enable end of auto-baud Interrupt.
	UART_IER_ABEOINTEN_ENABLE = 0x1
	// Position of ABTOINTEN field.
	UART_IER_ABTOINTEN_Pos = 0x9
	// Bit mask of ABTOINTEN field.
	UART_IER_ABTOINTEN_Msk = 0x200
	// Bit ABTOINTEN.
	UART_IER_ABTOINTEN = 0x200
	// Disable auto-baud time-out Interrupt.
	UART_IER_ABTOINTEN_DISABLE = 0x0
	// Enable auto-baud time-out Interrupt.
	UART_IER_ABTOINTEN_ENABLE = 0x1
	// Position of RESERVED field.
	UART_IER_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	UART_IER_RESERVED_Msk = 0xfffffc00

	// IIR: Interrupt ID Register. Identifies which interrupt(s) are pending.
	// Position of INTSTATUS field.
	UART_IIR_INTSTATUS_Pos = 0x0
	// Bit mask of INTSTATUS field.
	UART_IIR_INTSTATUS_Msk = 0x1
	// Bit INTSTATUS.
	UART_IIR_INTSTATUS = 0x1
	// At least one interrupt is pending.
	UART_IIR_INTSTATUS_INT = 0x0
	// No interrupt is pending.
	UART_IIR_INTSTATUS_NOINT = 0x1
	// Position of INTID field.
	UART_IIR_INTID_Pos = 0x1
	// Bit mask of INTID field.
	UART_IIR_INTID_Msk = 0xe
	// 1 - Receive Line Status (RLS).
	UART_IIR_INTID_RECEIVE = 0x3
	// 2a - Receive Data Available (RDA).
	UART_IIR_INTID_RDA = 0x2
	// 2b - Character Time-out Indicator (CTI).
	UART_IIR_INTID_CTIMEOUT = 0x6
	// 3 - THRE Interrupt.
	UART_IIR_INTID_THRE = 0x1
	// 4 - Modem interrupt.
	UART_IIR_INTID_MODEM = 0x0
	// Position of RESERVED field.
	UART_IIR_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	UART_IIR_RESERVED_Msk = 0x30
	// Position of FIFOEN field.
	UART_IIR_FIFOEN_Pos = 0x6
	// Bit mask of FIFOEN field.
	UART_IIR_FIFOEN_Msk = 0xc0
	// Position of ABEOINT field.
	UART_IIR_ABEOINT_Pos = 0x8
	// Bit mask of ABEOINT field.
	UART_IIR_ABEOINT_Msk = 0x100
	// Bit ABEOINT.
	UART_IIR_ABEOINT = 0x100
	// Position of ABTOINT field.
	UART_IIR_ABTOINT_Pos = 0x9
	// Bit mask of ABTOINT field.
	UART_IIR_ABTOINT_Msk = 0x200
	// Bit ABTOINT.
	UART_IIR_ABTOINT = 0x200
	// Position of RESERVED field.
	UART_IIR_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	UART_IIR_RESERVED_Msk = 0xfffffc00

	// FCR: FIFO Control Register. Controls UART FIFO usage and modes.
	// Position of FIFOEN field.
	UART_FCR_FIFOEN_Pos = 0x0
	// Bit mask of FIFOEN field.
	UART_FCR_FIFOEN_Msk = 0x1
	// Bit FIFOEN.
	UART_FCR_FIFOEN = 0x1
	// UART FIFOs are disabled. Must not be used in the application.
	UART_FCR_FIFOEN_DISABLED = 0x0
	// Active high enable for both UART Rx and TX FIFOs and FCR[7:1] access. This bit must be set for proper UART operation. Any transition on this bit will automatically clear the UART FIFOs.
	UART_FCR_FIFOEN_ENABLED = 0x1
	// Position of RXFIFOR field.
	UART_FCR_RXFIFOR_Pos = 0x1
	// Bit mask of RXFIFOR field.
	UART_FCR_RXFIFOR_Msk = 0x2
	// Bit RXFIFOR.
	UART_FCR_RXFIFOR = 0x2
	// No impact on either of UART FIFOs.
	UART_FCR_RXFIFOR_NOACTION = 0x0
	// Writing a logic 1 to FCR[1] will clear all bytes in UART Rx FIFO, reset the pointer logic. This bit is self-clearing.
	UART_FCR_RXFIFOR_CLEAR = 0x1
	// Position of TXFIFOR field.
	UART_FCR_TXFIFOR_Pos = 0x2
	// Bit mask of TXFIFOR field.
	UART_FCR_TXFIFOR_Msk = 0x4
	// Bit TXFIFOR.
	UART_FCR_TXFIFOR = 0x4
	// No impact on either of UART FIFOs.
	UART_FCR_TXFIFOR_NOACTION = 0x0
	// Writing a logic 1 to FCR[2] will clear all bytes in UART TX FIFO, reset the pointer logic. This bit is self-clearing.
	UART_FCR_TXFIFOR_CLEAR = 0x1
	// Position of RESERVED field.
	UART_FCR_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	UART_FCR_RESERVED_Msk = 0x8
	// Bit RESERVED.
	UART_FCR_RESERVED = 0x8
	// Position of RESERVED field.
	UART_FCR_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	UART_FCR_RESERVED_Msk = 0x30
	// Position of RXTLVL field.
	UART_FCR_RXTLVL_Pos = 0x6
	// Bit mask of RXTLVL field.
	UART_FCR_RXTLVL_Msk = 0xc0
	// Trigger level 0 (1 character or 0x01).
	UART_FCR_RXTLVL_TRIGGER_LEVEL_0_1_C = 0x0
	// Trigger level 1 (4 characters or 0x04).
	UART_FCR_RXTLVL_TRIGGER_LEVEL_1_4_C = 0x1
	// Trigger level 2 (8 characters or 0x08).
	UART_FCR_RXTLVL_TRIGGER_LEVEL_2_8_C = 0x2
	// Trigger level 3 (14 characters or 0x0E).
	UART_FCR_RXTLVL_TRIGGER_LEVEL_3_14_ = 0x3
	// Position of RESERVED field.
	UART_FCR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_FCR_RESERVED_Msk = 0xffffff00

	// LCR: Line Control Register. Contains controls for frame formatting and break generation.
	// Position of WLS field.
	UART_LCR_WLS_Pos = 0x0
	// Bit mask of WLS field.
	UART_LCR_WLS_Msk = 0x3
	// 5-bit character length.
	UART_LCR_WLS_5_BIT_CHARACTER_LENG = 0x0
	// 6-bit character length.
	UART_LCR_WLS_6_BIT_CHARACTER_LENG = 0x1
	// 7-bit character length.
	UART_LCR_WLS_7_BIT_CHARACTER_LENG = 0x2
	// 8-bit character length.
	UART_LCR_WLS_8_BIT_CHARACTER_LENG = 0x3
	// Position of SBS field.
	UART_LCR_SBS_Pos = 0x2
	// Bit mask of SBS field.
	UART_LCR_SBS_Msk = 0x4
	// Bit SBS.
	UART_LCR_SBS = 0x4
	// 1 stop bit.
	UART_LCR_SBS_1_STOP_BIT_ = 0x0
	// 2 stop bits (1.5 if LCR[1:0]=00).
	UART_LCR_SBS_2_STOP_BITS_1_5_IF_ = 0x1
	// Position of PE field.
	UART_LCR_PE_Pos = 0x3
	// Bit mask of PE field.
	UART_LCR_PE_Msk = 0x8
	// Bit PE.
	UART_LCR_PE = 0x8
	// Disable parity generation and checking.
	UART_LCR_PE_DISABLE_PARITY_GENER = 0x0
	// Enable parity generation and checking.
	UART_LCR_PE_ENABLE_PARITY_GENERA = 0x1
	// Position of PS field.
	UART_LCR_PS_Pos = 0x4
	// Bit mask of PS field.
	UART_LCR_PS_Msk = 0x30
	// Odd parity. Number of 1s in the transmitted character and the attached parity bit will be odd.
	UART_LCR_PS_ODD_PARITY_NUMBER_O = 0x0
	// Even Parity. Number of 1s in the transmitted character and the attached parity bit will be even.
	UART_LCR_PS_EVEN_PARITY_NUMBER_ = 0x1
	// Forced 1 stick parity.
	UART_LCR_PS_FORCED_1_STICK_PARIT = 0x2
	// Forced 0 stick parity.
	UART_LCR_PS_FORCED_0_STICK_PARIT = 0x3
	// Position of BC field.
	UART_LCR_BC_Pos = 0x6
	// Bit mask of BC field.
	UART_LCR_BC_Msk = 0x40
	// Bit BC.
	UART_LCR_BC = 0x40
	// Disable break transmission.
	UART_LCR_BC_DISABLE_BREAK_TRANSM = 0x0
	// Enable break transmission. Output pin UART TXD is forced to logic 0 when LCR[6] is active high.
	UART_LCR_BC_ENABLE_BREAK_TRANSMI = 0x1
	// Position of DLAB field.
	UART_LCR_DLAB_Pos = 0x7
	// Bit mask of DLAB field.
	UART_LCR_DLAB_Msk = 0x80
	// Bit DLAB.
	UART_LCR_DLAB = 0x80
	// Disable access to Divisor Latches.
	UART_LCR_DLAB_DISABLE_ACCESS_TO_DI = 0x0
	// Enable access to Divisor Latches.
	UART_LCR_DLAB_ENABLE_ACCESS_TO_DIV = 0x1
	// Position of RESERVED field.
	UART_LCR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_LCR_RESERVED_Msk = 0xffffff00

	// MCR: Modem control register
	// Position of DTRCTRL field.
	UART_MCR_DTRCTRL_Pos = 0x0
	// Bit mask of DTRCTRL field.
	UART_MCR_DTRCTRL_Msk = 0x1
	// Bit DTRCTRL.
	UART_MCR_DTRCTRL = 0x1
	// Position of RTSCTRL field.
	UART_MCR_RTSCTRL_Pos = 0x1
	// Bit mask of RTSCTRL field.
	UART_MCR_RTSCTRL_Msk = 0x2
	// Bit RTSCTRL.
	UART_MCR_RTSCTRL = 0x2
	// Position of RESERVED field.
	UART_MCR_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	UART_MCR_RESERVED_Msk = 0xc
	// Position of LMS field.
	UART_MCR_LMS_Pos = 0x4
	// Bit mask of LMS field.
	UART_MCR_LMS_Msk = 0x10
	// Bit LMS.
	UART_MCR_LMS = 0x10
	// Position of RESERVED field.
	UART_MCR_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	UART_MCR_RESERVED_Msk = 0x20
	// Bit RESERVED.
	UART_MCR_RESERVED = 0x20
	// Position of RTSEN field.
	UART_MCR_RTSEN_Pos = 0x6
	// Bit mask of RTSEN field.
	UART_MCR_RTSEN_Msk = 0x40
	// Bit RTSEN.
	UART_MCR_RTSEN = 0x40
	// Disable auto-rts flow control.
	UART_MCR_RTSEN_DISABLE_AUTO_RTS_FLO = 0x0
	// Enable auto-rts flow control.
	UART_MCR_RTSEN_ENABLE_AUTO_RTS_FLOW = 0x1
	// Position of CTSEN field.
	UART_MCR_CTSEN_Pos = 0x7
	// Bit mask of CTSEN field.
	UART_MCR_CTSEN_Msk = 0x80
	// Bit CTSEN.
	UART_MCR_CTSEN = 0x80
	// Disable auto-cts flow control.
	UART_MCR_CTSEN_DISABLE_AUTO_CTS_FLO = 0x0
	// Enable auto-cts flow control.
	UART_MCR_CTSEN_ENABLE_AUTO_CTS_FLOW = 0x1
	// Position of RESERVED field.
	UART_MCR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_MCR_RESERVED_Msk = 0xffffff00

	// LSR: Line Status Register. Contains flags for transmit and receive status, including line errors.
	// Position of RDR field.
	UART_LSR_RDR_Pos = 0x0
	// Bit mask of RDR field.
	UART_LSR_RDR_Msk = 0x1
	// Bit RDR.
	UART_LSR_RDR = 0x1
	// RBR is empty.
	UART_LSR_RDR_RBR_IS_EMPTY_ = 0x0
	// RBR contains valid data.
	UART_LSR_RDR_RBR_CONTAINS_VALID = 0x1
	// Position of OE field.
	UART_LSR_OE_Pos = 0x1
	// Bit mask of OE field.
	UART_LSR_OE_Msk = 0x2
	// Bit OE.
	UART_LSR_OE = 0x2
	// Overrun error status is inactive.
	UART_LSR_OE_INACTIVE = 0x0
	// Overrun error status is active.
	UART_LSR_OE_ACTIVE = 0x1
	// Position of PE field.
	UART_LSR_PE_Pos = 0x2
	// Bit mask of PE field.
	UART_LSR_PE_Msk = 0x4
	// Bit PE.
	UART_LSR_PE = 0x4
	// Parity error status is inactive.
	UART_LSR_PE_INACTIVE = 0x0
	// Parity error status is active.
	UART_LSR_PE_ACTIVE = 0x1
	// Position of FE field.
	UART_LSR_FE_Pos = 0x3
	// Bit mask of FE field.
	UART_LSR_FE_Msk = 0x8
	// Bit FE.
	UART_LSR_FE = 0x8
	// Framing error status is inactive.
	UART_LSR_FE_INACTIVE = 0x0
	// Framing error status is active.
	UART_LSR_FE_ACTIVE = 0x1
	// Position of BI field.
	UART_LSR_BI_Pos = 0x4
	// Bit mask of BI field.
	UART_LSR_BI_Msk = 0x10
	// Bit BI.
	UART_LSR_BI = 0x10
	// Break interrupt status is inactive.
	UART_LSR_BI_INACTIVE = 0x0
	// Break interrupt status is active.
	UART_LSR_BI_ACTIVE = 0x1
	// Position of THRE field.
	UART_LSR_THRE_Pos = 0x5
	// Bit mask of THRE field.
	UART_LSR_THRE_Msk = 0x20
	// Bit THRE.
	UART_LSR_THRE = 0x20
	// THR contains valid data.
	UART_LSR_THRE_VALID = 0x0
	// THR is empty.
	UART_LSR_THRE_EMPTY = 0x1
	// Position of TEMT field.
	UART_LSR_TEMT_Pos = 0x6
	// Bit mask of TEMT field.
	UART_LSR_TEMT_Msk = 0x40
	// Bit TEMT.
	UART_LSR_TEMT = 0x40
	// THR and/or the TSR contains valid data.
	UART_LSR_TEMT_VALID = 0x0
	// THR and the TSR are empty.
	UART_LSR_TEMT_EMPTY = 0x1
	// Position of RXFE field.
	UART_LSR_RXFE_Pos = 0x7
	// Bit mask of RXFE field.
	UART_LSR_RXFE_Msk = 0x80
	// Bit RXFE.
	UART_LSR_RXFE = 0x80
	// RBR contains no UART RX errors or FCR[0]=0.
	UART_LSR_RXFE_NOERROR = 0x0
	// UART RBR contains at least one UART RX error.
	UART_LSR_RXFE_ERRORS = 0x1
	// Position of RESERVED field.
	UART_LSR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_LSR_RESERVED_Msk = 0xffffff00

	// MSR: Modem status register
	// Position of DELTACTS field.
	UART_MSR_DELTACTS_Pos = 0x0
	// Bit mask of DELTACTS field.
	UART_MSR_DELTACTS_Msk = 0x1
	// Bit DELTACTS.
	UART_MSR_DELTACTS = 0x1
	// No change detected on modem input CTS.
	UART_MSR_DELTACTS_NO_STATE_CHANGE = 0x0
	// State change detected on modem input CTS.
	UART_MSR_DELTACTS_STATE_CHANGE_DETECTE = 0x1
	// Position of DELTADSR field.
	UART_MSR_DELTADSR_Pos = 0x1
	// Bit mask of DELTADSR field.
	UART_MSR_DELTADSR_Msk = 0x2
	// Bit DELTADSR.
	UART_MSR_DELTADSR = 0x2
	// No change detected on modem input DSR.
	UART_MSR_DELTADSR_NO_STATE_CHANGE = 0x0
	// State change detected on modem input DSR.
	UART_MSR_DELTADSR_STATE_CHANGE_DETECTE = 0x1
	// Position of TERI field.
	UART_MSR_TERI_Pos = 0x2
	// Bit mask of TERI field.
	UART_MSR_TERI_Msk = 0x4
	// Bit TERI.
	UART_MSR_TERI = 0x4
	// No change detected on modem input, RI.
	UART_MSR_TERI_NO_STATE_CHANGE = 0x0
	// Low-to-high transition detected on RI.
	UART_MSR_TERI_LOW_TO_HIGH_TRANSITI = 0x1
	// Position of DELTADCD field.
	UART_MSR_DELTADCD_Pos = 0x3
	// Bit mask of DELTADCD field.
	UART_MSR_DELTADCD_Msk = 0x8
	// Bit DELTADCD.
	UART_MSR_DELTADCD = 0x8
	// No change detected on modem input DCD.
	UART_MSR_DELTADCD_NO_STATE_CHANGE = 0x0
	// State change detected on modem input DCD.
	UART_MSR_DELTADCD_STATE_CHANGE_DETECTE = 0x1
	// Position of CTS field.
	UART_MSR_CTS_Pos = 0x4
	// Bit mask of CTS field.
	UART_MSR_CTS_Msk = 0x10
	// Bit CTS.
	UART_MSR_CTS = 0x10
	// Position of DSR field.
	UART_MSR_DSR_Pos = 0x5
	// Bit mask of DSR field.
	UART_MSR_DSR_Msk = 0x20
	// Bit DSR.
	UART_MSR_DSR = 0x20
	// Position of RI field.
	UART_MSR_RI_Pos = 0x6
	// Bit mask of RI field.
	UART_MSR_RI_Msk = 0x40
	// Bit RI.
	UART_MSR_RI = 0x40
	// Position of DCD field.
	UART_MSR_DCD_Pos = 0x7
	// Bit mask of DCD field.
	UART_MSR_DCD_Msk = 0x80
	// Bit DCD.
	UART_MSR_DCD = 0x80
	// Position of RESERVED field.
	UART_MSR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_MSR_RESERVED_Msk = 0xffffff00

	// SCR: Scratch Pad Register. Eight-bit temporary storage for software.
	// Position of Pad field.
	UART_SCR_Pad_Pos = 0x0
	// Bit mask of Pad field.
	UART_SCR_Pad_Msk = 0xff
	// Position of RESERVED field.
	UART_SCR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_SCR_RESERVED_Msk = 0xffffff00

	// ACR: Auto-baud Control Register. Contains controls for the auto-baud feature.
	// Position of START field.
	UART_ACR_START_Pos = 0x0
	// Bit mask of START field.
	UART_ACR_START_Msk = 0x1
	// Bit START.
	UART_ACR_START = 0x1
	// Auto-baud stop (auto-baud is not running).
	UART_ACR_START_AUTO_BAUD_STOP_AUTO = 0x0
	// Auto-baud start (auto-baud is running). Auto-baud run bit. This bit is automatically cleared after auto-baud completion.
	UART_ACR_START_AUTO_BAUD_START_AUT = 0x1
	// Position of MODE field.
	UART_ACR_MODE_Pos = 0x1
	// Bit mask of MODE field.
	UART_ACR_MODE_Msk = 0x2
	// Bit MODE.
	UART_ACR_MODE = 0x2
	// Mode 0.
	UART_ACR_MODE_MODE_0_ = 0x0
	// Mode 1.
	UART_ACR_MODE_MODE_1_ = 0x1
	// Position of AUTORESTART field.
	UART_ACR_AUTORESTART_Pos = 0x2
	// Bit mask of AUTORESTART field.
	UART_ACR_AUTORESTART_Msk = 0x4
	// Bit AUTORESTART.
	UART_ACR_AUTORESTART = 0x4
	// No restart
	UART_ACR_AUTORESTART_NO_RESTART = 0x0
	// Restart in case of time-out (counter restarts at next UART Rx falling edge)
	UART_ACR_AUTORESTART_RESTART_IN_CASE_OF_T = 0x1
	// Position of RESERVED field.
	UART_ACR_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	UART_ACR_RESERVED_Msk = 0xf8
	// Position of ABEOINTCLR field.
	UART_ACR_ABEOINTCLR_Pos = 0x8
	// Bit mask of ABEOINTCLR field.
	UART_ACR_ABEOINTCLR_Msk = 0x100
	// Bit ABEOINTCLR.
	UART_ACR_ABEOINTCLR = 0x100
	// Writing a 0 has no impact.
	UART_ACR_ABEOINTCLR_NOACTION = 0x0
	// Writing a 1 will clear the corresponding interrupt in the IIR.
	UART_ACR_ABEOINTCLR_CLEAR = 0x1
	// Position of ABTOINTCLR field.
	UART_ACR_ABTOINTCLR_Pos = 0x9
	// Bit mask of ABTOINTCLR field.
	UART_ACR_ABTOINTCLR_Msk = 0x200
	// Bit ABTOINTCLR.
	UART_ACR_ABTOINTCLR = 0x200
	// Writing a 0 has no impact.
	UART_ACR_ABTOINTCLR_NOACTION = 0x0
	// Writing a 1 will clear the corresponding interrupt in the IIR.
	UART_ACR_ABTOINTCLR_CLEAR = 0x1
	// Position of RESERVED field.
	UART_ACR_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	UART_ACR_RESERVED_Msk = 0xfffffc00

	// FDR: Fractional Divider Register. Generates a clock input for the baud rate divider.
	// Position of DIVADDVAL field.
	UART_FDR_DIVADDVAL_Pos = 0x0
	// Bit mask of DIVADDVAL field.
	UART_FDR_DIVADDVAL_Msk = 0xf
	// Position of MULVAL field.
	UART_FDR_MULVAL_Pos = 0x4
	// Bit mask of MULVAL field.
	UART_FDR_MULVAL_Msk = 0xf0
	// Position of RESERVED field.
	UART_FDR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_FDR_RESERVED_Msk = 0xffffff00

	// TER: Transmit Enable Register. Turns off UART transmitter for use with software flow control.
	// Position of RESERVED field.
	UART_TER_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	UART_TER_RESERVED_Msk = 0x7f
	// Position of TXEN field.
	UART_TER_TXEN_Pos = 0x7
	// Bit mask of TXEN field.
	UART_TER_TXEN_Msk = 0x80
	// Bit TXEN.
	UART_TER_TXEN = 0x80
	// Position of RESERVED field.
	UART_TER_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_TER_RESERVED_Msk = 0xffffff00

	// RS485CTRL: RS-485/EIA-485 Control. Contains controls to configure various aspects of RS-485/EIA-485 modes.
	// Position of NMMEN field.
	UART_RS485CTRL_NMMEN_Pos = 0x0
	// Bit mask of NMMEN field.
	UART_RS485CTRL_NMMEN_Msk = 0x1
	// Bit NMMEN.
	UART_RS485CTRL_NMMEN = 0x1
	// RS-485/EIA-485 Normal Multidrop Mode (NMM) is disabled.
	UART_RS485CTRL_NMMEN_DISABLED = 0x0
	// RS-485/EIA-485 Normal Multidrop Mode (NMM) is enabled. In this mode, an address is detected when a received byte causes the UART to set the parity error and generate an interrupt.
	UART_RS485CTRL_NMMEN_ENABLED = 0x1
	// Position of RXDIS field.
	UART_RS485CTRL_RXDIS_Pos = 0x1
	// Bit mask of RXDIS field.
	UART_RS485CTRL_RXDIS_Msk = 0x2
	// Bit RXDIS.
	UART_RS485CTRL_RXDIS = 0x2
	// The receiver is enabled.
	UART_RS485CTRL_RXDIS_ENABLED = 0x0
	// The receiver is disabled.
	UART_RS485CTRL_RXDIS_DISABLED = 0x1
	// Position of AADEN field.
	UART_RS485CTRL_AADEN_Pos = 0x2
	// Bit mask of AADEN field.
	UART_RS485CTRL_AADEN_Msk = 0x4
	// Bit AADEN.
	UART_RS485CTRL_AADEN = 0x4
	// Auto Address Detect (AAD) is disabled.
	UART_RS485CTRL_AADEN_DISABLED = 0x0
	// Auto Address Detect (AAD) is enabled.
	UART_RS485CTRL_AADEN_ENABLED = 0x1
	// Position of SEL field.
	UART_RS485CTRL_SEL_Pos = 0x3
	// Bit mask of SEL field.
	UART_RS485CTRL_SEL_Msk = 0x8
	// Bit SEL.
	UART_RS485CTRL_SEL = 0x8
	// If direction control is enabled (bit DCTRL = 1), pin RTS is used for direction control.
	UART_RS485CTRL_SEL_RTS = 0x0
	// If direction control is enabled (bit DCTRL = 1), pin DTR is used for direction control.
	UART_RS485CTRL_SEL_DTR = 0x1
	// Position of DCTRL field.
	UART_RS485CTRL_DCTRL_Pos = 0x4
	// Bit mask of DCTRL field.
	UART_RS485CTRL_DCTRL_Msk = 0x10
	// Bit DCTRL.
	UART_RS485CTRL_DCTRL = 0x10
	// Disable Auto Direction Control.
	UART_RS485CTRL_DCTRL_DISABLE_AUTO_DIRECTI = 0x0
	// Enable Auto Direction Control.
	UART_RS485CTRL_DCTRL_ENABLE_AUTO_DIRECTIO = 0x1
	// Position of OINV field.
	UART_RS485CTRL_OINV_Pos = 0x5
	// Bit mask of OINV field.
	UART_RS485CTRL_OINV_Msk = 0x20
	// Bit OINV.
	UART_RS485CTRL_OINV = 0x20
	// The direction control pin will be driven to logic 0 when the transmitter has data to be sent. It will be driven to logic 1 after the last bit of data has been transmitted.
	UART_RS485CTRL_OINV_LOW = 0x0
	// The direction control pin will be driven to logic 1 when the transmitter has data to be sent. It will be driven to logic 0 after the last bit of data has been transmitted.
	UART_RS485CTRL_OINV_HIGH = 0x1
	// Position of RESERVED field.
	UART_RS485CTRL_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	UART_RS485CTRL_RESERVED_Msk = 0xffffffc0

	// RS485ADRMATCH: RS-485/EIA-485 address match. Contains the address match value for RS-485/EIA-485 mode.
	// Position of ADRMATCH field.
	UART_RS485ADRMATCH_ADRMATCH_Pos = 0x0
	// Bit mask of ADRMATCH field.
	UART_RS485ADRMATCH_ADRMATCH_Msk = 0xff
	// Position of RESERVED field.
	UART_RS485ADRMATCH_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_RS485ADRMATCH_RESERVED_Msk = 0xffffff00

	// RS485DLY: RS-485/EIA-485 direction control delay.
	// Position of DLY field.
	UART_RS485DLY_DLY_Pos = 0x0
	// Bit mask of DLY field.
	UART_RS485DLY_DLY_Msk = 0xff
	// Position of RESERVED field.
	UART_RS485DLY_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	UART_RS485DLY_RESERVED_Msk = 0xffffff00
)

// Bitfields for CT16B0: Product name title=UM10375 Chapter title=LPC13xx 16-bit timer/counters (CT16B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// BIR: Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.
	// Position of MR0INT field.
	CT16B0_BIR_MR0INT_Pos = 0x0
	// Bit mask of MR0INT field.
	CT16B0_BIR_MR0INT_Msk = 0x1
	// Bit MR0INT.
	CT16B0_BIR_MR0INT = 0x1
	// Position of MR1INT field.
	CT16B0_BIR_MR1INT_Pos = 0x1
	// Bit mask of MR1INT field.
	CT16B0_BIR_MR1INT_Msk = 0x2
	// Bit MR1INT.
	CT16B0_BIR_MR1INT = 0x2
	// Position of MR2INT field.
	CT16B0_BIR_MR2INT_Pos = 0x2
	// Bit mask of MR2INT field.
	CT16B0_BIR_MR2INT_Msk = 0x4
	// Bit MR2INT.
	CT16B0_BIR_MR2INT = 0x4
	// Position of MR3INT field.
	CT16B0_BIR_MR3INT_Pos = 0x3
	// Bit mask of MR3INT field.
	CT16B0_BIR_MR3INT_Msk = 0x8
	// Bit MR3INT.
	CT16B0_BIR_MR3INT = 0x8
	// Position of CR0INT field.
	CT16B0_BIR_CR0INT_Pos = 0x4
	// Bit mask of CR0INT field.
	CT16B0_BIR_CR0INT_Msk = 0x10
	// Bit CR0INT.
	CT16B0_BIR_CR0INT = 0x10
	// Position of RESERVED field.
	CT16B0_BIR_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	CT16B0_BIR_RESERVED_Msk = 0xffffffe0

	// BTCR: Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
	// Position of CEN field.
	CT16B0_BTCR_CEN_Pos = 0x0
	// Bit mask of CEN field.
	CT16B0_BTCR_CEN_Msk = 0x1
	// Bit CEN.
	CT16B0_BTCR_CEN = 0x1
	// Position of CRESET field.
	CT16B0_BTCR_CRESET_Pos = 0x1
	// Bit mask of CRESET field.
	CT16B0_BTCR_CRESET_Msk = 0x2
	// Bit CRESET.
	CT16B0_BTCR_CRESET = 0x2
	// Position of RESERVED field.
	CT16B0_BTCR_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	CT16B0_BTCR_RESERVED_Msk = 0xfffffffc

	// BTC: Timer Counter (TC). The 16-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.
	// Position of TC field.
	CT16B0_BTC_TC_Pos = 0x0
	// Bit mask of TC field.
	CT16B0_BTC_TC_Msk = 0xffff
	// Position of RESERVED field.
	CT16B0_BTC_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	CT16B0_BTC_RESERVED_Msk = 0xffff0000

	// BPR: Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.
	// Position of PR field.
	CT16B0_BPR_PR_Pos = 0x0
	// Bit mask of PR field.
	CT16B0_BPR_PR_Msk = 0xffff
	// Position of RESERVED field.
	CT16B0_BPR_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	CT16B0_BPR_RESERVED_Msk = 0xffff0000

	// BPC: Prescale Counter (PC). The 16-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.
	// Position of PC field.
	CT16B0_BPC_PC_Pos = 0x0
	// Bit mask of PC field.
	CT16B0_BPC_PC_Msk = 0xffff
	// Position of RESERVED field.
	CT16B0_BPC_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	CT16B0_BPC_RESERVED_Msk = 0xffff0000

	// BMCR: Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.
	// Position of MR0I field.
	CT16B0_BMCR_MR0I_Pos = 0x0
	// Bit mask of MR0I field.
	CT16B0_BMCR_MR0I_Msk = 0x1
	// Bit MR0I.
	CT16B0_BMCR_MR0I = 0x1
	// Enabled
	CT16B0_BMCR_MR0I_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR0I_DISABLED = 0x0
	// Position of MR0R field.
	CT16B0_BMCR_MR0R_Pos = 0x1
	// Bit mask of MR0R field.
	CT16B0_BMCR_MR0R_Msk = 0x2
	// Bit MR0R.
	CT16B0_BMCR_MR0R = 0x2
	// Enabled
	CT16B0_BMCR_MR0R_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR0R_DISABLED = 0x0
	// Position of MR0S field.
	CT16B0_BMCR_MR0S_Pos = 0x2
	// Bit mask of MR0S field.
	CT16B0_BMCR_MR0S_Msk = 0x4
	// Bit MR0S.
	CT16B0_BMCR_MR0S = 0x4
	// Enabled
	CT16B0_BMCR_MR0S_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR0S_DISABLED = 0x0
	// Position of MR1I field.
	CT16B0_BMCR_MR1I_Pos = 0x3
	// Bit mask of MR1I field.
	CT16B0_BMCR_MR1I_Msk = 0x8
	// Bit MR1I.
	CT16B0_BMCR_MR1I = 0x8
	// Enabled
	CT16B0_BMCR_MR1I_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR1I_DISABLED = 0x0
	// Position of MR1R field.
	CT16B0_BMCR_MR1R_Pos = 0x4
	// Bit mask of MR1R field.
	CT16B0_BMCR_MR1R_Msk = 0x10
	// Bit MR1R.
	CT16B0_BMCR_MR1R = 0x10
	// Enabled
	CT16B0_BMCR_MR1R_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR1R_DISABLED = 0x0
	// Position of MR1S field.
	CT16B0_BMCR_MR1S_Pos = 0x5
	// Bit mask of MR1S field.
	CT16B0_BMCR_MR1S_Msk = 0x20
	// Bit MR1S.
	CT16B0_BMCR_MR1S = 0x20
	// Enabled
	CT16B0_BMCR_MR1S_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR1S_DISABLED = 0x0
	// Position of MR2I field.
	CT16B0_BMCR_MR2I_Pos = 0x6
	// Bit mask of MR2I field.
	CT16B0_BMCR_MR2I_Msk = 0x40
	// Bit MR2I.
	CT16B0_BMCR_MR2I = 0x40
	// Enabled
	CT16B0_BMCR_MR2I_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR2I_DISABLED = 0x0
	// Position of MR2R field.
	CT16B0_BMCR_MR2R_Pos = 0x7
	// Bit mask of MR2R field.
	CT16B0_BMCR_MR2R_Msk = 0x80
	// Bit MR2R.
	CT16B0_BMCR_MR2R = 0x80
	// Enabled
	CT16B0_BMCR_MR2R_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR2R_DISABLED = 0x0
	// Position of MR2S field.
	CT16B0_BMCR_MR2S_Pos = 0x8
	// Bit mask of MR2S field.
	CT16B0_BMCR_MR2S_Msk = 0x100
	// Bit MR2S.
	CT16B0_BMCR_MR2S = 0x100
	// Enabled
	CT16B0_BMCR_MR2S_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR2S_DISABLED = 0x0
	// Position of MR3I field.
	CT16B0_BMCR_MR3I_Pos = 0x9
	// Bit mask of MR3I field.
	CT16B0_BMCR_MR3I_Msk = 0x200
	// Bit MR3I.
	CT16B0_BMCR_MR3I = 0x200
	// Enabled
	CT16B0_BMCR_MR3I_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR3I_DISABLED = 0x0
	// Position of MR3R field.
	CT16B0_BMCR_MR3R_Pos = 0xa
	// Bit mask of MR3R field.
	CT16B0_BMCR_MR3R_Msk = 0x400
	// Bit MR3R.
	CT16B0_BMCR_MR3R = 0x400
	// Enabled
	CT16B0_BMCR_MR3R_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR3R_DISABLED = 0x0
	// Position of MR3S field.
	CT16B0_BMCR_MR3S_Pos = 0xb
	// Bit mask of MR3S field.
	CT16B0_BMCR_MR3S_Msk = 0x800
	// Bit MR3S.
	CT16B0_BMCR_MR3S = 0x800
	// Enabled
	CT16B0_BMCR_MR3S_ENABLED = 0x1
	// Disabled
	CT16B0_BMCR_MR3S_DISABLED = 0x0
	// Position of RESERVED field.
	CT16B0_BMCR_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	CT16B0_BMCR_RESERVED_Msk = 0xfffff000

	// BMR0: Match Register 0 (MR0). MR0 can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR0 matches the TC.
	// Position of MATCH field.
	CT16B0_BMR_MATCH_Pos = 0x0
	// Bit mask of MATCH field.
	CT16B0_BMR_MATCH_Msk = 0xffff
	// Position of RESERVED field.
	CT16B0_BMR_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	CT16B0_BMR_RESERVED_Msk = 0xffff0000

	// BCCR: Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
	// Position of CAP0RE field.
	CT16B0_BCCR_CAP0RE_Pos = 0x0
	// Bit mask of CAP0RE field.
	CT16B0_BCCR_CAP0RE_Msk = 0x1
	// Bit CAP0RE.
	CT16B0_BCCR_CAP0RE = 0x1
	// Enabled
	CT16B0_BCCR_CAP0RE_ENABLED = 0x1
	// Disabled
	CT16B0_BCCR_CAP0RE_DISABLED = 0x0
	// Position of CAP0FE field.
	CT16B0_BCCR_CAP0FE_Pos = 0x1
	// Bit mask of CAP0FE field.
	CT16B0_BCCR_CAP0FE_Msk = 0x2
	// Bit CAP0FE.
	CT16B0_BCCR_CAP0FE = 0x2
	// Enabled
	CT16B0_BCCR_CAP0FE_ENABLED = 0x1
	// Disabled
	CT16B0_BCCR_CAP0FE_DISABLED = 0x0
	// Position of CAP0I field.
	CT16B0_BCCR_CAP0I_Pos = 0x2
	// Bit mask of CAP0I field.
	CT16B0_BCCR_CAP0I_Msk = 0x4
	// Bit CAP0I.
	CT16B0_BCCR_CAP0I = 0x4
	// Enabled
	CT16B0_BCCR_CAP0I_ENABLED = 0x1
	// Disabled
	CT16B0_BCCR_CAP0I_DISABLED = 0x0
	// Position of RESERVED field.
	CT16B0_BCCR_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	CT16B0_BCCR_RESERVED_Msk = 0xfffffff8

	// BCR0: Capture Register 0 (CR0). CR0 is loaded with the value of TC when there is an event on the CT16B0_CAP0 input.
	// Position of CAP field.
	CT16B0_BCR0_CAP_Pos = 0x0
	// Bit mask of CAP field.
	CT16B0_BCR0_CAP_Msk = 0xffff
	// Position of RESERVED field.
	CT16B0_BCR0_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	CT16B0_BCR0_RESERVED_Msk = 0xffff0000

	// BEMR: External Match Register (EMR). The EMR controls the match function and the external match pins CT16B0_MAT[2:0].
	// Position of EM0 field.
	CT16B0_BEMR_EM0_Pos = 0x0
	// Bit mask of EM0 field.
	CT16B0_BEMR_EM0_Msk = 0x1
	// Bit EM0.
	CT16B0_BEMR_EM0 = 0x1
	// Position of EM1 field.
	CT16B0_BEMR_EM1_Pos = 0x1
	// Bit mask of EM1 field.
	CT16B0_BEMR_EM1_Msk = 0x2
	// Bit EM1.
	CT16B0_BEMR_EM1 = 0x2
	// Position of EM2 field.
	CT16B0_BEMR_EM2_Pos = 0x2
	// Bit mask of EM2 field.
	CT16B0_BEMR_EM2_Msk = 0x4
	// Bit EM2.
	CT16B0_BEMR_EM2 = 0x4
	// Position of EM3 field.
	CT16B0_BEMR_EM3_Pos = 0x3
	// Bit mask of EM3 field.
	CT16B0_BEMR_EM3_Msk = 0x8
	// Bit EM3.
	CT16B0_BEMR_EM3 = 0x8
	// Position of EMC0 field.
	CT16B0_BEMR_EMC0_Pos = 0x4
	// Bit mask of EMC0 field.
	CT16B0_BEMR_EMC0_Msk = 0x30
	// Do Nothing.
	CT16B0_BEMR_EMC0_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).
	CT16B0_BEMR_EMC0_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).
	CT16B0_BEMR_EMC0_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT16B0_BEMR_EMC0_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC1 field.
	CT16B0_BEMR_EMC1_Pos = 0x6
	// Bit mask of EMC1 field.
	CT16B0_BEMR_EMC1_Msk = 0xc0
	// Do Nothing.
	CT16B0_BEMR_EMC1_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).
	CT16B0_BEMR_EMC1_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).
	CT16B0_BEMR_EMC1_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT16B0_BEMR_EMC1_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC2 field.
	CT16B0_BEMR_EMC2_Pos = 0x8
	// Bit mask of EMC2 field.
	CT16B0_BEMR_EMC2_Msk = 0x300
	// Do Nothing.
	CT16B0_BEMR_EMC2_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).
	CT16B0_BEMR_EMC2_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).
	CT16B0_BEMR_EMC2_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT16B0_BEMR_EMC2_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC3 field.
	CT16B0_BEMR_EMC3_Pos = 0xa
	// Bit mask of EMC3 field.
	CT16B0_BEMR_EMC3_Msk = 0xc00
	// Do Nothing.
	CT16B0_BEMR_EMC3_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT16Bn_MATm pin is LOW if pinned out).
	CT16B0_BEMR_EMC3_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT16Bn_MATm pin is HIGH if pinned out).
	CT16B0_BEMR_EMC3_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT16B0_BEMR_EMC3_TOGGLE_THE_CORRESPON = 0x3
	// Position of RESERVED field.
	CT16B0_BEMR_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	CT16B0_BEMR_RESERVED_Msk = 0xfffff000

	// BCTCR: Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
	// Position of CTM field.
	CT16B0_BCTCR_CTM_Pos = 0x0
	// Bit mask of CTM field.
	CT16B0_BCTCR_CTM_Msk = 0x3
	// Timer Mode: every rising PCLK edge
	CT16B0_BCTCR_CTM_TIMER_MODE_EVERY_RI = 0x0
	// Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.
	CT16B0_BCTCR_CTM_RISING = 0x1
	// Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.
	CT16B0_BCTCR_CTM_FALLING = 0x2
	// Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.
	CT16B0_BCTCR_CTM_BOTHEDGES = 0x3
	// Position of CIS field.
	CT16B0_BCTCR_CIS_Pos = 0x2
	// Bit mask of CIS field.
	CT16B0_BCTCR_CIS_Msk = 0xc
	// CT16Bn_CAP0
	CT16B0_BCTCR_CIS_CT16BN_CAP0 = 0x0
	// Position of RESERVED field.
	CT16B0_BCTCR_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	CT16B0_BCTCR_RESERVED_Msk = 0xfffffff0

	// BPWMC: PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT16B0_MAT[2:0].
	// Position of PWMEN0 field.
	CT16B0_BPWMC_PWMEN0_Pos = 0x0
	// Bit mask of PWMEN0 field.
	CT16B0_BPWMC_PWMEN0_Msk = 0x1
	// Bit PWMEN0.
	CT16B0_BPWMC_PWMEN0 = 0x1
	// CT16Bn_MAT0 is controlled by EM0.
	CT16B0_BPWMC_PWMEN0_EM0 = 0x0
	// PWM mode is enabled for CT16Bn_MAT0.
	CT16B0_BPWMC_PWMEN0_PWM = 0x1
	// Position of PWMEN1 field.
	CT16B0_BPWMC_PWMEN1_Pos = 0x1
	// Bit mask of PWMEN1 field.
	CT16B0_BPWMC_PWMEN1_Msk = 0x2
	// Bit PWMEN1.
	CT16B0_BPWMC_PWMEN1 = 0x2
	// CT16Bn_MAT1 is controlled by EM1.
	CT16B0_BPWMC_PWMEN1_EM1 = 0x0
	// PWM mode is enabled for CT16Bn_MAT1.
	CT16B0_BPWMC_PWMEN1_PWM = 0x1
	// Position of PWMEN2 field.
	CT16B0_BPWMC_PWMEN2_Pos = 0x2
	// Bit mask of PWMEN2 field.
	CT16B0_BPWMC_PWMEN2_Msk = 0x4
	// Bit PWMEN2.
	CT16B0_BPWMC_PWMEN2 = 0x4
	// Match channel 2 or pin CT16B0_MAT2 is controlled by EM2. Match channel 2 is not pinned out on timer 1.
	CT16B0_BPWMC_PWMEN2_EM2 = 0x0
	// PWM mode is enabled for match channel 2 or pin CT16B0_MAT2.
	CT16B0_BPWMC_PWMEN2_PWM = 0x1
	// Position of PWMEN3 field.
	CT16B0_BPWMC_PWMEN3_Pos = 0x3
	// Bit mask of PWMEN3 field.
	CT16B0_BPWMC_PWMEN3_Msk = 0x8
	// Bit PWMEN3.
	CT16B0_BPWMC_PWMEN3 = 0x8
	// Match channel 3 match channel 3 is controlled by EM3.
	CT16B0_BPWMC_PWMEN3_EM3 = 0x0
	// PWM mode is enabled for match channel 3match channel 3.
	CT16B0_BPWMC_PWMEN3_PWM = 0x1
	// Position of RESERVED field.
	CT16B0_BPWMC_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	CT16B0_BPWMC_RESERVED_Msk = 0xfffffff0
)

// Bitfields for CT32B0: Product name title=UM10375 Chapter title=LPC13xx 32-bit timer/counters (CT32B0/1) Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// BIR: Interrupt Register (IR). The IR can be written to clear interrupts. The IR can be read to identify which of five possible interrupt sources are pending.
	// Position of MR0INT field.
	CT32B0_BIR_MR0INT_Pos = 0x0
	// Bit mask of MR0INT field.
	CT32B0_BIR_MR0INT_Msk = 0x1
	// Bit MR0INT.
	CT32B0_BIR_MR0INT = 0x1
	// Position of MR1INT field.
	CT32B0_BIR_MR1INT_Pos = 0x1
	// Bit mask of MR1INT field.
	CT32B0_BIR_MR1INT_Msk = 0x2
	// Bit MR1INT.
	CT32B0_BIR_MR1INT = 0x2
	// Position of MR2INT field.
	CT32B0_BIR_MR2INT_Pos = 0x2
	// Bit mask of MR2INT field.
	CT32B0_BIR_MR2INT_Msk = 0x4
	// Bit MR2INT.
	CT32B0_BIR_MR2INT = 0x4
	// Position of MR3INT field.
	CT32B0_BIR_MR3INT_Pos = 0x3
	// Bit mask of MR3INT field.
	CT32B0_BIR_MR3INT_Msk = 0x8
	// Bit MR3INT.
	CT32B0_BIR_MR3INT = 0x8
	// Position of CR0INT field.
	CT32B0_BIR_CR0INT_Pos = 0x4
	// Bit mask of CR0INT field.
	CT32B0_BIR_CR0INT_Msk = 0x10
	// Bit CR0INT.
	CT32B0_BIR_CR0INT = 0x10
	// Position of RESERVED field.
	CT32B0_BIR_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	CT32B0_BIR_RESERVED_Msk = 0xffffffe0

	// BTCR: Timer Control Register (TCR). The TCR is used to control the Timer Counter functions. The Timer Counter can be disabled or reset through the TCR.
	// Position of CEN field.
	CT32B0_BTCR_CEN_Pos = 0x0
	// Bit mask of CEN field.
	CT32B0_BTCR_CEN_Msk = 0x1
	// Bit CEN.
	CT32B0_BTCR_CEN = 0x1
	// Position of CRES field.
	CT32B0_BTCR_CRES_Pos = 0x1
	// Bit mask of CRES field.
	CT32B0_BTCR_CRES_Msk = 0x2
	// Bit CRES.
	CT32B0_BTCR_CRES = 0x2
	// Position of RESERVED field.
	CT32B0_BTCR_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	CT32B0_BTCR_RESERVED_Msk = 0xfffffffc

	// BTC: Timer Counter (TC). The 32-bit TC is incremented every PR+1 cycles of PCLK. The TC is controlled through the TCR.
	// Position of TC field.
	CT32B0_BTC_TC_Pos = 0x0
	// Bit mask of TC field.
	CT32B0_BTC_TC_Msk = 0xffffffff

	// BPR: Prescale Register (PR). When the Prescale Counter (below) is equal to this value, the next clock increments the TC and clears the PC.
	// Position of PR field.
	CT32B0_BPR_PR_Pos = 0x0
	// Bit mask of PR field.
	CT32B0_BPR_PR_Msk = 0xffffffff

	// BPC: Prescale Counter (PC). The 32-bit PC is a counter which is incremented to the value stored in PR. When the value in PR is reached, the TC is incremented and the PC is cleared. The PC is observable and controllable through the bus interface.
	// Position of PC field.
	CT32B0_BPC_PC_Pos = 0x0
	// Bit mask of PC field.
	CT32B0_BPC_PC_Msk = 0xffffffff

	// BMCR: Match Control Register (MCR). The MCR is used to control if an interrupt is generated and if the TC is reset when a Match occurs.
	// Position of MR0I field.
	CT32B0_BMCR_MR0I_Pos = 0x0
	// Bit mask of MR0I field.
	CT32B0_BMCR_MR0I_Msk = 0x1
	// Bit MR0I.
	CT32B0_BMCR_MR0I = 0x1
	// Enabled
	CT32B0_BMCR_MR0I_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR0I_DISABLED = 0x0
	// Position of MR0R field.
	CT32B0_BMCR_MR0R_Pos = 0x1
	// Bit mask of MR0R field.
	CT32B0_BMCR_MR0R_Msk = 0x2
	// Bit MR0R.
	CT32B0_BMCR_MR0R = 0x2
	// Enabled
	CT32B0_BMCR_MR0R_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR0R_DISABLED = 0x0
	// Position of MR0S field.
	CT32B0_BMCR_MR0S_Pos = 0x2
	// Bit mask of MR0S field.
	CT32B0_BMCR_MR0S_Msk = 0x4
	// Bit MR0S.
	CT32B0_BMCR_MR0S = 0x4
	// Enabled
	CT32B0_BMCR_MR0S_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR0S_DISABLED = 0x0
	// Position of MR1I field.
	CT32B0_BMCR_MR1I_Pos = 0x3
	// Bit mask of MR1I field.
	CT32B0_BMCR_MR1I_Msk = 0x8
	// Bit MR1I.
	CT32B0_BMCR_MR1I = 0x8
	// Enabled
	CT32B0_BMCR_MR1I_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR1I_DISABLED = 0x0
	// Position of MR1R field.
	CT32B0_BMCR_MR1R_Pos = 0x4
	// Bit mask of MR1R field.
	CT32B0_BMCR_MR1R_Msk = 0x10
	// Bit MR1R.
	CT32B0_BMCR_MR1R = 0x10
	// Enabled
	CT32B0_BMCR_MR1R_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR1R_DISABLED = 0x0
	// Position of MR1S field.
	CT32B0_BMCR_MR1S_Pos = 0x5
	// Bit mask of MR1S field.
	CT32B0_BMCR_MR1S_Msk = 0x20
	// Bit MR1S.
	CT32B0_BMCR_MR1S = 0x20
	// Enabled
	CT32B0_BMCR_MR1S_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR1S_DISABLED = 0x0
	// Position of MR2I field.
	CT32B0_BMCR_MR2I_Pos = 0x6
	// Bit mask of MR2I field.
	CT32B0_BMCR_MR2I_Msk = 0x40
	// Bit MR2I.
	CT32B0_BMCR_MR2I = 0x40
	// Enabled
	CT32B0_BMCR_MR2I_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR2I_DISABLED = 0x0
	// Position of MR2R field.
	CT32B0_BMCR_MR2R_Pos = 0x7
	// Bit mask of MR2R field.
	CT32B0_BMCR_MR2R_Msk = 0x80
	// Bit MR2R.
	CT32B0_BMCR_MR2R = 0x80
	// Enabled
	CT32B0_BMCR_MR2R_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR2R_DISABLED = 0x0
	// Position of MR2S field.
	CT32B0_BMCR_MR2S_Pos = 0x8
	// Bit mask of MR2S field.
	CT32B0_BMCR_MR2S_Msk = 0x100
	// Bit MR2S.
	CT32B0_BMCR_MR2S = 0x100
	// Enabled
	CT32B0_BMCR_MR2S_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR2S_DISABLED = 0x0
	// Position of MR3I field.
	CT32B0_BMCR_MR3I_Pos = 0x9
	// Bit mask of MR3I field.
	CT32B0_BMCR_MR3I_Msk = 0x200
	// Bit MR3I.
	CT32B0_BMCR_MR3I = 0x200
	// Enabled
	CT32B0_BMCR_MR3I_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR3I_DISABLED = 0x0
	// Position of MR3R field.
	CT32B0_BMCR_MR3R_Pos = 0xa
	// Bit mask of MR3R field.
	CT32B0_BMCR_MR3R_Msk = 0x400
	// Bit MR3R.
	CT32B0_BMCR_MR3R = 0x400
	// Enabled
	CT32B0_BMCR_MR3R_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR3R_DISABLED = 0x0
	// Position of MR3S field.
	CT32B0_BMCR_MR3S_Pos = 0xb
	// Bit mask of MR3S field.
	CT32B0_BMCR_MR3S_Msk = 0x800
	// Bit MR3S.
	CT32B0_BMCR_MR3S = 0x800
	// Enabled
	CT32B0_BMCR_MR3S_ENABLED = 0x1
	// Disabled
	CT32B0_BMCR_MR3S_DISABLED = 0x0
	// Position of RESERVED field.
	CT32B0_BMCR_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	CT32B0_BMCR_RESERVED_Msk = 0xfffff000

	// BMR0: Match Register. MR can be enabled through the MCR to reset the TC, stop both the TC and PC, and/or generate an interrupt every time MR0 matches the TC.
	// Position of MATCH field.
	CT32B0_BMR_MATCH_Pos = 0x0
	// Bit mask of MATCH field.
	CT32B0_BMR_MATCH_Msk = 0xffffffff

	// BCCR: Capture Control Register (CCR). The CCR controls which edges of the capture inputs are used to load the Capture Registers and whether or not an interrupt is generated when a capture takes place.
	// Position of CAP0RE field.
	CT32B0_BCCR_CAP0RE_Pos = 0x0
	// Bit mask of CAP0RE field.
	CT32B0_BCCR_CAP0RE_Msk = 0x1
	// Bit CAP0RE.
	CT32B0_BCCR_CAP0RE = 0x1
	// Enabled
	CT32B0_BCCR_CAP0RE_ENABLED = 0x1
	// Disabled
	CT32B0_BCCR_CAP0RE_DISABLED = 0x0
	// Position of CAP0FE field.
	CT32B0_BCCR_CAP0FE_Pos = 0x1
	// Bit mask of CAP0FE field.
	CT32B0_BCCR_CAP0FE_Msk = 0x2
	// Bit CAP0FE.
	CT32B0_BCCR_CAP0FE = 0x2
	// Enabled
	CT32B0_BCCR_CAP0FE_ENABLED = 0x1
	// Disabled
	CT32B0_BCCR_CAP0FE_DISABLED = 0x0
	// Position of CAP0I field.
	CT32B0_BCCR_CAP0I_Pos = 0x2
	// Bit mask of CAP0I field.
	CT32B0_BCCR_CAP0I_Msk = 0x4
	// Bit CAP0I.
	CT32B0_BCCR_CAP0I = 0x4
	// Enabled
	CT32B0_BCCR_CAP0I_ENABLED = 0x1
	// Disabled
	CT32B0_BCCR_CAP0I_DISABLED = 0x0
	// Position of RESERVED field.
	CT32B0_BCCR_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	CT32B0_BCCR_RESERVED_Msk = 0xfffffff8

	// BCR0: Capture Register 0 (CR0). CR0 is loaded with the value of TC when there is an event on the CT32B0_CAP0 input.
	// Position of CAP field.
	CT32B0_BCR0_CAP_Pos = 0x0
	// Bit mask of CAP field.
	CT32B0_BCR0_CAP_Msk = 0xffffffff

	// BEMR: External Match Register (EMR). The EMR controls the match function and the external match pins CT32B0_MAT[3:0].
	// Position of EM0 field.
	CT32B0_BEMR_EM0_Pos = 0x0
	// Bit mask of EM0 field.
	CT32B0_BEMR_EM0_Msk = 0x1
	// Bit EM0.
	CT32B0_BEMR_EM0 = 0x1
	// Position of EM1 field.
	CT32B0_BEMR_EM1_Pos = 0x1
	// Bit mask of EM1 field.
	CT32B0_BEMR_EM1_Msk = 0x2
	// Bit EM1.
	CT32B0_BEMR_EM1 = 0x2
	// Position of EM2 field.
	CT32B0_BEMR_EM2_Pos = 0x2
	// Bit mask of EM2 field.
	CT32B0_BEMR_EM2_Msk = 0x4
	// Bit EM2.
	CT32B0_BEMR_EM2 = 0x4
	// Position of EM3 field.
	CT32B0_BEMR_EM3_Pos = 0x3
	// Bit mask of EM3 field.
	CT32B0_BEMR_EM3_Msk = 0x8
	// Bit EM3.
	CT32B0_BEMR_EM3 = 0x8
	// Position of EMC0 field.
	CT32B0_BEMR_EMC0_Pos = 0x4
	// Bit mask of EMC0 field.
	CT32B0_BEMR_EMC0_Msk = 0x30
	// Do Nothing.
	CT32B0_BEMR_EMC0_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).
	CT32B0_BEMR_EMC0_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).
	CT32B0_BEMR_EMC0_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT32B0_BEMR_EMC0_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC1 field.
	CT32B0_BEMR_EMC1_Pos = 0x6
	// Bit mask of EMC1 field.
	CT32B0_BEMR_EMC1_Msk = 0xc0
	// Do Nothing.
	CT32B0_BEMR_EMC1_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).
	CT32B0_BEMR_EMC1_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).
	CT32B0_BEMR_EMC1_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT32B0_BEMR_EMC1_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC2 field.
	CT32B0_BEMR_EMC2_Pos = 0x8
	// Bit mask of EMC2 field.
	CT32B0_BEMR_EMC2_Msk = 0x300
	// Do Nothing.
	CT32B0_BEMR_EMC2_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).
	CT32B0_BEMR_EMC2_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).
	CT32B0_BEMR_EMC2_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT32B0_BEMR_EMC2_TOGGLE_THE_CORRESPON = 0x3
	// Position of EMC3 field.
	CT32B0_BEMR_EMC3_Pos = 0xa
	// Bit mask of EMC3 field.
	CT32B0_BEMR_EMC3_Msk = 0xc00
	// Do Nothing.
	CT32B0_BEMR_EMC3_DO_NOTHING_ = 0x0
	// Clear the corresponding External Match bit/output to 0 (CT32Bn_MATm pin is LOW if pinned out).
	CT32B0_BEMR_EMC3_CLEAR_THE_CORRESPOND = 0x1
	// Set the corresponding External Match bit/output to 1 (CT32Bn_MATm pin is HIGH if pinned out).
	CT32B0_BEMR_EMC3_SET_THE_CORRESPONDIN = 0x2
	// Toggle the corresponding External Match bit/output.
	CT32B0_BEMR_EMC3_TOGGLE_THE_CORRESPON = 0x3
	// Position of RESERVED field.
	CT32B0_BEMR_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	CT32B0_BEMR_RESERVED_Msk = 0xfffff000

	// BCTCR: Count Control Register (CTCR). The CTCR selects between Timer and Counter mode, and in Counter mode selects the signal and edge(s) for counting.
	// Position of CTM field.
	CT32B0_BCTCR_CTM_Pos = 0x0
	// Bit mask of CTM field.
	CT32B0_BCTCR_CTM_Msk = 0x3
	// Timer Mode: every rising PCLK edge
	CT32B0_BCTCR_CTM_TIMER_MODE_EVERY_RI = 0x0
	// Counter Mode: TC is incremented on rising edges on the CAP input selected by bits 3:2.
	CT32B0_BCTCR_CTM_RISING = 0x1
	// Counter Mode: TC is incremented on falling edges on the CAP input selected by bits 3:2.
	CT32B0_BCTCR_CTM_FALLLING = 0x2
	// Counter Mode: TC is incremented on both edges on the CAP input selected by bits 3:2.
	CT32B0_BCTCR_CTM_BOTHEDGES = 0x3
	// Position of CIS field.
	CT32B0_BCTCR_CIS_Pos = 0x2
	// Bit mask of CIS field.
	CT32B0_BCTCR_CIS_Msk = 0xc
	// CT32Bn_CAP0
	CT32B0_BCTCR_CIS_CT32BN_CAP0 = 0x0
	// Position of RESERVED field.
	CT32B0_BCTCR_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	CT32B0_BCTCR_RESERVED_Msk = 0xfffffff0

	// BPWMC: PWM Control Register (PWMCON). The PWMCON enables PWM mode for the external match pins CT32B0_MAT[3:0].
	// Position of PWMEN0 field.
	CT32B0_BPWMC_PWMEN0_Pos = 0x0
	// Bit mask of PWMEN0 field.
	CT32B0_BPWMC_PWMEN0_Msk = 0x1
	// Bit PWMEN0.
	CT32B0_BPWMC_PWMEN0 = 0x1
	// CT32Bn_MAT0 is controlled by EM0.
	CT32B0_BPWMC_PWMEN0_EM0 = 0x0
	// PWM mode is enabled for CT32Bn_MAT0.
	CT32B0_BPWMC_PWMEN0_PWM = 0x1
	// Position of PWMEN1 field.
	CT32B0_BPWMC_PWMEN1_Pos = 0x1
	// Bit mask of PWMEN1 field.
	CT32B0_BPWMC_PWMEN1_Msk = 0x2
	// Bit PWMEN1.
	CT32B0_BPWMC_PWMEN1 = 0x2
	// CT32Bn_MAT1 is controlled by EM1.
	CT32B0_BPWMC_PWMEN1_EM1 = 0x0
	// PWM mode is enabled for CT32Bn_MAT1.
	CT32B0_BPWMC_PWMEN1_PWM = 0x1
	// Position of PWMEN2 field.
	CT32B0_BPWMC_PWMEN2_Pos = 0x2
	// Bit mask of PWMEN2 field.
	CT32B0_BPWMC_PWMEN2_Msk = 0x4
	// Bit PWMEN2.
	CT32B0_BPWMC_PWMEN2 = 0x4
	// CT32Bn_MAT2 is controlled by EM2.
	CT32B0_BPWMC_PWMEN2_EM2 = 0x0
	// PWM mode is enabled for CT32Bn_MAT2.
	CT32B0_BPWMC_PWMEN2_PWM = 0x1
	// Position of PWMEN3 field.
	CT32B0_BPWMC_PWMEN3_Pos = 0x3
	// Bit mask of PWMEN3 field.
	CT32B0_BPWMC_PWMEN3_Msk = 0x8
	// Bit PWMEN3.
	CT32B0_BPWMC_PWMEN3 = 0x8
	// CT32Bn_MAT3 is controlled by EM3.
	CT32B0_BPWMC_PWMEN3_EM3 = 0x0
	// PWM mode is enabled for CT32Bn_MAT3.
	CT32B0_BPWMC_PWMEN3_PWM = 0x1
	// Position of RESERVED field.
	CT32B0_BPWMC_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	CT32B0_BPWMC_RESERVED_Msk = 0xfffffff0
)

// Bitfields for ADC: Product name title=UM10375 Chapter title=LPC13xx Analog-to-Digital Converter (ADC) Modification date=4/19/2011 Major revision=2 Minor revision=1
const (
	// CR: A/D Control Register. The AD0CR register must be written to select the operating mode before A/D conversion can occur.
	// Position of SEL field.
	ADC_CR_SEL_Pos = 0x0
	// Bit mask of SEL field.
	ADC_CR_SEL_Msk = 0xff
	// Position of CLKDIV field.
	ADC_CR_CLKDIV_Pos = 0x8
	// Bit mask of CLKDIV field.
	ADC_CR_CLKDIV_Msk = 0xff00
	// Position of BURST field.
	ADC_CR_BURST_Pos = 0x10
	// Bit mask of BURST field.
	ADC_CR_BURST_Msk = 0x10000
	// Bit BURST.
	ADC_CR_BURST = 0x10000
	// Software-controlled mode: Conversions are software-controlled and require 11 clocks.
	ADC_CR_BURST_SOFTWARE_CONTROLLED_ = 0x0
	// Hardware scan mode: The AD converter does repeated conversions at the rate selected by the CLKS field, scanning (if necessary) through the pins selected by 1s in the SEL field. The first conversion after the start corresponds to the least-significant bit set to 1 in the SEL field, then the next higher bits (pins) set to 1 are scanned if applicable. Repeated conversions can be terminated by clearing this bit, but the conversion in progress when this bit is cleared will be completed. Important: START bits must be 000 when BURST = 1 or conversions will not start.
	ADC_CR_BURST_HARDWARE_SCAN_MODE_ = 0x1
	// Position of CLKS field.
	ADC_CR_CLKS_Pos = 0x11
	// Bit mask of CLKS field.
	ADC_CR_CLKS_Msk = 0xe0000
	// Position of RESERVED field.
	ADC_CR_RESERVED_Pos = 0x14
	// Bit mask of RESERVED field.
	ADC_CR_RESERVED_Msk = 0xf00000
	// Position of START field.
	ADC_CR_START_Pos = 0x18
	// Bit mask of START field.
	ADC_CR_START_Msk = 0x7000000
	// No start (this value should be used when clearing PDN to 0).
	ADC_CR_START_NO_START_THIS_VALUE = 0x0
	// Start conversion now.
	ADC_CR_START_NOW = 0x1
	// Start conversion when the edge selected by bit 27 occurs on PIO0_2/SSEL/CT16B0_CAP0.
	ADC_CR_START_EDGEPIO0_2 = 0x2
	// Start conversion when the edge selected by bit 27 occurs on PIO1_5/DIR/CT32B0_CAP0.
	ADC_CR_START_EDGEPIO1_5 = 0x3
	// Position of EDGE field.
	ADC_CR_EDGE_Pos = 0x1b
	// Bit mask of EDGE field.
	ADC_CR_EDGE_Msk = 0x8000000
	// Bit EDGE.
	ADC_CR_EDGE = 0x8000000
	// Start conversion on a rising edge on the selected CAP/MAT signal.
	ADC_CR_EDGE_RISING = 0x0
	// Start conversion on a falling edge on the selected CAP/MAT signal.
	ADC_CR_EDGE_FALLING = 0x1
	// Position of RESERVED field.
	ADC_CR_RESERVED_Pos = 0x1c
	// Bit mask of RESERVED field.
	ADC_CR_RESERVED_Msk = 0xf0000000

	// GDR: A/D Global Data Register. Contains the result of the most recent A/D conversion.
	// Position of RESERVED field.
	ADC_GDR_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	ADC_GDR_RESERVED_Msk = 0x3f
	// Position of V_VREF field.
	ADC_GDR_V_VREF_Pos = 0x6
	// Bit mask of V_VREF field.
	ADC_GDR_V_VREF_Msk = 0xffc0
	// Position of RESERVED field.
	ADC_GDR_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	ADC_GDR_RESERVED_Msk = 0xff0000
	// Position of CHN field.
	ADC_GDR_CHN_Pos = 0x18
	// Bit mask of CHN field.
	ADC_GDR_CHN_Msk = 0x7000000
	// Position of RESERVED field.
	ADC_GDR_RESERVED_Pos = 0x1b
	// Bit mask of RESERVED field.
	ADC_GDR_RESERVED_Msk = 0x38000000
	// Position of OVERRUN field.
	ADC_GDR_OVERRUN_Pos = 0x1e
	// Bit mask of OVERRUN field.
	ADC_GDR_OVERRUN_Msk = 0x40000000
	// Bit OVERRUN.
	ADC_GDR_OVERRUN = 0x40000000
	// Position of DONE field.
	ADC_GDR_DONE_Pos = 0x1f
	// Bit mask of DONE field.
	ADC_GDR_DONE_Msk = 0x80000000
	// Bit DONE.
	ADC_GDR_DONE = 0x80000000

	// INTEN: A/D Interrupt Enable Register. This register contains enable bits that allow the DONE flag of each A/D channel to be included or excluded from contributing to the generation of an A/D interrupt.
	// Position of ADINTEN0 field.
	ADC_INTEN_ADINTEN0_Pos = 0x0
	// Bit mask of ADINTEN0 field.
	ADC_INTEN_ADINTEN0_Msk = 0x1
	// Bit ADINTEN0.
	ADC_INTEN_ADINTEN0 = 0x1
	// Position of ADINTEN1 field.
	ADC_INTEN_ADINTEN1_Pos = 0x1
	// Bit mask of ADINTEN1 field.
	ADC_INTEN_ADINTEN1_Msk = 0x2
	// Bit ADINTEN1.
	ADC_INTEN_ADINTEN1 = 0x2
	// Position of ADINTEN2 field.
	ADC_INTEN_ADINTEN2_Pos = 0x2
	// Bit mask of ADINTEN2 field.
	ADC_INTEN_ADINTEN2_Msk = 0x4
	// Bit ADINTEN2.
	ADC_INTEN_ADINTEN2 = 0x4
	// Position of ADINTEN3 field.
	ADC_INTEN_ADINTEN3_Pos = 0x3
	// Bit mask of ADINTEN3 field.
	ADC_INTEN_ADINTEN3_Msk = 0x8
	// Bit ADINTEN3.
	ADC_INTEN_ADINTEN3 = 0x8
	// Position of ADINTEN4 field.
	ADC_INTEN_ADINTEN4_Pos = 0x4
	// Bit mask of ADINTEN4 field.
	ADC_INTEN_ADINTEN4_Msk = 0x10
	// Bit ADINTEN4.
	ADC_INTEN_ADINTEN4 = 0x10
	// Position of ADINTEN5 field.
	ADC_INTEN_ADINTEN5_Pos = 0x5
	// Bit mask of ADINTEN5 field.
	ADC_INTEN_ADINTEN5_Msk = 0x20
	// Bit ADINTEN5.
	ADC_INTEN_ADINTEN5 = 0x20
	// Position of ADINTEN6 field.
	ADC_INTEN_ADINTEN6_Pos = 0x6
	// Bit mask of ADINTEN6 field.
	ADC_INTEN_ADINTEN6_Msk = 0x40
	// Bit ADINTEN6.
	ADC_INTEN_ADINTEN6 = 0x40
	// Position of ADINTEN7 field.
	ADC_INTEN_ADINTEN7_Pos = 0x7
	// Bit mask of ADINTEN7 field.
	ADC_INTEN_ADINTEN7_Msk = 0x80
	// Bit ADINTEN7.
	ADC_INTEN_ADINTEN7 = 0x80
	// Position of ADGINTEN field.
	ADC_INTEN_ADGINTEN_Pos = 0x8
	// Bit mask of ADGINTEN field.
	ADC_INTEN_ADGINTEN_Msk = 0x100
	// Bit ADGINTEN.
	ADC_INTEN_ADGINTEN = 0x100
	// Position of RESERVED field.
	ADC_INTEN_RESERVED_Pos = 0x9
	// Bit mask of RESERVED field.
	ADC_INTEN_RESERVED_Msk = 0xfffffe00

	// DR0: A/D Channel n Data Register. This register contains the result of the most recent conversion completed on channel n
	// Position of RESERVED field.
	ADC_DR_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	ADC_DR_RESERVED_Msk = 0x3f
	// Position of V_VREF field.
	ADC_DR_V_VREF_Pos = 0x6
	// Bit mask of V_VREF field.
	ADC_DR_V_VREF_Msk = 0xffc0
	// Position of RESERVED field.
	ADC_DR_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	ADC_DR_RESERVED_Msk = 0x3fff0000
	// Position of OVERRUN field.
	ADC_DR_OVERRUN_Pos = 0x1e
	// Bit mask of OVERRUN field.
	ADC_DR_OVERRUN_Msk = 0x40000000
	// Bit OVERRUN.
	ADC_DR_OVERRUN = 0x40000000
	// Position of DONE field.
	ADC_DR_DONE_Pos = 0x1f
	// Bit mask of DONE field.
	ADC_DR_DONE_Msk = 0x80000000
	// Bit DONE.
	ADC_DR_DONE = 0x80000000

	// STAT: A/D Status Register. This register contains DONE and OVERRUN flags for all of the A/D channels, as well as the A/D interrupt flag.
	// Position of DONE0 field.
	ADC_STAT_DONE0_Pos = 0x0
	// Bit mask of DONE0 field.
	ADC_STAT_DONE0_Msk = 0x1
	// Bit DONE0.
	ADC_STAT_DONE0 = 0x1
	// Position of DONE1 field.
	ADC_STAT_DONE1_Pos = 0x1
	// Bit mask of DONE1 field.
	ADC_STAT_DONE1_Msk = 0x2
	// Bit DONE1.
	ADC_STAT_DONE1 = 0x2
	// Position of DONE2 field.
	ADC_STAT_DONE2_Pos = 0x2
	// Bit mask of DONE2 field.
	ADC_STAT_DONE2_Msk = 0x4
	// Bit DONE2.
	ADC_STAT_DONE2 = 0x4
	// Position of DONE3 field.
	ADC_STAT_DONE3_Pos = 0x3
	// Bit mask of DONE3 field.
	ADC_STAT_DONE3_Msk = 0x8
	// Bit DONE3.
	ADC_STAT_DONE3 = 0x8
	// Position of DONE4 field.
	ADC_STAT_DONE4_Pos = 0x4
	// Bit mask of DONE4 field.
	ADC_STAT_DONE4_Msk = 0x10
	// Bit DONE4.
	ADC_STAT_DONE4 = 0x10
	// Position of DONE5 field.
	ADC_STAT_DONE5_Pos = 0x5
	// Bit mask of DONE5 field.
	ADC_STAT_DONE5_Msk = 0x20
	// Bit DONE5.
	ADC_STAT_DONE5 = 0x20
	// Position of DONE6 field.
	ADC_STAT_DONE6_Pos = 0x6
	// Bit mask of DONE6 field.
	ADC_STAT_DONE6_Msk = 0x40
	// Bit DONE6.
	ADC_STAT_DONE6 = 0x40
	// Position of DONE7 field.
	ADC_STAT_DONE7_Pos = 0x7
	// Bit mask of DONE7 field.
	ADC_STAT_DONE7_Msk = 0x80
	// Bit DONE7.
	ADC_STAT_DONE7 = 0x80
	// Position of OVERRUN0 field.
	ADC_STAT_OVERRUN0_Pos = 0x8
	// Bit mask of OVERRUN0 field.
	ADC_STAT_OVERRUN0_Msk = 0x100
	// Bit OVERRUN0.
	ADC_STAT_OVERRUN0 = 0x100
	// Position of OVERRUN1 field.
	ADC_STAT_OVERRUN1_Pos = 0x9
	// Bit mask of OVERRUN1 field.
	ADC_STAT_OVERRUN1_Msk = 0x200
	// Bit OVERRUN1.
	ADC_STAT_OVERRUN1 = 0x200
	// Position of OVERRUN2 field.
	ADC_STAT_OVERRUN2_Pos = 0xa
	// Bit mask of OVERRUN2 field.
	ADC_STAT_OVERRUN2_Msk = 0x400
	// Bit OVERRUN2.
	ADC_STAT_OVERRUN2 = 0x400
	// Position of OVERRUN3 field.
	ADC_STAT_OVERRUN3_Pos = 0xb
	// Bit mask of OVERRUN3 field.
	ADC_STAT_OVERRUN3_Msk = 0x800
	// Bit OVERRUN3.
	ADC_STAT_OVERRUN3 = 0x800
	// Position of OVERRUN4 field.
	ADC_STAT_OVERRUN4_Pos = 0xc
	// Bit mask of OVERRUN4 field.
	ADC_STAT_OVERRUN4_Msk = 0x1000
	// Bit OVERRUN4.
	ADC_STAT_OVERRUN4 = 0x1000
	// Position of OVERRUN5 field.
	ADC_STAT_OVERRUN5_Pos = 0xd
	// Bit mask of OVERRUN5 field.
	ADC_STAT_OVERRUN5_Msk = 0x2000
	// Bit OVERRUN5.
	ADC_STAT_OVERRUN5 = 0x2000
	// Position of OVERRUN6 field.
	ADC_STAT_OVERRUN6_Pos = 0xe
	// Bit mask of OVERRUN6 field.
	ADC_STAT_OVERRUN6_Msk = 0x4000
	// Bit OVERRUN6.
	ADC_STAT_OVERRUN6 = 0x4000
	// Position of OVERRUN7 field.
	ADC_STAT_OVERRUN7_Pos = 0xf
	// Bit mask of OVERRUN7 field.
	ADC_STAT_OVERRUN7_Msk = 0x8000
	// Bit OVERRUN7.
	ADC_STAT_OVERRUN7 = 0x8000
	// Position of ADINT field.
	ADC_STAT_ADINT_Pos = 0x10
	// Bit mask of ADINT field.
	ADC_STAT_ADINT_Msk = 0x10000
	// Bit ADINT.
	ADC_STAT_ADINT = 0x10000
	// Position of RESERVED field.
	ADC_STAT_RESERVED_Pos = 0x11
	// Bit mask of RESERVED field.
	ADC_STAT_RESERVED_Msk = 0xfffe0000
)

// Bitfields for USB: Product name title=UM10375 Chapter title=LPC13xx USB device controller Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// DEVINTST: USB Device Interrupt Status
	// Position of FRAME field.
	USB_DEVINTST_FRAME_Pos = 0x0
	// Bit mask of FRAME field.
	USB_DEVINTST_FRAME_Msk = 0x1
	// Bit FRAME.
	USB_DEVINTST_FRAME = 0x1
	// Position of EP0 field.
	USB_DEVINTST_EP0_Pos = 0x1
	// Bit mask of EP0 field.
	USB_DEVINTST_EP0_Msk = 0x2
	// Bit EP0.
	USB_DEVINTST_EP0 = 0x2
	// Position of EP1 field.
	USB_DEVINTST_EP1_Pos = 0x2
	// Bit mask of EP1 field.
	USB_DEVINTST_EP1_Msk = 0x4
	// Bit EP1.
	USB_DEVINTST_EP1 = 0x4
	// Position of EP2 field.
	USB_DEVINTST_EP2_Pos = 0x3
	// Bit mask of EP2 field.
	USB_DEVINTST_EP2_Msk = 0x8
	// Bit EP2.
	USB_DEVINTST_EP2 = 0x8
	// Position of EP3 field.
	USB_DEVINTST_EP3_Pos = 0x4
	// Bit mask of EP3 field.
	USB_DEVINTST_EP3_Msk = 0x10
	// Bit EP3.
	USB_DEVINTST_EP3 = 0x10
	// Position of EP4 field.
	USB_DEVINTST_EP4_Pos = 0x5
	// Bit mask of EP4 field.
	USB_DEVINTST_EP4_Msk = 0x20
	// Bit EP4.
	USB_DEVINTST_EP4 = 0x20
	// Position of EP5 field.
	USB_DEVINTST_EP5_Pos = 0x6
	// Bit mask of EP5 field.
	USB_DEVINTST_EP5_Msk = 0x40
	// Bit EP5.
	USB_DEVINTST_EP5 = 0x40
	// Position of EP6 field.
	USB_DEVINTST_EP6_Pos = 0x7
	// Bit mask of EP6 field.
	USB_DEVINTST_EP6_Msk = 0x80
	// Bit EP6.
	USB_DEVINTST_EP6 = 0x80
	// Position of EP7 field.
	USB_DEVINTST_EP7_Pos = 0x8
	// Bit mask of EP7 field.
	USB_DEVINTST_EP7_Msk = 0x100
	// Bit EP7.
	USB_DEVINTST_EP7 = 0x100
	// Position of DEV_STAT field.
	USB_DEVINTST_DEV_STAT_Pos = 0x9
	// Bit mask of DEV_STAT field.
	USB_DEVINTST_DEV_STAT_Msk = 0x200
	// Bit DEV_STAT.
	USB_DEVINTST_DEV_STAT = 0x200
	// Position of CC_EMPTY field.
	USB_DEVINTST_CC_EMPTY_Pos = 0xa
	// Bit mask of CC_EMPTY field.
	USB_DEVINTST_CC_EMPTY_Msk = 0x400
	// Bit CC_EMPTY.
	USB_DEVINTST_CC_EMPTY = 0x400
	// Position of CD_FULL field.
	USB_DEVINTST_CD_FULL_Pos = 0xb
	// Bit mask of CD_FULL field.
	USB_DEVINTST_CD_FULL_Msk = 0x800
	// Bit CD_FULL.
	USB_DEVINTST_CD_FULL = 0x800
	// Position of RxENDPKT field.
	USB_DEVINTST_RxENDPKT_Pos = 0xc
	// Bit mask of RxENDPKT field.
	USB_DEVINTST_RxENDPKT_Msk = 0x1000
	// Bit RxENDPKT.
	USB_DEVINTST_RxENDPKT = 0x1000
	// Position of TxENDPKT field.
	USB_DEVINTST_TxENDPKT_Pos = 0xd
	// Bit mask of TxENDPKT field.
	USB_DEVINTST_TxENDPKT_Msk = 0x2000
	// Bit TxENDPKT.
	USB_DEVINTST_TxENDPKT = 0x2000
	// Position of RESERVED field.
	USB_DEVINTST_RESERVED_Pos = 0xe
	// Bit mask of RESERVED field.
	USB_DEVINTST_RESERVED_Msk = 0xffffc000

	// DEVINTEN: USB Device Interrupt Enable
	// Position of FRAME_EN field.
	USB_DEVINTEN_FRAME_EN_Pos = 0x0
	// Bit mask of FRAME_EN field.
	USB_DEVINTEN_FRAME_EN_Msk = 0x1
	// Bit FRAME_EN.
	USB_DEVINTEN_FRAME_EN = 0x1
	// Position of EP0_EN field.
	USB_DEVINTEN_EP0_EN_Pos = 0x1
	// Bit mask of EP0_EN field.
	USB_DEVINTEN_EP0_EN_Msk = 0x2
	// Bit EP0_EN.
	USB_DEVINTEN_EP0_EN = 0x2
	// Position of EP1_EN field.
	USB_DEVINTEN_EP1_EN_Pos = 0x2
	// Bit mask of EP1_EN field.
	USB_DEVINTEN_EP1_EN_Msk = 0x4
	// Bit EP1_EN.
	USB_DEVINTEN_EP1_EN = 0x4
	// Position of EP2_EN field.
	USB_DEVINTEN_EP2_EN_Pos = 0x3
	// Bit mask of EP2_EN field.
	USB_DEVINTEN_EP2_EN_Msk = 0x8
	// Bit EP2_EN.
	USB_DEVINTEN_EP2_EN = 0x8
	// Position of EP3_EN field.
	USB_DEVINTEN_EP3_EN_Pos = 0x4
	// Bit mask of EP3_EN field.
	USB_DEVINTEN_EP3_EN_Msk = 0x10
	// Bit EP3_EN.
	USB_DEVINTEN_EP3_EN = 0x10
	// Position of EP4_EN field.
	USB_DEVINTEN_EP4_EN_Pos = 0x5
	// Bit mask of EP4_EN field.
	USB_DEVINTEN_EP4_EN_Msk = 0x20
	// Bit EP4_EN.
	USB_DEVINTEN_EP4_EN = 0x20
	// Position of EP5_EN field.
	USB_DEVINTEN_EP5_EN_Pos = 0x6
	// Bit mask of EP5_EN field.
	USB_DEVINTEN_EP5_EN_Msk = 0x40
	// Bit EP5_EN.
	USB_DEVINTEN_EP5_EN = 0x40
	// Position of EP6_EN field.
	USB_DEVINTEN_EP6_EN_Pos = 0x7
	// Bit mask of EP6_EN field.
	USB_DEVINTEN_EP6_EN_Msk = 0x80
	// Bit EP6_EN.
	USB_DEVINTEN_EP6_EN = 0x80
	// Position of EP7_EN field.
	USB_DEVINTEN_EP7_EN_Pos = 0x8
	// Bit mask of EP7_EN field.
	USB_DEVINTEN_EP7_EN_Msk = 0x100
	// Bit EP7_EN.
	USB_DEVINTEN_EP7_EN = 0x100
	// Position of DEV_STAT_EN field.
	USB_DEVINTEN_DEV_STAT_EN_Pos = 0x9
	// Bit mask of DEV_STAT_EN field.
	USB_DEVINTEN_DEV_STAT_EN_Msk = 0x200
	// Bit DEV_STAT_EN.
	USB_DEVINTEN_DEV_STAT_EN = 0x200
	// Position of CC_EMPTY_EN field.
	USB_DEVINTEN_CC_EMPTY_EN_Pos = 0xa
	// Bit mask of CC_EMPTY_EN field.
	USB_DEVINTEN_CC_EMPTY_EN_Msk = 0x400
	// Bit CC_EMPTY_EN.
	USB_DEVINTEN_CC_EMPTY_EN = 0x400
	// Position of CD_FULL_EN field.
	USB_DEVINTEN_CD_FULL_EN_Pos = 0xb
	// Bit mask of CD_FULL_EN field.
	USB_DEVINTEN_CD_FULL_EN_Msk = 0x800
	// Bit CD_FULL_EN.
	USB_DEVINTEN_CD_FULL_EN = 0x800
	// Position of RXENDPKT_EN field.
	USB_DEVINTEN_RXENDPKT_EN_Pos = 0xc
	// Bit mask of RXENDPKT_EN field.
	USB_DEVINTEN_RXENDPKT_EN_Msk = 0x1000
	// Bit RXENDPKT_EN.
	USB_DEVINTEN_RXENDPKT_EN = 0x1000
	// Position of TXENDPKT_EN field.
	USB_DEVINTEN_TXENDPKT_EN_Pos = 0xd
	// Bit mask of TXENDPKT_EN field.
	USB_DEVINTEN_TXENDPKT_EN_Msk = 0x2000
	// Bit TXENDPKT_EN.
	USB_DEVINTEN_TXENDPKT_EN = 0x2000
	// Position of RESERVED field.
	USB_DEVINTEN_RESERVED_Pos = 0xe
	// Bit mask of RESERVED field.
	USB_DEVINTEN_RESERVED_Msk = 0xffffc000

	// DEVINTCTRL: USB Device Interrupt Clear
	// Position of FRAME_CLR field.
	USB_DEVINTCTRL_FRAME_CLR_Pos = 0x0
	// Bit mask of FRAME_CLR field.
	USB_DEVINTCTRL_FRAME_CLR_Msk = 0x1
	// Bit FRAME_CLR.
	USB_DEVINTCTRL_FRAME_CLR = 0x1
	// Position of EP0_CLR field.
	USB_DEVINTCTRL_EP0_CLR_Pos = 0x1
	// Bit mask of EP0_CLR field.
	USB_DEVINTCTRL_EP0_CLR_Msk = 0x2
	// Bit EP0_CLR.
	USB_DEVINTCTRL_EP0_CLR = 0x2
	// Position of EP1_CLR field.
	USB_DEVINTCTRL_EP1_CLR_Pos = 0x2
	// Bit mask of EP1_CLR field.
	USB_DEVINTCTRL_EP1_CLR_Msk = 0x4
	// Bit EP1_CLR.
	USB_DEVINTCTRL_EP1_CLR = 0x4
	// Position of EP2_CLR field.
	USB_DEVINTCTRL_EP2_CLR_Pos = 0x3
	// Bit mask of EP2_CLR field.
	USB_DEVINTCTRL_EP2_CLR_Msk = 0x8
	// Bit EP2_CLR.
	USB_DEVINTCTRL_EP2_CLR = 0x8
	// Position of EP3_CLR field.
	USB_DEVINTCTRL_EP3_CLR_Pos = 0x4
	// Bit mask of EP3_CLR field.
	USB_DEVINTCTRL_EP3_CLR_Msk = 0x10
	// Bit EP3_CLR.
	USB_DEVINTCTRL_EP3_CLR = 0x10
	// Position of EP4_CLR field.
	USB_DEVINTCTRL_EP4_CLR_Pos = 0x5
	// Bit mask of EP4_CLR field.
	USB_DEVINTCTRL_EP4_CLR_Msk = 0x20
	// Bit EP4_CLR.
	USB_DEVINTCTRL_EP4_CLR = 0x20
	// Position of EP5_CLR field.
	USB_DEVINTCTRL_EP5_CLR_Pos = 0x6
	// Bit mask of EP5_CLR field.
	USB_DEVINTCTRL_EP5_CLR_Msk = 0x40
	// Bit EP5_CLR.
	USB_DEVINTCTRL_EP5_CLR = 0x40
	// Position of EP6_CLR field.
	USB_DEVINTCTRL_EP6_CLR_Pos = 0x7
	// Bit mask of EP6_CLR field.
	USB_DEVINTCTRL_EP6_CLR_Msk = 0x80
	// Bit EP6_CLR.
	USB_DEVINTCTRL_EP6_CLR = 0x80
	// Position of EP7_CLR field.
	USB_DEVINTCTRL_EP7_CLR_Pos = 0x8
	// Bit mask of EP7_CLR field.
	USB_DEVINTCTRL_EP7_CLR_Msk = 0x100
	// Bit EP7_CLR.
	USB_DEVINTCTRL_EP7_CLR = 0x100
	// Position of DEV_STAT_CLR field.
	USB_DEVINTCTRL_DEV_STAT_CLR_Pos = 0x9
	// Bit mask of DEV_STAT_CLR field.
	USB_DEVINTCTRL_DEV_STAT_CLR_Msk = 0x200
	// Bit DEV_STAT_CLR.
	USB_DEVINTCTRL_DEV_STAT_CLR = 0x200
	// Position of CC_EMPTY_CLR field.
	USB_DEVINTCTRL_CC_EMPTY_CLR_Pos = 0xa
	// Bit mask of CC_EMPTY_CLR field.
	USB_DEVINTCTRL_CC_EMPTY_CLR_Msk = 0x400
	// Bit CC_EMPTY_CLR.
	USB_DEVINTCTRL_CC_EMPTY_CLR = 0x400
	// Position of CD_FULL_CLR field.
	USB_DEVINTCTRL_CD_FULL_CLR_Pos = 0xb
	// Bit mask of CD_FULL_CLR field.
	USB_DEVINTCTRL_CD_FULL_CLR_Msk = 0x800
	// Bit CD_FULL_CLR.
	USB_DEVINTCTRL_CD_FULL_CLR = 0x800
	// Position of RXENDPKT_CLR field.
	USB_DEVINTCTRL_RXENDPKT_CLR_Pos = 0xc
	// Bit mask of RXENDPKT_CLR field.
	USB_DEVINTCTRL_RXENDPKT_CLR_Msk = 0x1000
	// Bit RXENDPKT_CLR.
	USB_DEVINTCTRL_RXENDPKT_CLR = 0x1000
	// Position of TXENDPKT_CLR field.
	USB_DEVINTCTRL_TXENDPKT_CLR_Pos = 0xd
	// Bit mask of TXENDPKT_CLR field.
	USB_DEVINTCTRL_TXENDPKT_CLR_Msk = 0x2000
	// Bit TXENDPKT_CLR.
	USB_DEVINTCTRL_TXENDPKT_CLR = 0x2000
	// Position of RESERVED field.
	USB_DEVINTCTRL_RESERVED_Pos = 0xe
	// Bit mask of RESERVED field.
	USB_DEVINTCTRL_RESERVED_Msk = 0xffffc000

	// DEVINTSET: USB Device Interrupt Set
	// Position of FRAME_SET field.
	USB_DEVINTSET_FRAME_SET_Pos = 0x0
	// Bit mask of FRAME_SET field.
	USB_DEVINTSET_FRAME_SET_Msk = 0x1
	// Bit FRAME_SET.
	USB_DEVINTSET_FRAME_SET = 0x1
	// Position of EP0_SET field.
	USB_DEVINTSET_EP0_SET_Pos = 0x1
	// Bit mask of EP0_SET field.
	USB_DEVINTSET_EP0_SET_Msk = 0x2
	// Bit EP0_SET.
	USB_DEVINTSET_EP0_SET = 0x2
	// Position of EP1_SET field.
	USB_DEVINTSET_EP1_SET_Pos = 0x2
	// Bit mask of EP1_SET field.
	USB_DEVINTSET_EP1_SET_Msk = 0x4
	// Bit EP1_SET.
	USB_DEVINTSET_EP1_SET = 0x4
	// Position of EP2_SET field.
	USB_DEVINTSET_EP2_SET_Pos = 0x3
	// Bit mask of EP2_SET field.
	USB_DEVINTSET_EP2_SET_Msk = 0x8
	// Bit EP2_SET.
	USB_DEVINTSET_EP2_SET = 0x8
	// Position of EP3_SET field.
	USB_DEVINTSET_EP3_SET_Pos = 0x4
	// Bit mask of EP3_SET field.
	USB_DEVINTSET_EP3_SET_Msk = 0x10
	// Bit EP3_SET.
	USB_DEVINTSET_EP3_SET = 0x10
	// Position of EP4_SET field.
	USB_DEVINTSET_EP4_SET_Pos = 0x5
	// Bit mask of EP4_SET field.
	USB_DEVINTSET_EP4_SET_Msk = 0x20
	// Bit EP4_SET.
	USB_DEVINTSET_EP4_SET = 0x20
	// Position of EP5_SET field.
	USB_DEVINTSET_EP5_SET_Pos = 0x6
	// Bit mask of EP5_SET field.
	USB_DEVINTSET_EP5_SET_Msk = 0x40
	// Bit EP5_SET.
	USB_DEVINTSET_EP5_SET = 0x40
	// Position of EP6_SET field.
	USB_DEVINTSET_EP6_SET_Pos = 0x7
	// Bit mask of EP6_SET field.
	USB_DEVINTSET_EP6_SET_Msk = 0x80
	// Bit EP6_SET.
	USB_DEVINTSET_EP6_SET = 0x80
	// Position of EP7_SET field.
	USB_DEVINTSET_EP7_SET_Pos = 0x8
	// Bit mask of EP7_SET field.
	USB_DEVINTSET_EP7_SET_Msk = 0x100
	// Bit EP7_SET.
	USB_DEVINTSET_EP7_SET = 0x100
	// Position of DEV_STAT_SET field.
	USB_DEVINTSET_DEV_STAT_SET_Pos = 0x9
	// Bit mask of DEV_STAT_SET field.
	USB_DEVINTSET_DEV_STAT_SET_Msk = 0x200
	// Bit DEV_STAT_SET.
	USB_DEVINTSET_DEV_STAT_SET = 0x200
	// Position of CC_EMPTY_SET field.
	USB_DEVINTSET_CC_EMPTY_SET_Pos = 0xa
	// Bit mask of CC_EMPTY_SET field.
	USB_DEVINTSET_CC_EMPTY_SET_Msk = 0x400
	// Bit CC_EMPTY_SET.
	USB_DEVINTSET_CC_EMPTY_SET = 0x400
	// Position of CD_FULL_SET field.
	USB_DEVINTSET_CD_FULL_SET_Pos = 0xb
	// Bit mask of CD_FULL_SET field.
	USB_DEVINTSET_CD_FULL_SET_Msk = 0x800
	// Bit CD_FULL_SET.
	USB_DEVINTSET_CD_FULL_SET = 0x800
	// Position of RXENDPKT_SET field.
	USB_DEVINTSET_RXENDPKT_SET_Pos = 0xc
	// Bit mask of RXENDPKT_SET field.
	USB_DEVINTSET_RXENDPKT_SET_Msk = 0x1000
	// Bit RXENDPKT_SET.
	USB_DEVINTSET_RXENDPKT_SET = 0x1000
	// Position of TXENDPKT_SET field.
	USB_DEVINTSET_TXENDPKT_SET_Pos = 0xd
	// Bit mask of TXENDPKT_SET field.
	USB_DEVINTSET_TXENDPKT_SET_Msk = 0x2000
	// Bit TXENDPKT_SET.
	USB_DEVINTSET_TXENDPKT_SET = 0x2000
	// Position of RESERVED field.
	USB_DEVINTSET_RESERVED_Pos = 0xe
	// Bit mask of RESERVED field.
	USB_DEVINTSET_RESERVED_Msk = 0xffffc000

	// CMDCODE: USB Command Code
	// Position of RESERVED field.
	USB_CMDCODE_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	USB_CMDCODE_RESERVED_Msk = 0xff
	// Position of CMD_PHASE field.
	USB_CMDCODE_CMD_PHASE_Pos = 0x8
	// Bit mask of CMD_PHASE field.
	USB_CMDCODE_CMD_PHASE_Msk = 0xff00
	// Write
	USB_CMDCODE_CMD_PHASE_WRITE = 0x1
	// Read
	USB_CMDCODE_CMD_PHASE_READ = 0x2
	// Command
	USB_CMDCODE_CMD_PHASE_COMMAND = 0x5
	// Position of CODE_WDATA field.
	USB_CMDCODE_CODE_WDATA_Pos = 0x10
	// Bit mask of CODE_WDATA field.
	USB_CMDCODE_CODE_WDATA_Msk = 0xff0000
	// Position of RESERVED field.
	USB_CMDCODE_RESERVED_Pos = 0x18
	// Bit mask of RESERVED field.
	USB_CMDCODE_RESERVED_Msk = 0xff000000

	// CMDDATA: USB Command Data
	// Position of CMD_RDATA field.
	USB_CMDDATA_CMD_RDATA_Pos = 0x0
	// Bit mask of CMD_RDATA field.
	USB_CMDDATA_CMD_RDATA_Msk = 0xff
	// Position of RESERVED field.
	USB_CMDDATA_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	USB_CMDDATA_RESERVED_Msk = 0xffffff00

	// RXDATA: USB Receive Data
	// Position of RX_DATA field.
	USB_RXDATA_RX_DATA_Pos = 0x0
	// Bit mask of RX_DATA field.
	USB_RXDATA_RX_DATA_Msk = 0xffffffff

	// TXDATA: USB Transmit Data
	// Position of TX_DATA field.
	USB_TXDATA_TX_DATA_Pos = 0x0
	// Bit mask of TX_DATA field.
	USB_TXDATA_TX_DATA_Msk = 0xffffffff

	// RXPLEN: USB Receive Packet Length
	// Position of PKT_LNGTH field.
	USB_RXPLEN_PKT_LNGTH_Pos = 0x0
	// Bit mask of PKT_LNGTH field.
	USB_RXPLEN_PKT_LNGTH_Msk = 0x3ff
	// Position of DV field.
	USB_RXPLEN_DV_Pos = 0xa
	// Bit mask of DV field.
	USB_RXPLEN_DV_Msk = 0x400
	// Bit DV.
	USB_RXPLEN_DV = 0x400
	// Data is invalid.
	USB_RXPLEN_DV_DATA_IS_INVALID_ = 0x0
	// Data is valid.
	USB_RXPLEN_DV_DATA_IS_VALID_ = 0x1
	// Position of RESERVED field.
	USB_RXPLEN_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	USB_RXPLEN_RESERVED_Msk = 0xfffff800

	// TXPLENn: USB Transmit Packet Length
	// Position of PKT_LNGTH field.
	USB_TXPLENn_PKT_LNGTH_Pos = 0x0
	// Bit mask of PKT_LNGTH field.
	USB_TXPLENn_PKT_LNGTH_Msk = 0x3ff
	// Position of RESERVED field.
	USB_TXPLENn_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	USB_TXPLENn_RESERVED_Msk = 0xfffffc00

	// CTRL: USB Control
	// Position of RD_EN field.
	USB_CTRL_RD_EN_Pos = 0x0
	// Bit mask of RD_EN field.
	USB_CTRL_RD_EN_Msk = 0x1
	// Bit RD_EN.
	USB_CTRL_RD_EN = 0x1
	// Read mode is disabled.
	USB_CTRL_RD_EN_READ_MODE_IS_DISABLE = 0x0
	// Read mode is enabled.
	USB_CTRL_RD_EN_READ_MODE_IS_ENABLED = 0x1
	// Position of WR_EN field.
	USB_CTRL_WR_EN_Pos = 0x1
	// Bit mask of WR_EN field.
	USB_CTRL_WR_EN_Msk = 0x2
	// Bit WR_EN.
	USB_CTRL_WR_EN = 0x2
	// Write mode is disabled.
	USB_CTRL_WR_EN_WRITE_MODE_IS_DISABL = 0x0
	// Write mode is enabled.
	USB_CTRL_WR_EN_WRITE_MODE_IS_ENABLE = 0x1
	// Position of LOG_ENDPOINT field.
	USB_CTRL_LOG_ENDPOINT_Pos = 0x2
	// Bit mask of LOG_ENDPOINT field.
	USB_CTRL_LOG_ENDPOINT_Msk = 0x3c
	// Position of RESERVED field.
	USB_CTRL_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	USB_CTRL_RESERVED_Msk = 0xffffffc0

	// DEVFIQSEL: USB Device FIQ select
	// Position of FRAME field.
	USB_DEVFIQSEL_FRAME_Pos = 0x0
	// Bit mask of FRAME field.
	USB_DEVFIQSEL_FRAME_Msk = 0x1
	// Bit FRAME.
	USB_DEVFIQSEL_FRAME = 0x1
	// FRAME interrupt will be routed to the low-priority interrupt line IRQ.
	USB_DEVFIQSEL_FRAME_LOWPRIORITY = 0x0
	// FRAME interrupt will be routed to the high-priority interrupt line FIQ.
	USB_DEVFIQSEL_FRAME_HIGHPRIORITY = 0x1
	// Position of BULKOUT field.
	USB_DEVFIQSEL_BULKOUT_Pos = 0x1
	// Bit mask of BULKOUT field.
	USB_DEVFIQSEL_BULKOUT_Msk = 0x2
	// Bit BULKOUT.
	USB_DEVFIQSEL_BULKOUT = 0x2
	// BULKOUT interrupt will be routed to the low-priority interrupt line IRQ.
	USB_DEVFIQSEL_BULKOUT_LOWPRIORITY = 0x0
	// BULKOUT interrupt will be routed to the high-priority interrupt line FIQ.
	USB_DEVFIQSEL_BULKOUT_HIGHPRIORITY = 0x1
	// Position of BULKIN field.
	USB_DEVFIQSEL_BULKIN_Pos = 0x2
	// Bit mask of BULKIN field.
	USB_DEVFIQSEL_BULKIN_Msk = 0x4
	// Bit BULKIN.
	USB_DEVFIQSEL_BULKIN = 0x4
	// BULKIN interrupt will be routed to the low-priority interrupt line IRQ.
	USB_DEVFIQSEL_BULKIN_LOWPRIORITY = 0x0
	// BULKIN interrupt will be routed to the high-priority interrupt line FIQ.
	USB_DEVFIQSEL_BULKIN_HIGHPRIORITY = 0x1
	// Position of RESERVED field.
	USB_DEVFIQSEL_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	USB_DEVFIQSEL_RESERVED_Msk = 0xfffffff8
)

// Bitfields for PMU: Product name title=UM10375 Chapter title=LPC13xx Power Management Unit (PMU) Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// PCON: Power control register
	// Position of RESERVED field.
	PMU_PCON_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	PMU_PCON_RESERVED_Msk = 0x1
	// Bit RESERVED.
	PMU_PCON_RESERVED = 0x1
	// Position of DPDEN field.
	PMU_PCON_DPDEN_Pos = 0x1
	// Bit mask of DPDEN field.
	PMU_PCON_DPDEN_Msk = 0x2
	// Bit DPDEN.
	PMU_PCON_DPDEN = 0x2
	// ARM WFI will enter Sleep or Deep-sleep mode (clock to ARM Cortex-M3 core turned off).
	PMU_PCON_DPDEN_SLEEP_DEEPSLEEP = 0x0
	// ARM WFI will enter Deep-power down mode (ARM Cortex-M3 core powered-down).
	PMU_PCON_DPDEN_DEEPPOWERDOWN = 0x1
	// Position of RESERVED field.
	PMU_PCON_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	PMU_PCON_RESERVED_Msk = 0xfc
	// Position of SLEEPFLAG field.
	PMU_PCON_SLEEPFLAG_Pos = 0x8
	// Bit mask of SLEEPFLAG field.
	PMU_PCON_SLEEPFLAG_Msk = 0x100
	// Bit SLEEPFLAG.
	PMU_PCON_SLEEPFLAG = 0x100
	// Read: No power-down mode entered. LPC13xx is in Run mode. Write: No effect.
	PMU_PCON_SLEEPFLAG_NO_POWER_DOWN_ = 0x0
	// Read: Sleep/Deep-sleep or Deep power-down mode entered. Write: Writing a 1 clears the SLEEPFLAG bit to 0.
	PMU_PCON_SLEEPFLAG_POWERDOWN = 0x1
	// Position of RESERVED field.
	PMU_PCON_RESERVED_Pos = 0x9
	// Bit mask of RESERVED field.
	PMU_PCON_RESERVED_Msk = 0x600
	// Position of DPDFLAG field.
	PMU_PCON_DPDFLAG_Pos = 0xb
	// Bit mask of DPDFLAG field.
	PMU_PCON_DPDFLAG_Msk = 0x800
	// Bit DPDFLAG.
	PMU_PCON_DPDFLAG = 0x800
	// Read: Deep power-down mode not entered. Write: No effect.
	PMU_PCON_DPDFLAG_NO_DEEPPOWERDOWN = 0x0
	// Read: Deep power-down mode entered. Write: Clear the Deep power-down flag.
	PMU_PCON_DPDFLAG_DEEPPOWERDOWN = 0x1
	// Position of RESERVED field.
	PMU_PCON_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	PMU_PCON_RESERVED_Msk = 0xfffff000

	// GPREG0: General purpose register
	// Position of GPDATA field.
	PMU_GPREG_GPDATA_Pos = 0x0
	// Bit mask of GPDATA field.
	PMU_GPREG_GPDATA_Msk = 0xffffffff

	// GPREG4: General purpose register 4
	// Position of RESERVED field.
	PMU_GPREG4_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	PMU_GPREG4_RESERVED_Msk = 0x3ff
	// Position of WAKEUPHYS field.
	PMU_GPREG4_WAKEUPHYS_Pos = 0xa
	// Bit mask of WAKEUPHYS field.
	PMU_GPREG4_WAKEUPHYS_Msk = 0x400
	// Bit WAKEUPHYS.
	PMU_GPREG4_WAKEUPHYS = 0x400
	// Hysteresis for WAKUP pin disabled.
	PMU_GPREG4_WAKEUPHYS_DISABLED = 0x0
	// Hysteresis for WAKEUP pin enabled.
	PMU_GPREG4_WAKEUPHYS_ENABLED = 0x1
	// Position of GPDATA field.
	PMU_GPREG4_GPDATA_Pos = 0xb
	// Bit mask of GPDATA field.
	PMU_GPREG4_GPDATA_Msk = 0xfffff800
)

// Bitfields for FMC: Product name title=UM10375 Chapter title=LPC13xx Flash memory programming firmware Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// FLASHCFG: Flash configuration register
	// Position of FLASHTIM field.
	FMC_FLASHCFG_FLASHTIM_Pos = 0x0
	// Bit mask of FLASHTIM field.
	FMC_FLASHCFG_FLASHTIM_Msk = 0x3
	// 1 system clock flash access time (for system clock frequencies of up to 20 MHz).
	FMC_FLASHCFG_FLASHTIM_1_SYSTEM_CLOCK_FLASH = 0x0
	// 2 system clocks flash access time (for system clock frequencies of up to 40 MHz).
	FMC_FLASHCFG_FLASHTIM_2_SYSTEM_CLOCKS_FLAS = 0x1
	// 3 system clocks flash access time (for system clock frequencies of up to 72 MHz).
	FMC_FLASHCFG_FLASHTIM_3_SYSTEM_CLOCKS_FLAS = 0x2
	// Reserved.
	FMC_FLASHCFG_FLASHTIM_RESERVED_ = 0x3
	// Position of RESERVED field.
	FMC_FLASHCFG_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	FMC_FLASHCFG_RESERVED_Msk = 0xfffffffc

	// FMSSTART: Signature start address register
	// Position of START field.
	FMC_FMSSTART_START_Pos = 0x0
	// Bit mask of START field.
	FMC_FMSSTART_START_Msk = 0x1ffff
	// Position of RESERVED field.
	FMC_FMSSTART_RESERVED_Pos = 0x11
	// Bit mask of RESERVED field.
	FMC_FMSSTART_RESERVED_Msk = 0xfffe0000

	// FMSSTOP: Signature stop-address register
	// Position of STOP field.
	FMC_FMSSTOP_STOP_Pos = 0x0
	// Bit mask of STOP field.
	FMC_FMSSTOP_STOP_Msk = 0x1ffff
	// Position of SIG_START field.
	FMC_FMSSTOP_SIG_START_Pos = 0x11
	// Bit mask of SIG_START field.
	FMC_FMSSTOP_SIG_START_Msk = 0x20000
	// Bit SIG_START.
	FMC_FMSSTOP_SIG_START = 0x20000
	// Signature generation is stopped
	FMC_FMSSTOP_SIG_START_SIGNATURE_GENERATION = 0x0
	// Initiate signature generation
	FMC_FMSSTOP_SIG_START_INITIATE_SIGNATURE_G = 0x1
	// Position of RESERVED field.
	FMC_FMSSTOP_RESERVED_Pos = 0x12
	// Bit mask of RESERVED field.
	FMC_FMSSTOP_RESERVED_Msk = 0xfffc0000

	// FMSW0: Word 0 [31:0]
	// Position of SW0_31_0 field.
	FMC_FMSW0_SW0_31_0_Pos = 0x0
	// Bit mask of SW0_31_0 field.
	FMC_FMSW0_SW0_31_0_Msk = 0xffffffff

	// FMSW1: Word 1 [63:32]
	// Position of SW1_63_32 field.
	FMC_FMSW1_SW1_63_32_Pos = 0x0
	// Bit mask of SW1_63_32 field.
	FMC_FMSW1_SW1_63_32_Msk = 0xffffffff

	// FMSW2: Word 2 [95:64]
	// Position of SW2_95_64 field.
	FMC_FMSW2_SW2_95_64_Pos = 0x0
	// Bit mask of SW2_95_64 field.
	FMC_FMSW2_SW2_95_64_Msk = 0xffffffff

	// FMSW3: Word 3 [127:96]
	// Position of SW3_127_96 field.
	FMC_FMSW3_SW3_127_96_Pos = 0x0
	// Bit mask of SW3_127_96 field.
	FMC_FMSW3_SW3_127_96_Msk = 0xffffffff

	// FMSTAT: Signature generation status register
	// Position of RESERVED field.
	FMC_FMSTAT_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	FMC_FMSTAT_RESERVED_Msk = 0x3
	// Position of SIG_DONE field.
	FMC_FMSTAT_SIG_DONE_Pos = 0x2
	// Bit mask of SIG_DONE field.
	FMC_FMSTAT_SIG_DONE_Msk = 0x4
	// Bit SIG_DONE.
	FMC_FMSTAT_SIG_DONE = 0x4
	// Position of RESERVED field.
	FMC_FMSTAT_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	FMC_FMSTAT_RESERVED_Msk = 0xfffffff8

	// FMSTATCLR: Signature generation status clear register
	// Position of RESERVED field.
	FMC_FMSTATCLR_RESERVED_Pos = 0x0
	// Bit mask of RESERVED field.
	FMC_FMSTATCLR_RESERVED_Msk = 0x3
	// Position of SIG_DONE_CLR field.
	FMC_FMSTATCLR_SIG_DONE_CLR_Pos = 0x2
	// Bit mask of SIG_DONE_CLR field.
	FMC_FMSTATCLR_SIG_DONE_CLR_Msk = 0x4
	// Bit SIG_DONE_CLR.
	FMC_FMSTATCLR_SIG_DONE_CLR = 0x4
	// Position of RESERVED field.
	FMC_FMSTATCLR_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	FMC_FMSTATCLR_RESERVED_Msk = 0xfffffff8
)

// Bitfields for SSP0: Product name title=UM10375 Chapter title=LPC13xx SSP0/1 Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// CR0: Control Register 0. Selects the serial clock rate, bus type, and data size.
	// Position of DSS field.
	SSP0_CR0_DSS_Pos = 0x0
	// Bit mask of DSS field.
	SSP0_CR0_DSS_Msk = 0xf
	// 4-bit transfer
	SSP0_CR0_DSS_4_BIT_TRANSFER = 0x3
	// 5-bit transfer
	SSP0_CR0_DSS_5_BIT_TRANSFER = 0x4
	// 6-bit transfer
	SSP0_CR0_DSS_6_BIT_TRANSFER = 0x5
	// 7-bit transfer
	SSP0_CR0_DSS_7_BIT_TRANSFER = 0x6
	// 8-bit transfer
	SSP0_CR0_DSS_8_BIT_TRANSFER = 0x7
	// 9-bit transfer
	SSP0_CR0_DSS_9_BIT_TRANSFER = 0x8
	// 10-bit transfer
	SSP0_CR0_DSS_10_BIT_TRANSFER = 0x9
	// 11-bit transfer
	SSP0_CR0_DSS_11_BIT_TRANSFER = 0xa
	// 12-bit transfer
	SSP0_CR0_DSS_12_BIT_TRANSFER = 0xb
	// 13-bit transfer
	SSP0_CR0_DSS_13_BIT_TRANSFER = 0xc
	// 14-bit transfer
	SSP0_CR0_DSS_14_BIT_TRANSFER = 0xd
	// 15-bit transfer
	SSP0_CR0_DSS_15_BIT_TRANSFER = 0xe
	// 16-bit transfer
	SSP0_CR0_DSS_16_BIT_TRANSFER = 0xf
	// Position of FRF field.
	SSP0_CR0_FRF_Pos = 0x4
	// Bit mask of FRF field.
	SSP0_CR0_FRF_Msk = 0x30
	// SPI
	SSP0_CR0_FRF_SPI = 0x0
	// TI
	SSP0_CR0_FRF_TI = 0x1
	// Microwire
	SSP0_CR0_FRF_MICROWIRE = 0x2
	// This combination is not supported and should not be used.
	SSP0_CR0_FRF_THIS_COMBINATION_IS_ = 0x3
	// Position of CPOL field.
	SSP0_CR0_CPOL_Pos = 0x6
	// Bit mask of CPOL field.
	SSP0_CR0_CPOL_Msk = 0x40
	// Bit CPOL.
	SSP0_CR0_CPOL = 0x40
	// SSP controller maintains the bus clock low between frames.
	SSP0_CR0_CPOL_LOW = 0x0
	// SSP controller maintains the bus clock high between frames.
	SSP0_CR0_CPOL_HIGH = 0x1
	// Position of CPHA field.
	SSP0_CR0_CPHA_Pos = 0x7
	// Bit mask of CPHA field.
	SSP0_CR0_CPHA_Msk = 0x80
	// Bit CPHA.
	SSP0_CR0_CPHA = 0x80
	// SSP controller captures serial data on the first clock transition of the frame, that is, the transition away from the inter-frame state of the clock line.
	SSP0_CR0_CPHA_FIRSTCLOCK = 0x0
	// SSP controller captures serial data on the second clock transition of the frame, that is, the transition back to the inter-frame state of the clock line.
	SSP0_CR0_CPHA_SECONDCLOK = 0x1
	// Position of SCR field.
	SSP0_CR0_SCR_Pos = 0x8
	// Bit mask of SCR field.
	SSP0_CR0_SCR_Msk = 0xff00
	// Position of RESERVED field.
	SSP0_CR0_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	SSP0_CR0_RESERVED_Msk = 0xffff0000

	// CR1: Control Register 1. Selects master/slave and other modes.
	// Position of LBM field.
	SSP0_CR1_LBM_Pos = 0x0
	// Bit mask of LBM field.
	SSP0_CR1_LBM_Msk = 0x1
	// Bit LBM.
	SSP0_CR1_LBM = 0x1
	// During normal operation.
	SSP0_CR1_LBM_NORMAL = 0x0
	// Serial input is taken from the serial output (MOSI or MISO) rather than the serial input pin (MISO or MOSI respectively).
	SSP0_CR1_LBM_OUTPUT = 0x1
	// Position of SSE field.
	SSP0_CR1_SSE_Pos = 0x1
	// Bit mask of SSE field.
	SSP0_CR1_SSE_Msk = 0x2
	// Bit SSE.
	SSP0_CR1_SSE = 0x2
	// The SSP controller is disabled.
	SSP0_CR1_SSE_DISABLED = 0x0
	// The SSP controller will interact with other devices on the serial bus. Software should write the appropriate control information to the other SSP registers and interrupt controller registers, before setting this bit.
	SSP0_CR1_SSE_ENABLED = 0x1
	// Position of MS field.
	SSP0_CR1_MS_Pos = 0x2
	// Bit mask of MS field.
	SSP0_CR1_MS_Msk = 0x4
	// Bit MS.
	SSP0_CR1_MS = 0x4
	// The SSP controller acts as a master on the bus, driving the SCLK, MOSI, and SSEL lines and receiving the MISO line.
	SSP0_CR1_MS_MASTER = 0x0
	// The SSP controller acts as a slave on the bus, driving MISO line and receiving SCLK, MOSI, and SSEL lines.
	SSP0_CR1_MS_SLAVE = 0x1
	// Position of SOD field.
	SSP0_CR1_SOD_Pos = 0x3
	// Bit mask of SOD field.
	SSP0_CR1_SOD_Msk = 0x8
	// Bit SOD.
	SSP0_CR1_SOD = 0x8
	// Position of RESERVED field.
	SSP0_CR1_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	SSP0_CR1_RESERVED_Msk = 0xfffffff0

	// DR: Data Register. Writes fill the transmit FIFO, and reads empty the receive FIFO.
	// Position of DATA field.
	SSP0_DR_DATA_Pos = 0x0
	// Bit mask of DATA field.
	SSP0_DR_DATA_Msk = 0xffff
	// Position of RESERVED field.
	SSP0_DR_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	SSP0_DR_RESERVED_Msk = 0xffff0000

	// SR: Status Register.
	// Position of TFE field.
	SSP0_SR_TFE_Pos = 0x0
	// Bit mask of TFE field.
	SSP0_SR_TFE_Msk = 0x1
	// Bit TFE.
	SSP0_SR_TFE = 0x1
	// Position of TNF field.
	SSP0_SR_TNF_Pos = 0x1
	// Bit mask of TNF field.
	SSP0_SR_TNF_Msk = 0x2
	// Bit TNF.
	SSP0_SR_TNF = 0x2
	// Position of RNE field.
	SSP0_SR_RNE_Pos = 0x2
	// Bit mask of RNE field.
	SSP0_SR_RNE_Msk = 0x4
	// Bit RNE.
	SSP0_SR_RNE = 0x4
	// Position of RFF field.
	SSP0_SR_RFF_Pos = 0x3
	// Bit mask of RFF field.
	SSP0_SR_RFF_Msk = 0x8
	// Bit RFF.
	SSP0_SR_RFF = 0x8
	// Position of BSY field.
	SSP0_SR_BSY_Pos = 0x4
	// Bit mask of BSY field.
	SSP0_SR_BSY_Msk = 0x10
	// Bit BSY.
	SSP0_SR_BSY = 0x10
	// Position of RESERVED field.
	SSP0_SR_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	SSP0_SR_RESERVED_Msk = 0xffffffe0

	// CPSR: Clock Prescale Register.
	// Position of CPSDVSR field.
	SSP0_CPSR_CPSDVSR_Pos = 0x0
	// Bit mask of CPSDVSR field.
	SSP0_CPSR_CPSDVSR_Msk = 0xff
	// Position of RESERVED field.
	SSP0_CPSR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SSP0_CPSR_RESERVED_Msk = 0xffffff00

	// IMSC: Interrupt Mask Set and Clear Register.
	// Position of RORIM field.
	SSP0_IMSC_RORIM_Pos = 0x0
	// Bit mask of RORIM field.
	SSP0_IMSC_RORIM_Msk = 0x1
	// Bit RORIM.
	SSP0_IMSC_RORIM = 0x1
	// Position of RTIM field.
	SSP0_IMSC_RTIM_Pos = 0x1
	// Bit mask of RTIM field.
	SSP0_IMSC_RTIM_Msk = 0x2
	// Bit RTIM.
	SSP0_IMSC_RTIM = 0x2
	// Position of RXIM field.
	SSP0_IMSC_RXIM_Pos = 0x2
	// Bit mask of RXIM field.
	SSP0_IMSC_RXIM_Msk = 0x4
	// Bit RXIM.
	SSP0_IMSC_RXIM = 0x4
	// Position of TXIM field.
	SSP0_IMSC_TXIM_Pos = 0x3
	// Bit mask of TXIM field.
	SSP0_IMSC_TXIM_Msk = 0x8
	// Bit TXIM.
	SSP0_IMSC_TXIM = 0x8
	// Position of RESERVED field.
	SSP0_IMSC_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	SSP0_IMSC_RESERVED_Msk = 0xfffffff0

	// RIS: Raw Interrupt Status Register.
	// Position of RORRIS field.
	SSP0_RIS_RORRIS_Pos = 0x0
	// Bit mask of RORRIS field.
	SSP0_RIS_RORRIS_Msk = 0x1
	// Bit RORRIS.
	SSP0_RIS_RORRIS = 0x1
	// Position of RTRIS field.
	SSP0_RIS_RTRIS_Pos = 0x1
	// Bit mask of RTRIS field.
	SSP0_RIS_RTRIS_Msk = 0x2
	// Bit RTRIS.
	SSP0_RIS_RTRIS = 0x2
	// Position of RXRIS field.
	SSP0_RIS_RXRIS_Pos = 0x2
	// Bit mask of RXRIS field.
	SSP0_RIS_RXRIS_Msk = 0x4
	// Bit RXRIS.
	SSP0_RIS_RXRIS = 0x4
	// Position of TXRIS field.
	SSP0_RIS_TXRIS_Pos = 0x3
	// Bit mask of TXRIS field.
	SSP0_RIS_TXRIS_Msk = 0x8
	// Bit TXRIS.
	SSP0_RIS_TXRIS = 0x8
	// Position of RESERVED field.
	SSP0_RIS_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	SSP0_RIS_RESERVED_Msk = 0xfffffff0

	// MIS: Masked Interrupt Status Register.
	// Position of RORMIS field.
	SSP0_MIS_RORMIS_Pos = 0x0
	// Bit mask of RORMIS field.
	SSP0_MIS_RORMIS_Msk = 0x1
	// Bit RORMIS.
	SSP0_MIS_RORMIS = 0x1
	// Position of RTMIS field.
	SSP0_MIS_RTMIS_Pos = 0x1
	// Bit mask of RTMIS field.
	SSP0_MIS_RTMIS_Msk = 0x2
	// Bit RTMIS.
	SSP0_MIS_RTMIS = 0x2
	// Position of RXMIS field.
	SSP0_MIS_RXMIS_Pos = 0x2
	// Bit mask of RXMIS field.
	SSP0_MIS_RXMIS_Msk = 0x4
	// Bit RXMIS.
	SSP0_MIS_RXMIS = 0x4
	// Position of TXMIS field.
	SSP0_MIS_TXMIS_Pos = 0x3
	// Bit mask of TXMIS field.
	SSP0_MIS_TXMIS_Msk = 0x8
	// Bit TXMIS.
	SSP0_MIS_TXMIS = 0x8
	// Position of RESERVED field.
	SSP0_MIS_RESERVED_Pos = 0x4
	// Bit mask of RESERVED field.
	SSP0_MIS_RESERVED_Msk = 0xfffffff0

	// ICR: SSPICR Interrupt Clear Register.
	// Position of RORIC field.
	SSP0_ICR_RORIC_Pos = 0x0
	// Bit mask of RORIC field.
	SSP0_ICR_RORIC_Msk = 0x1
	// Bit RORIC.
	SSP0_ICR_RORIC = 0x1
	// Position of RTIC field.
	SSP0_ICR_RTIC_Pos = 0x1
	// Bit mask of RTIC field.
	SSP0_ICR_RTIC_Msk = 0x2
	// Bit RTIC.
	SSP0_ICR_RTIC = 0x2
	// Position of RESERVED field.
	SSP0_ICR_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SSP0_ICR_RESERVED_Msk = 0xfffffffc
)

// Bitfields for IOCON: Product name title=UM10375 Chapter title=LPC13xx I/O configuration Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// PIO2_6: I/O configuration for pin PIO2_6
	// Position of FUNC field.
	IOCON_PIO2_6_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_6_FUNC_Msk = 0x7
	// Selects function PIO2_6.
	IOCON_PIO2_6_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_6_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_6_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_6_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_6_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_6_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_6_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_6_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_6_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_6_HYS = 0x20
	// Disable
	IOCON_PIO2_6_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_6_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_6_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_6_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_6_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_6_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_6_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_6_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_6_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_6_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_6_RESERVED_Msk = 0xfffff800

	// PIO2_0: I/O configuration for pin PIO2_0/DTR/SSEL1
	// Position of FUNC field.
	IOCON_PIO2_0_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_0_FUNC_Msk = 0x7
	// Select function PIO2_0.
	IOCON_PIO2_0_FUNC_PIO2 = 0x0
	// Select function DTR.
	IOCON_PIO2_0_FUNC_DTR_ = 0x1
	// Select function SSEL1 (function not available on all parts).
	IOCON_PIO2_0_FUNC_SSEL = 0x2
	// Position of MODE field.
	IOCON_PIO2_0_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_0_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_0_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_0_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_0_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_0_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_0_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_0_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_0_HYS = 0x20
	// Disable
	IOCON_PIO2_0_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_0_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_0_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_0_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_0_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_0_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_0_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_0_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_0_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_0_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_0_RESERVED_Msk = 0xfffff800

	// RESET_PIO0_0: I/O configuration for pin RESET/PIO0_0
	// Position of FUNC field.
	IOCON_RESET_PIO0_0_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_RESET_PIO0_0_FUNC_Msk = 0x7
	// Selects function RESET.
	IOCON_RESET_PIO0_0_FUNC_RES = 0x0
	// Selects function PIO0_0.
	IOCON_RESET_PIO0_0_FUNC_PIO = 0x1
	// Position of MODE field.
	IOCON_RESET_PIO0_0_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_RESET_PIO0_0_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_RESET_PIO0_0_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_RESET_PIO0_0_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_RESET_PIO0_0_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_RESET_PIO0_0_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_RESET_PIO0_0_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_RESET_PIO0_0_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_RESET_PIO0_0_HYS = 0x20
	// Disable
	IOCON_RESET_PIO0_0_HYS_DISABLE = 0x0
	// Enable
	IOCON_RESET_PIO0_0_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_RESET_PIO0_0_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_RESET_PIO0_0_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_RESET_PIO0_0_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_RESET_PIO0_0_OD_Msk = 0x400
	// Bit OD.
	IOCON_RESET_PIO0_0_OD = 0x400
	// Standard GPIO output
	IOCON_RESET_PIO0_0_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_RESET_PIO0_0_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_RESET_PIO0_0_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_RESET_PIO0_0_RESERVED_Msk = 0xfffff800

	// PIO0_1: I/O configuration for pin PIO0_1/CLKOUT/ CT32B0_MAT2/USB_FTOGGLE
	// Position of FUNC field.
	IOCON_PIO0_1_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_1_FUNC_Msk = 0x7
	// Selects function PIO0_1.
	IOCON_PIO0_1_FUNC_PIO = 0x0
	// Selects function CLKOUT.
	IOCON_PIO0_1_FUNC_CLK = 0x1
	// Selects function CT32B0_MAT2.
	IOCON_PIO0_1_FUNC_CT3 = 0x2
	// Selects function USB_FTOGGLE (function not available on all parts)
	IOCON_PIO0_1_FUNC_USB = 0x3
	// Position of MODE field.
	IOCON_PIO0_1_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_1_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_1_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_1_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_1_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_1_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_1_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_1_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_1_HYS = 0x20
	// Disable
	IOCON_PIO0_1_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_1_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_1_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_1_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_1_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_1_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_1_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_1_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_1_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_1_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_1_RESERVED_Msk = 0xfffff800

	// PIO1_8: I/O configuration for pin PIO1_8/CT16B1_CAP0
	// Position of FUNC field.
	IOCON_PIO1_8_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_8_FUNC_Msk = 0x7
	// Selects function PIO1_8.
	IOCON_PIO1_8_FUNC_PIO = 0x0
	// Selects function CT16B1_CAP0.
	IOCON_PIO1_8_FUNC_CT1 = 0x1
	// Position of MODE field.
	IOCON_PIO1_8_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_8_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_8_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_8_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_8_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_8_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_8_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_8_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_8_HYS = 0x20
	// Disable
	IOCON_PIO1_8_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_8_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_8_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_8_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO1_8_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_8_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_8_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_8_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_8_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_8_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_8_RESERVED_Msk = 0xfffff800

	// PIO0_2: I/O configuration for pin PIO0_2/SSEL0/ CT16B0_CAP0
	// Position of FUNC field.
	IOCON_PIO0_2_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_2_FUNC_Msk = 0x7
	// Selects function PIO0_2.
	IOCON_PIO0_2_FUNC_PIO = 0x0
	// Selects function SSEL0.
	IOCON_PIO0_2_FUNC_SSE = 0x1
	// Selects function CT16B0_CAP0.
	IOCON_PIO0_2_FUNC_CT1 = 0x2
	// Position of MODE field.
	IOCON_PIO0_2_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_2_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_2_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_2_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_2_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_2_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_2_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_2_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_2_HYS = 0x20
	// Disable
	IOCON_PIO0_2_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_2_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_2_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_2_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_2_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_2_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_2_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_2_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_2_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_2_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_2_RESERVED_Msk = 0xfffff800

	// PIO2_7: I/O configuration for pin PIO2_7
	// Position of FUNC field.
	IOCON_PIO2_7_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_7_FUNC_Msk = 0x7
	// Selects function PIO2_7.
	IOCON_PIO2_7_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_7_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_7_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_7_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_7_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_7_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_7_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_7_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_7_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_7_HYS = 0x20
	// Disable
	IOCON_PIO2_7_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_7_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_7_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_7_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_7_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_7_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_7_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_7_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_7_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_7_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_7_RESERVED_Msk = 0xfffff800

	// PIO2_8: I/O configuration for pin PIO2_8
	// Position of FUNC field.
	IOCON_PIO2_8_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_8_FUNC_Msk = 0x7
	// Selects function PIO2_8.
	IOCON_PIO2_8_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_8_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_8_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_8_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_8_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_8_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_8_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_8_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_8_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_8_HYS = 0x20
	// Disable
	IOCON_PIO2_8_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_8_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_8_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_8_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_8_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_8_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_8_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_8_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_8_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_8_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_8_RESERVED_Msk = 0xfffff800

	// PIO2_1: I/O configuration for pin PIO2_1/DSR/SCK1
	// Position of FUNC field.
	IOCON_PIO2_1_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_1_FUNC_Msk = 0x7
	// Selects function PIO2_1.
	IOCON_PIO2_1_FUNC_PIO = 0x0
	// Select function DSR.
	IOCON_PIO2_1_FUNC_DSR_ = 0x1
	// Select function SCK1 (function not available on all parts).
	IOCON_PIO2_1_FUNC_SCK1 = 0x2
	// Position of MODE field.
	IOCON_PIO2_1_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_1_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_1_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_1_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_1_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_1_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_1_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_1_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_1_HYS = 0x20
	// Disable
	IOCON_PIO2_1_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_1_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_1_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_1_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_1_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_1_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_1_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_1_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_1_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_1_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_1_RESERVED_Msk = 0xfffff800

	// PIO0_3: I/O configuration for pin PIO0_3/USB_VBUS
	// Position of FUNC field.
	IOCON_PIO0_3_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_3_FUNC_Msk = 0x7
	// Selects function PIO0_3.
	IOCON_PIO0_3_FUNC_PIO = 0x0
	// Selects function USB_VBUS (function not available on all parts).
	IOCON_PIO0_3_FUNC_USB = 0x1
	// Position of MODE field.
	IOCON_PIO0_3_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_3_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_3_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_3_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_3_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_3_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_3_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_3_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_3_HYS = 0x20
	// Disable
	IOCON_PIO0_3_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_3_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_3_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_3_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_3_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_3_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_3_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_3_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_3_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_3_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_3_RESERVED_Msk = 0xfffff800

	// PIO0_4: I/O configuration for pin PIO0_4/SCL
	// Position of FUNC field.
	IOCON_PIO0_4_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_4_FUNC_Msk = 0x7
	// Selects function PIO0_4 (open-drain pin).
	IOCON_PIO0_4_FUNC_PIO = 0x0
	// Selects I2C function SCL (open-drain pin).
	IOCON_PIO0_4_FUNC_SELECTS_I2C_FUNCTION = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_4_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	IOCON_PIO0_4_RESERVED_Msk = 0xf8
	// Position of I2CMODE field.
	IOCON_PIO0_4_I2CMODE_Pos = 0x8
	// Bit mask of I2CMODE field.
	IOCON_PIO0_4_I2CMODE_Msk = 0x300
	// Fast-mode Plus I2C
	IOCON_PIO0_4_I2CMODE_FAST_MODE_PLUS_I2C = 0x2
	// Position of RESERVED field.
	IOCON_PIO0_4_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	IOCON_PIO0_4_RESERVED_Msk = 0xfffffc00

	// PIO0_5: I/O configuration for pin PIO0_5/SDA
	// Position of FUNC field.
	IOCON_PIO0_5_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_5_FUNC_Msk = 0x7
	// Selects function PIO0_5 (open-drain pin).
	IOCON_PIO0_5_FUNC_PIO = 0x0
	// Selects I2C function SDA (open-drain pin).
	IOCON_PIO0_5_FUNC_SELECTS_I2C_FUNCTION = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_5_RESERVED_Pos = 0x3
	// Bit mask of RESERVED field.
	IOCON_PIO0_5_RESERVED_Msk = 0xf8
	// Position of I2CMODE field.
	IOCON_PIO0_5_I2CMODE_Pos = 0x8
	// Bit mask of I2CMODE field.
	IOCON_PIO0_5_I2CMODE_Msk = 0x300
	// Fast-mode Plus I2C
	IOCON_PIO0_5_I2CMODE_FAST_MODE_PLUS_I2C = 0x2
	// Position of RESERVED field.
	IOCON_PIO0_5_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	IOCON_PIO0_5_RESERVED_Msk = 0xfffffc00

	// PIO1_9: I/O configuration for pin PIO1_9/CT16B1_MAT0
	// Position of FUNC field.
	IOCON_PIO1_9_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_9_FUNC_Msk = 0x7
	// Selects function PIO1_9.
	IOCON_PIO1_9_FUNC_PIO = 0x0
	// Selects function CT16B1_MAT0.
	IOCON_PIO1_9_FUNC_CT1 = 0x1
	// Position of MODE field.
	IOCON_PIO1_9_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_9_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_9_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_9_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_9_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_9_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_9_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_9_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_9_HYS = 0x20
	// Disable
	IOCON_PIO1_9_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_9_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_9_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_9_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO1_9_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_9_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_9_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_9_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_9_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_9_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_9_RESERVED_Msk = 0xfffff800

	// PIO3_4: I/O configuration for pin PIO3_4
	// Position of FUNC field.
	IOCON_PIO3_4_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_4_FUNC_Msk = 0x7
	// Selects function PIO3_4.
	IOCON_PIO3_4_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO3_4_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_4_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_4_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_4_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_4_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_4_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_4_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_4_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_4_HYS = 0x20
	// Disable
	IOCON_PIO3_4_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_4_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_4_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_4_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_4_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_4_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_4_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_4_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_4_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_4_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_4_RESERVED_Msk = 0xfffff800

	// PIO2_4: I/O configuration for pin PIO2_4
	// Position of FUNC field.
	IOCON_PIO2_4_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_4_FUNC_Msk = 0x7
	// Selects function PIO2_4.
	IOCON_PIO2_4_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_4_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_4_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_4_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_4_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_4_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_4_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_4_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_4_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_4_HYS = 0x20
	// Disable
	IOCON_PIO2_4_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_4_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_4_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_4_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_4_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_4_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_4_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_4_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_4_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_4_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_4_RESERVED_Msk = 0xfffff800

	// PIO2_5: I/O configuration for pin PIO2_5
	// Position of FUNC field.
	IOCON_PIO2_5_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_5_FUNC_Msk = 0x7
	// Selects function PIO2_5.
	IOCON_PIO2_5_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_5_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_5_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_5_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_5_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_5_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_5_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_5_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_5_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_5_HYS = 0x20
	// Disable
	IOCON_PIO2_5_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_5_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_5_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_5_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_5_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_5_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_5_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_5_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_5_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_5_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_5_RESERVED_Msk = 0xfffff800

	// PIO3_5: I/O configuration for pin PIO3_5
	// Position of FUNC field.
	IOCON_PIO3_5_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_5_FUNC_Msk = 0x7
	// Selects function PIO3_5.
	IOCON_PIO3_5_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO3_5_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_5_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_5_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_5_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_5_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_5_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_5_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_5_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_5_HYS = 0x20
	// Disable
	IOCON_PIO3_5_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_5_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_5_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_5_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_5_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_5_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_5_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_5_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_5_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_5_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_5_RESERVED_Msk = 0xfffff800

	// PIO0_6: I/O configuration for pin PIO0_6/USB_CONNECT/SCK
	// Position of FUNC field.
	IOCON_PIO0_6_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_6_FUNC_Msk = 0x7
	// Selects function PIO0_6.
	IOCON_PIO0_6_FUNC_PIO = 0x0
	// Selects function USB_CONNECT (function not available on all parts).
	IOCON_PIO0_6_FUNC_USB = 0x1
	// Selects function SCK0 (only if pin PIO0_6/ USB_CONNECT/ SCK0 selected in Table 139).
	IOCON_PIO0_6_FUNC_SCK = 0x2
	// Position of MODE field.
	IOCON_PIO0_6_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_6_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_6_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_6_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_6_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_6_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_6_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_6_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_6_HYS = 0x20
	// Disable
	IOCON_PIO0_6_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_6_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_6_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_6_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_6_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_6_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_6_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_6_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_6_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_6_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_6_RESERVED_Msk = 0xfffff800

	// PIO0_7: I/O configuration for pin PIO0_7/CTS
	// Position of FUNC field.
	IOCON_PIO0_7_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_7_FUNC_Msk = 0x7
	// Selects function PIO0_7.
	IOCON_PIO0_7_FUNC_PIO = 0x0
	// Select function CTS.
	IOCON_PIO0_7_FUNC_CTS_ = 0x1
	// Position of MODE field.
	IOCON_PIO0_7_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_7_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_7_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_7_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_7_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_7_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_7_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_7_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_7_HYS = 0x20
	// Disable
	IOCON_PIO0_7_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_7_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_7_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_7_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_7_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_7_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_7_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_7_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_7_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_7_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_7_RESERVED_Msk = 0xfffff800

	// PIO2_9: I/O configuration for pin PIO2_9
	// Position of FUNC field.
	IOCON_PIO2_9_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_9_FUNC_Msk = 0x7
	// Selects function PIO2_9.
	IOCON_PIO2_9_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_9_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_9_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_9_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_9_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_9_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_9_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_9_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_9_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_9_HYS = 0x20
	// Disable
	IOCON_PIO2_9_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_9_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_9_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_9_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_9_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_9_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_9_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_9_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_9_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_9_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_9_RESERVED_Msk = 0xfffff800

	// PIO2_10: I/O configuration for pin PIO2_10
	// Position of FUNC field.
	IOCON_PIO2_10_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_10_FUNC_Msk = 0x7
	// Selects function PIO2_10.
	IOCON_PIO2_10_FUNC_PIO = 0x0
	// Position of MODE field.
	IOCON_PIO2_10_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_10_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_10_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_10_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_10_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_10_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_10_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_10_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_10_HYS = 0x20
	// Disable
	IOCON_PIO2_10_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_10_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_10_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_10_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_10_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_10_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_10_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_10_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_10_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_10_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_10_RESERVED_Msk = 0xfffff800

	// PIO2_2: I/O configuration for pin PIO2_2/DCD/MISO1
	// Position of FUNC field.
	IOCON_PIO2_2_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_2_FUNC_Msk = 0x7
	// Selects function PIO2_2.
	IOCON_PIO2_2_FUNC_PIO = 0x0
	// Select function DCD.
	IOCON_PIO2_2_FUNC_DCD_ = 0x1
	// Select function MISO1 (function not available on all parts).
	IOCON_PIO2_2_FUNC_MISO = 0x2
	// Position of MODE field.
	IOCON_PIO2_2_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_2_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_2_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_2_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_2_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_2_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_2_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_2_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_2_HYS = 0x20
	// Disable
	IOCON_PIO2_2_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_2_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_2_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_2_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_2_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_2_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_2_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_2_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_2_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_2_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_2_RESERVED_Msk = 0xfffff800

	// PIO0_8: I/O configuration for pin PIO0_8/MISO0/CT16B0_MAT0
	// Position of FUNC field.
	IOCON_PIO0_8_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_8_FUNC_Msk = 0x7
	// Selects function PIO0_8.
	IOCON_PIO0_8_FUNC_PIO = 0x0
	// Selects function MISO0.
	IOCON_PIO0_8_FUNC_MIS = 0x1
	// Selects function CT16B0_MAT0.
	IOCON_PIO0_8_FUNC_CT1 = 0x2
	// Position of MODE field.
	IOCON_PIO0_8_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_8_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_8_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_8_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_8_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_8_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_8_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_8_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_8_HYS = 0x20
	// Disable
	IOCON_PIO0_8_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_8_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_8_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_8_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_8_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_8_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_8_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_8_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_8_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_8_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_8_RESERVED_Msk = 0xfffff800

	// PIO0_9: I/O configuration for pin PIO0_9/MOSI0/ CT16B0_MAT1/SWO
	// Position of FUNC field.
	IOCON_PIO0_9_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO0_9_FUNC_Msk = 0x7
	// Selects function PIO0_9.
	IOCON_PIO0_9_FUNC_PIO = 0x0
	// Selects function MOSI0.
	IOCON_PIO0_9_FUNC_MOS = 0x1
	// Selects function CT16B0_MAT1.
	IOCON_PIO0_9_FUNC_CT1 = 0x2
	// Selects function SWO
	IOCON_PIO0_9_FUNC_SWO = 0x3
	// Position of MODE field.
	IOCON_PIO0_9_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO0_9_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO0_9_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO0_9_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO0_9_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO0_9_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO0_9_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO0_9_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO0_9_HYS = 0x20
	// Disable
	IOCON_PIO0_9_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO0_9_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_9_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO0_9_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO0_9_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO0_9_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO0_9_OD = 0x400
	// Standard GPIO output
	IOCON_PIO0_9_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO0_9_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO0_9_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO0_9_RESERVED_Msk = 0xfffff800

	// SWCLK_PIO0_10: I/O configuration for pin SWCLK/PIO0_10/ SCK/CT16B0_MAT2
	// Position of FUNC field.
	IOCON_SWCLK_PIO0_10_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_SWCLK_PIO0_10_FUNC_Msk = 0x7
	// Selects function SWCLK.
	IOCON_SWCLK_PIO0_10_FUNC_SWC = 0x0
	// Selects function PIO0_10.
	IOCON_SWCLK_PIO0_10_FUNC_PIO = 0x1
	// Selects function SCK0 (only if pin SWCLK/PIO0_10/SCK0/CT16B0_MAT2 selected in Table 139).
	IOCON_SWCLK_PIO0_10_FUNC_SCK = 0x2
	// Selects function CT16B0_MAT2.
	IOCON_SWCLK_PIO0_10_FUNC_CT1 = 0x3
	// Position of MODE field.
	IOCON_SWCLK_PIO0_10_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_SWCLK_PIO0_10_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_SWCLK_PIO0_10_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_SWCLK_PIO0_10_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_SWCLK_PIO0_10_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_SWCLK_PIO0_10_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_SWCLK_PIO0_10_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_SWCLK_PIO0_10_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_SWCLK_PIO0_10_HYS = 0x20
	// Disable
	IOCON_SWCLK_PIO0_10_HYS_DISABLE = 0x0
	// Enable
	IOCON_SWCLK_PIO0_10_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_SWCLK_PIO0_10_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_SWCLK_PIO0_10_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_SWCLK_PIO0_10_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_SWCLK_PIO0_10_OD_Msk = 0x400
	// Bit OD.
	IOCON_SWCLK_PIO0_10_OD = 0x400
	// Standard GPIO output
	IOCON_SWCLK_PIO0_10_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_SWCLK_PIO0_10_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_SWCLK_PIO0_10_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_SWCLK_PIO0_10_RESERVED_Msk = 0xfffff800

	// PIO1_10: I/O configuration for pin PIO1_10/AD6/ CT16B1_MAT1
	// Position of FUNC field.
	IOCON_PIO1_10_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_10_FUNC_Msk = 0x7
	// Selects function PIO1_10.
	IOCON_PIO1_10_FUNC_PIO = 0x0
	// Selects function AD6.
	IOCON_PIO1_10_FUNC_AD6 = 0x1
	// Selects function CT16B1_MAT1.
	IOCON_PIO1_10_FUNC_CT1 = 0x2
	// Position of MODE field.
	IOCON_PIO1_10_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_10_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_10_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_10_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_10_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_10_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_10_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_10_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_10_HYS = 0x20
	// Disable
	IOCON_PIO1_10_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_10_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_10_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_10_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_PIO1_10_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_PIO1_10_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_PIO1_10_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_PIO1_10_ADMODE = 0x80
	// Analog input mode
	IOCON_PIO1_10_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_PIO1_10_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_10_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_PIO1_10_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_PIO1_10_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_10_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_10_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_10_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_10_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_10_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_10_RESERVED_Msk = 0xfffff800

	// PIO2_11: I/O configuration for pin PIO2_11/SCK
	// Position of FUNC field.
	IOCON_PIO2_11_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_11_FUNC_Msk = 0x7
	// Selects function PIO2_11.
	IOCON_PIO2_11_FUNC_PIO = 0x0
	// Selects function SCK0 (only if pin PIO2_11/SCK0 selected in Table 139)
	IOCON_PIO2_11_FUNC_SCK = 0x1
	// Position of MODE field.
	IOCON_PIO2_11_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_11_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_11_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_11_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_11_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_11_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_11_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_11_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_11_HYS = 0x20
	// Disable
	IOCON_PIO2_11_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_11_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_11_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_11_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_11_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_11_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_11_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_11_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_11_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_11_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_11_RESERVED_Msk = 0xfffff800

	// R_PIO0_11: I/O configuration for pin R/PIO0_11/AD0/CT32B0_MAT3
	// Position of FUNC field.
	IOCON_R_PIO0_11_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_R_PIO0_11_FUNC_Msk = 0x7
	// Selects function R. This function is reserved. Select one of the alternate functions below.
	IOCON_R_PIO0_11_FUNC_R_ = 0x0
	// Selects function PIO0_11.
	IOCON_R_PIO0_11_FUNC_PIO = 0x1
	// Selects function AD0.
	IOCON_R_PIO0_11_FUNC_AD0 = 0x2
	// Selects function CT32B0_MAT3.
	IOCON_R_PIO0_11_FUNC_CT3 = 0x3
	// Position of MODE field.
	IOCON_R_PIO0_11_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_R_PIO0_11_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_R_PIO0_11_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_R_PIO0_11_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_R_PIO0_11_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_R_PIO0_11_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_R_PIO0_11_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_R_PIO0_11_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_R_PIO0_11_HYS = 0x20
	// Disable
	IOCON_R_PIO0_11_HYS_DISABLE = 0x0
	// Enable
	IOCON_R_PIO0_11_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_R_PIO0_11_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_R_PIO0_11_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_R_PIO0_11_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_R_PIO0_11_ADMODE = 0x80
	// Analog input mode
	IOCON_R_PIO0_11_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_R_PIO0_11_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_R_PIO0_11_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_R_PIO0_11_OD_Msk = 0x400
	// Bit OD.
	IOCON_R_PIO0_11_OD = 0x400
	// Standard GPIO output
	IOCON_R_PIO0_11_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_R_PIO0_11_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_R_PIO0_11_RESERVED_Msk = 0xfffff800

	// R_PIO1_0: I/O configuration for pin R/PIO1_0/AD1/ CT32B1_CAP0
	// Position of FUNC field.
	IOCON_R_PIO1_0_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_R_PIO1_0_FUNC_Msk = 0x7
	// Selects function R. This function is reserved. Select one of the alternate functions below.
	IOCON_R_PIO1_0_FUNC_R_ = 0x0
	// Selects function PIO1_0.
	IOCON_R_PIO1_0_FUNC_PIO = 0x1
	// Selects function AD1.
	IOCON_R_PIO1_0_FUNC_AD1 = 0x2
	// Selects function CT32B1_CAP0.
	IOCON_R_PIO1_0_FUNC_CT3 = 0x3
	// Position of MODE field.
	IOCON_R_PIO1_0_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_R_PIO1_0_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_R_PIO1_0_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_R_PIO1_0_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_R_PIO1_0_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_R_PIO1_0_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_R_PIO1_0_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_R_PIO1_0_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_R_PIO1_0_HYS = 0x20
	// Disable
	IOCON_R_PIO1_0_HYS_DISABLE = 0x0
	// Enable
	IOCON_R_PIO1_0_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_R_PIO1_0_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_R_PIO1_0_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_R_PIO1_0_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_R_PIO1_0_ADMODE = 0x80
	// Analog input mode
	IOCON_R_PIO1_0_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_R_PIO1_0_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_R_PIO1_0_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_R_PIO1_0_OD_Msk = 0x400
	// Bit OD.
	IOCON_R_PIO1_0_OD = 0x400
	// Standard GPIO output
	IOCON_R_PIO1_0_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_R_PIO1_0_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_0_RESERVED_Msk = 0xfffff800

	// R_PIO1_1: I/O configuration for pin R/PIO1_1/AD2/CT32B1_MAT0
	// Position of FUNC field.
	IOCON_R_PIO1_1_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_R_PIO1_1_FUNC_Msk = 0x7
	// Selects function R. This function is reserved. Select one of the alternate functions below.
	IOCON_R_PIO1_1_FUNC_R_ = 0x0
	// Selects function PIO1_1.
	IOCON_R_PIO1_1_FUNC_PIO = 0x1
	// Selects function AD2.
	IOCON_R_PIO1_1_FUNC_AD2 = 0x2
	// Selects function CT32B1_MAT0.
	IOCON_R_PIO1_1_FUNC_CT3 = 0x3
	// Position of MODE field.
	IOCON_R_PIO1_1_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_R_PIO1_1_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_R_PIO1_1_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_R_PIO1_1_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_R_PIO1_1_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_R_PIO1_1_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_R_PIO1_1_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_R_PIO1_1_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_R_PIO1_1_HYS = 0x20
	// Disable
	IOCON_R_PIO1_1_HYS_DISABLE = 0x0
	// Enable
	IOCON_R_PIO1_1_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_R_PIO1_1_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_R_PIO1_1_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_R_PIO1_1_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_R_PIO1_1_ADMODE = 0x80
	// Analog input mode
	IOCON_R_PIO1_1_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_R_PIO1_1_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_R_PIO1_1_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_R_PIO1_1_OD_Msk = 0x400
	// Bit OD.
	IOCON_R_PIO1_1_OD = 0x400
	// Standard GPIO output
	IOCON_R_PIO1_1_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_R_PIO1_1_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_1_RESERVED_Msk = 0xfffff800

	// R_PIO1_2: I/O configuration for pin R/PIO1_2/AD3/ CT32B1_MAT1
	// Position of FUNC field.
	IOCON_R_PIO1_2_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_R_PIO1_2_FUNC_Msk = 0x7
	// Selects function R. This function is reserved. Select one of the alternate functions below.
	IOCON_R_PIO1_2_FUNC_R_ = 0x0
	// Selects function PIO1_2.
	IOCON_R_PIO1_2_FUNC_PIO = 0x1
	// Selects function AD3.
	IOCON_R_PIO1_2_FUNC_AD3 = 0x2
	// Selects function CT32B1_MAT1.
	IOCON_R_PIO1_2_FUNC_CT3 = 0x3
	// Position of MODE field.
	IOCON_R_PIO1_2_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_R_PIO1_2_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_R_PIO1_2_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_R_PIO1_2_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_R_PIO1_2_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_R_PIO1_2_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_R_PIO1_2_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_R_PIO1_2_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_R_PIO1_2_HYS = 0x20
	// Disable
	IOCON_R_PIO1_2_HYS_DISABLE = 0x0
	// Enable
	IOCON_R_PIO1_2_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_R_PIO1_2_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_R_PIO1_2_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_R_PIO1_2_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_R_PIO1_2_ADMODE = 0x80
	// Analog input mode
	IOCON_R_PIO1_2_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_R_PIO1_2_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_R_PIO1_2_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_R_PIO1_2_OD_Msk = 0x400
	// Bit OD.
	IOCON_R_PIO1_2_OD = 0x400
	// Standard GPIO output
	IOCON_R_PIO1_2_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_R_PIO1_2_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_R_PIO1_2_RESERVED_Msk = 0xfffff800

	// PIO3_0: I/O configuration for pin PIO3_0/DTR
	// Position of FUNC field.
	IOCON_PIO3_0_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_0_FUNC_Msk = 0x7
	// Selects function PIO3_0.
	IOCON_PIO3_0_FUNC_PIO = 0x0
	// Selects function DTR (function not available on all parts).
	IOCON_PIO3_0_FUNC_DTR = 0x1
	// Position of MODE field.
	IOCON_PIO3_0_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_0_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_0_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_0_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_0_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_0_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_0_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_0_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_0_HYS = 0x20
	// Disable
	IOCON_PIO3_0_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_0_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_0_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_0_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_0_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_0_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_0_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_0_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_0_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_0_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_0_RESERVED_Msk = 0xfffff800

	// PIO3_1: I/O configuration for pin PIO3_1/DSR
	// Position of FUNC field.
	IOCON_PIO3_1_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_1_FUNC_Msk = 0x7
	// Selects function PIO3_1.
	IOCON_PIO3_1_FUNC_PIO = 0x0
	// Selects function DSR (function not available on all parts, must also be configured in the corresponding DSR_LOC register).
	IOCON_PIO3_1_FUNC_DSR = 0x1
	// Position of MODE field.
	IOCON_PIO3_1_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_1_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_1_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_1_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_1_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_1_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_1_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_1_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_1_HYS = 0x20
	// Disable
	IOCON_PIO3_1_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_1_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_1_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_1_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_1_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_1_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_1_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_1_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_1_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_1_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_1_RESERVED_Msk = 0xfffff800

	// PIO2_3: I/O configuration for pin PIO2_3/RI/MOSI1
	// Position of FUNC field.
	IOCON_PIO2_3_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO2_3_FUNC_Msk = 0x7
	// Selects function PIO2_3.
	IOCON_PIO2_3_FUNC_PIO = 0x0
	// Selects function RI.
	IOCON_PIO2_3_FUNC_RI_ = 0x1
	// Selects function MOSI1 (function not available on all parts).
	IOCON_PIO2_3_FUNC_MOS = 0x2
	// Position of MODE field.
	IOCON_PIO2_3_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO2_3_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO2_3_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO2_3_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO2_3_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO2_3_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO2_3_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO2_3_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO2_3_HYS = 0x20
	// Disable
	IOCON_PIO2_3_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO2_3_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_3_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO2_3_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO2_3_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO2_3_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO2_3_OD = 0x400
	// Standard GPIO output
	IOCON_PIO2_3_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO2_3_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO2_3_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO2_3_RESERVED_Msk = 0xfffff800

	// SWDIO_PIO1_3: I/O configuration for pin SWDIO/PIO1_3/AD4/ CT32B1_MAT2
	// Position of FUNC field.
	IOCON_SWDIO_PIO1_3_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_SWDIO_PIO1_3_FUNC_Msk = 0x7
	// Selects function SWDIO.
	IOCON_SWDIO_PIO1_3_FUNC_SWD = 0x0
	// Selects function PIO1_3.
	IOCON_SWDIO_PIO1_3_FUNC_PIO = 0x1
	// Selects function AD4.
	IOCON_SWDIO_PIO1_3_FUNC_AD4 = 0x2
	// Selects function CT32B1_MAT2.
	IOCON_SWDIO_PIO1_3_FUNC_CT3 = 0x3
	// Position of MODE field.
	IOCON_SWDIO_PIO1_3_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_SWDIO_PIO1_3_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_SWDIO_PIO1_3_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_SWDIO_PIO1_3_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_SWDIO_PIO1_3_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_SWDIO_PIO1_3_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_SWDIO_PIO1_3_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_SWDIO_PIO1_3_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_SWDIO_PIO1_3_HYS = 0x20
	// Disable
	IOCON_SWDIO_PIO1_3_HYS_DISABLE = 0x0
	// Enable
	IOCON_SWDIO_PIO1_3_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_SWDIO_PIO1_3_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_SWDIO_PIO1_3_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_SWDIO_PIO1_3_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_SWDIO_PIO1_3_ADMODE = 0x80
	// Analog input mode
	IOCON_SWDIO_PIO1_3_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_SWDIO_PIO1_3_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_SWDIO_PIO1_3_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_SWDIO_PIO1_3_OD_Msk = 0x400
	// Bit OD.
	IOCON_SWDIO_PIO1_3_OD = 0x400
	// Standard GPIO output
	IOCON_SWDIO_PIO1_3_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_SWDIO_PIO1_3_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_SWDIO_PIO1_3_RESERVED_Msk = 0xfffff800

	// PIO1_4: I/O configuration for pin PIO1_4/AD5/CT32B1_MAT3
	// Position of FUNC field.
	IOCON_PIO1_4_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_4_FUNC_Msk = 0x7
	// Selects function PIO1_4.
	IOCON_PIO1_4_FUNC_PIO = 0x0
	// Selects function AD5.
	IOCON_PIO1_4_FUNC_AD5 = 0x1
	// Selects function CT32B1_MAT3.
	IOCON_PIO1_4_FUNC_CT3 = 0x2
	// Position of MODE field.
	IOCON_PIO1_4_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_4_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_4_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_4_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_4_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_4_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_4_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_4_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_4_HYS = 0x20
	// Disable
	IOCON_PIO1_4_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_4_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_4_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_4_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_PIO1_4_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_PIO1_4_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_PIO1_4_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_PIO1_4_ADMODE = 0x80
	// Analog input mode
	IOCON_PIO1_4_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_PIO1_4_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_4_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_PIO1_4_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_PIO1_4_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_4_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_4_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_4_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_4_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_4_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_4_RESERVED_Msk = 0xfffff800

	// PIO1_11: I/O configuration for pin PIO1_11/AD7
	// Position of FUNC field.
	IOCON_PIO1_11_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_11_FUNC_Msk = 0x7
	// Selects function PIO1_11.
	IOCON_PIO1_11_FUNC_PIO = 0x0
	// Selects function AD7.
	IOCON_PIO1_11_FUNC_AD7 = 0x1
	// Position of MODE field.
	IOCON_PIO1_11_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_11_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_11_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_11_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_11_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_11_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_11_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_11_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_11_HYS = 0x20
	// Disable
	IOCON_PIO1_11_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_11_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_11_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_11_RESERVED_Msk = 0x40
	// Bit RESERVED.
	IOCON_PIO1_11_RESERVED = 0x40
	// Position of ADMODE field.
	IOCON_PIO1_11_ADMODE_Pos = 0x7
	// Bit mask of ADMODE field.
	IOCON_PIO1_11_ADMODE_Msk = 0x80
	// Bit ADMODE.
	IOCON_PIO1_11_ADMODE = 0x80
	// Analog input mode
	IOCON_PIO1_11_ADMODE_ANALOG_INPUT_MODE = 0x0
	// Digital functional mode
	IOCON_PIO1_11_ADMODE_DIGITAL_FUNCTIONAL_M = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_11_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	IOCON_PIO1_11_RESERVED_Msk = 0x300
	// Position of OD field.
	IOCON_PIO1_11_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_11_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_11_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_11_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_11_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_11_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_11_RESERVED_Msk = 0xfffff800

	// PIO3_2: I/O configuration for pin PIO3_2/DCD
	// Position of FUNC field.
	IOCON_PIO3_2_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_2_FUNC_Msk = 0x7
	// Selects function PIO3_2.
	IOCON_PIO3_2_FUNC_PIO = 0x0
	// Selects function DCD (function not available on all parts, must also be configured in the corresponding DCD_LOC register).
	IOCON_PIO3_2_FUNC_DCD = 0x1
	// Position of MODE field.
	IOCON_PIO3_2_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_2_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_2_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_2_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_2_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_2_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_2_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_2_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_2_HYS = 0x20
	// Disable
	IOCON_PIO3_2_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_2_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_2_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_2_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_2_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_2_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_2_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_2_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_2_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_2_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_2_RESERVED_Msk = 0xfffff800

	// PIO1_5: I/O configuration for pin PIO1_5/RTS/CT32B0_CAP0
	// Position of FUNC field.
	IOCON_PIO1_5_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_5_FUNC_Msk = 0x7
	// Selects function PIO1_5.
	IOCON_PIO1_5_FUNC_PIO = 0x0
	// Selects function RTS.
	IOCON_PIO1_5_FUNC_RTS = 0x1
	// Selects function CT32B0_CAP0.
	IOCON_PIO1_5_FUNC_CT3 = 0x2
	// Position of MODE field.
	IOCON_PIO1_5_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_5_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_5_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_5_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_5_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_5_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_5_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_5_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_5_HYS = 0x20
	// Disable
	IOCON_PIO1_5_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_5_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_5_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_5_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO1_5_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_5_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_5_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_5_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_5_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_5_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_5_RESERVED_Msk = 0xfffff800

	// PIO1_6: I/O configuration for pin PIO1_6/RXD/CT32B0_MAT0
	// Position of FUNC field.
	IOCON_PIO1_6_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_6_FUNC_Msk = 0x7
	// Selects function PIO1_6.
	IOCON_PIO1_6_FUNC_PIO = 0x0
	// Selects function RXD.
	IOCON_PIO1_6_FUNC_RXD = 0x1
	// Selects function CT32B0_MAT0.
	IOCON_PIO1_6_FUNC_CT3 = 0x2
	// Position of MODE field.
	IOCON_PIO1_6_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_6_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_6_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_6_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_6_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_6_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_6_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_6_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_6_HYS = 0x20
	// Disable
	IOCON_PIO1_6_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_6_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_6_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_6_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO1_6_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_6_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_6_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_6_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_6_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_6_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_6_RESERVED_Msk = 0xfffff800

	// PIO1_7: I/O configuration for pin PIO1_7/TXD/CT32B0_MAT1
	// Position of FUNC field.
	IOCON_PIO1_7_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO1_7_FUNC_Msk = 0x7
	// Selects function PIO1_7.
	IOCON_PIO1_7_FUNC_PIO = 0x0
	// Selects function TXD.
	IOCON_PIO1_7_FUNC_TXD = 0x1
	// Selects function CT32B0_MAT1.
	IOCON_PIO1_7_FUNC_CT3 = 0x2
	// Position of MODE field.
	IOCON_PIO1_7_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO1_7_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO1_7_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO1_7_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO1_7_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO1_7_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO1_7_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO1_7_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO1_7_HYS = 0x20
	// Disable
	IOCON_PIO1_7_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO1_7_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_7_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO1_7_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO1_7_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO1_7_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO1_7_OD = 0x400
	// Standard GPIO output
	IOCON_PIO1_7_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO1_7_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO1_7_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO1_7_RESERVED_Msk = 0xfffff800

	// PIO3_3: I/O configuration for pin PIO3_3/RI
	// Position of FUNC field.
	IOCON_PIO3_3_FUNC_Pos = 0x0
	// Bit mask of FUNC field.
	IOCON_PIO3_3_FUNC_Msk = 0x7
	// Selects function PIO3_3.
	IOCON_PIO3_3_FUNC_PIO = 0x0
	// Selects function RI (function not available on all parts, must also be configured in the corresponding RI_LOC register).
	IOCON_PIO3_3_FUNC_RI_ = 0x1
	// Position of MODE field.
	IOCON_PIO3_3_MODE_Pos = 0x3
	// Bit mask of MODE field.
	IOCON_PIO3_3_MODE_Msk = 0x18
	// Inactive (no pull-down/pull-up resistor enabled)
	IOCON_PIO3_3_MODE_INACTIVE_NO_PULL_DO = 0x0
	// Pull-down resistor enabled
	IOCON_PIO3_3_MODE_PULL_DOWN_RESISTOR_E = 0x1
	// Pull-up resistor enabled
	IOCON_PIO3_3_MODE_PULL_UP_RESISTOR_ENA = 0x2
	// Repeater mode
	IOCON_PIO3_3_MODE_REPEATER_MODE = 0x3
	// Position of HYS field.
	IOCON_PIO3_3_HYS_Pos = 0x5
	// Bit mask of HYS field.
	IOCON_PIO3_3_HYS_Msk = 0x20
	// Bit HYS.
	IOCON_PIO3_3_HYS = 0x20
	// Disable
	IOCON_PIO3_3_HYS_DISABLE = 0x0
	// Enable
	IOCON_PIO3_3_HYS_ENABLE = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_3_RESERVED_Pos = 0x6
	// Bit mask of RESERVED field.
	IOCON_PIO3_3_RESERVED_Msk = 0x3c0
	// Position of OD field.
	IOCON_PIO3_3_OD_Pos = 0xa
	// Bit mask of OD field.
	IOCON_PIO3_3_OD_Msk = 0x400
	// Bit OD.
	IOCON_PIO3_3_OD = 0x400
	// Standard GPIO output
	IOCON_PIO3_3_OD_STANDARD_GPIO_OUTPUT = 0x0
	// Open-drain output
	IOCON_PIO3_3_OD_OPEN_DRAIN_OUTPUT = 0x1
	// Position of RESERVED field.
	IOCON_PIO3_3_RESERVED_Pos = 0xb
	// Bit mask of RESERVED field.
	IOCON_PIO3_3_RESERVED_Msk = 0xfffff800

	// SCK0_LOC: SCK0 pin location register
	// Position of SCKLOC field.
	IOCON_SCK0_LOC_SCKLOC_Pos = 0x0
	// Bit mask of SCKLOC field.
	IOCON_SCK0_LOC_SCKLOC_Msk = 0x3
	// Reserved.
	IOCON_SCK0_LOC_SCKLOC_RESERVED_ = 0x3
	// Position of RESERVED field.
	IOCON_SCK0_LOC_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	IOCON_SCK0_LOC_RESERVED_Msk = 0xfffffffc

	// DSR_LOC: DSR pin location select register
	// Position of DSRLOC field.
	IOCON_DSR_LOC_DSRLOC_Pos = 0x0
	// Bit mask of DSRLOC field.
	IOCON_DSR_LOC_DSRLOC_Msk = 0x3
	// Position of RESERVED field.
	IOCON_DSR_LOC_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	IOCON_DSR_LOC_RESERVED_Msk = 0xfffffffc

	// DCD_LOC: DCD pin location select register
	// Position of DCDLOC field.
	IOCON_DCD_LOC_DCDLOC_Pos = 0x0
	// Bit mask of DCDLOC field.
	IOCON_DCD_LOC_DCDLOC_Msk = 0x3
	// Selects DCD function in pin location PIO2_2/DCD/MISO1.
	IOCON_DCD_LOC_DCDLOC_SELECTS_DCD_FUNCTION = 0x0
	// Selects DCD function in pin location PIO3_2/DCD.
	IOCON_DCD_LOC_DCDLOC_SELECTS_DCD_FUNCTIO = 0x1
	// Position of RESERVED field.
	IOCON_DCD_LOC_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	IOCON_DCD_LOC_RESERVED_Msk = 0xfffffffc

	// RI_LOC: RI pin location register
	// Position of RILOC field.
	IOCON_RI_LOC_RILOC_Pos = 0x0
	// Bit mask of RILOC field.
	IOCON_RI_LOC_RILOC_Msk = 0x3
	// Position of RESERVED field.
	IOCON_RI_LOC_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	IOCON_RI_LOC_RESERVED_Msk = 0xfffffffc
)

// Bitfields for SYSCON: Product name title=UM10375 Chapter title=LPC13xx System configuration Modification date=4/4/2011 Major revision=2 Minor revision=2
const (
	// SYSMEMREMAP: System memory remap
	// Position of MAP field.
	SYSCON_SYSMEMREMAP_MAP_Pos = 0x0
	// Bit mask of MAP field.
	SYSCON_SYSMEMREMAP_MAP_Msk = 0x3
	// Boot Loader Mode. Interrupt vectors are re-mapped to Boot ROM.
	SYSCON_SYSMEMREMAP_MAP_BOOT_LOADER_MODE_IN = 0x0
	// User RAM Mode. Interrupt vectors are re-mapped to Static RAM.
	SYSCON_SYSMEMREMAP_MAP_USER_RAM_MODE_INTER = 0x1
	// User Flash Mode. Interrupt vectors are not re-mapped and reside in Flash.
	SYSCON_SYSMEMREMAP_MAP_USER_FLASH_MODE_INT = 0x2
	// Position of RESERVED field.
	SYSCON_SYSMEMREMAP_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_SYSMEMREMAP_RESERVED_Msk = 0xfffffffc

	// PRESETCTRL: Peripheral reset control
	// Position of SSP0_RST_N field.
	SYSCON_PRESETCTRL_SSP0_RST_N_Pos = 0x0
	// Bit mask of SSP0_RST_N field.
	SYSCON_PRESETCTRL_SSP0_RST_N_Msk = 0x1
	// Bit SSP0_RST_N.
	SYSCON_PRESETCTRL_SSP0_RST_N = 0x1
	// Reset SSP0.
	SYSCON_PRESETCTRL_SSP0_RST_N_RESET_SSP0_ = 0x0
	// De-assert SSP0 reset.
	SYSCON_PRESETCTRL_SSP0_RST_N_DE_ASSERT_SSP0_RESET = 0x1
	// Position of I2C_RST_N field.
	SYSCON_PRESETCTRL_I2C_RST_N_Pos = 0x1
	// Bit mask of I2C_RST_N field.
	SYSCON_PRESETCTRL_I2C_RST_N_Msk = 0x2
	// Bit I2C_RST_N.
	SYSCON_PRESETCTRL_I2C_RST_N = 0x2
	// Reset I2C.
	SYSCON_PRESETCTRL_I2C_RST_N_RESET_I2C_ = 0x0
	// De-asset I2C reset.
	SYSCON_PRESETCTRL_I2C_RST_N_DE_ASSET_I2C_RESET_ = 0x1
	// Position of SSP1_RST_N field.
	SYSCON_PRESETCTRL_SSP1_RST_N_Pos = 0x2
	// Bit mask of SSP1_RST_N field.
	SYSCON_PRESETCTRL_SSP1_RST_N_Msk = 0x4
	// Bit SSP1_RST_N.
	SYSCON_PRESETCTRL_SSP1_RST_N = 0x4
	// Reset the SPISP1.
	SYSCON_PRESETCTRL_SSP1_RST_N_RESET_THE_SPISP1_ = 0x0
	// De-assert SPISP1 reset.
	SYSCON_PRESETCTRL_SSP1_RST_N_DE_ASSERT_SPISP1_RES = 0x1
	// Position of RESERVED field.
	SYSCON_PRESETCTRL_RESERVED_Pos = 0x17
	// Bit mask of RESERVED field.
	SYSCON_PRESETCTRL_RESERVED_Msk = 0xff800000

	// SYSPLLCTRL: System PLL control
	// Position of MSEL field.
	SYSCON_SYSPLLCTRL_MSEL_Pos = 0x0
	// Bit mask of MSEL field.
	SYSCON_SYSPLLCTRL_MSEL_Msk = 0x1f
	// Position of PSEL field.
	SYSCON_SYSPLLCTRL_PSEL_Pos = 0x5
	// Bit mask of PSEL field.
	SYSCON_SYSPLLCTRL_PSEL_Msk = 0x60
	// P = 1
	SYSCON_SYSPLLCTRL_PSEL_P_EQ_1 = 0x0
	// P = 2
	SYSCON_SYSPLLCTRL_PSEL_P_EQ_2 = 0x1
	// P = 4
	SYSCON_SYSPLLCTRL_PSEL_P_EQ_4 = 0x2
	// P = 8
	SYSCON_SYSPLLCTRL_PSEL_P_EQ_8 = 0x3
	// Position of RESERVED field.
	SYSCON_SYSPLLCTRL_RESERVED_Pos = 0x7
	// Bit mask of RESERVED field.
	SYSCON_SYSPLLCTRL_RESERVED_Msk = 0xffffff80

	// SYSPLLSTAT: System PLL status
	// Position of LOCK field.
	SYSCON_SYSPLLSTAT_LOCK_Pos = 0x0
	// Bit mask of LOCK field.
	SYSCON_SYSPLLSTAT_LOCK_Msk = 0x1
	// Bit LOCK.
	SYSCON_SYSPLLSTAT_LOCK = 0x1
	// PLL not locked
	SYSCON_SYSPLLSTAT_LOCK_PLL_NOT_LOCKED = 0x0
	// PLL locked
	SYSCON_SYSPLLSTAT_LOCK_PLL_LOCKED = 0x1
	// Position of RESERVED field.
	SYSCON_SYSPLLSTAT_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_SYSPLLSTAT_RESERVED_Msk = 0xfffffffe

	// USBPLLCTRL: USB PLL control
	// Position of MSEL field.
	SYSCON_USBPLLCTRL_MSEL_Pos = 0x0
	// Bit mask of MSEL field.
	SYSCON_USBPLLCTRL_MSEL_Msk = 0x1f
	// Position of PSEL field.
	SYSCON_USBPLLCTRL_PSEL_Pos = 0x5
	// Bit mask of PSEL field.
	SYSCON_USBPLLCTRL_PSEL_Msk = 0x60
	// P = 1
	SYSCON_USBPLLCTRL_PSEL_P_EQ_1 = 0x0
	// P = 2
	SYSCON_USBPLLCTRL_PSEL_P_EQ_2 = 0x1
	// P = 4
	SYSCON_USBPLLCTRL_PSEL_P_EQ_4 = 0x2
	// P = 8
	SYSCON_USBPLLCTRL_PSEL_P_EQ_8 = 0x3
	// Position of RESERVED field.
	SYSCON_USBPLLCTRL_RESERVED_Pos = 0x7
	// Bit mask of RESERVED field.
	SYSCON_USBPLLCTRL_RESERVED_Msk = 0xffffff80

	// USBPLLSTAT: USB PLL status
	// Position of LOCK field.
	SYSCON_USBPLLSTAT_LOCK_Pos = 0x0
	// Bit mask of LOCK field.
	SYSCON_USBPLLSTAT_LOCK_Msk = 0x1
	// Bit LOCK.
	SYSCON_USBPLLSTAT_LOCK = 0x1
	// PLL not locked
	SYSCON_USBPLLSTAT_LOCK_PLL_NOT_LOCKED = 0x0
	// PLL locked
	SYSCON_USBPLLSTAT_LOCK_PLL_LOCKED = 0x1
	// Position of RESERVED field.
	SYSCON_USBPLLSTAT_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_USBPLLSTAT_RESERVED_Msk = 0xfffffffe

	// SYSOSCCTRL: System oscillator control
	// Position of BYPASS field.
	SYSCON_SYSOSCCTRL_BYPASS_Pos = 0x0
	// Bit mask of BYPASS field.
	SYSCON_SYSOSCCTRL_BYPASS_Msk = 0x1
	// Bit BYPASS.
	SYSCON_SYSOSCCTRL_BYPASS = 0x1
	// Oscillator is not bypassed.
	SYSCON_SYSOSCCTRL_BYPASS_OSCILLATOR_IS_NOT_BY = 0x0
	// Bypass enabled. PLL input (sys_osc_clk) is fed directly from the XTALIN and XTALOUT pins.
	SYSCON_SYSOSCCTRL_BYPASS_BYPASS_ENABLED_PLL_ = 0x1
	// Position of FREQRANGE field.
	SYSCON_SYSOSCCTRL_FREQRANGE_Pos = 0x1
	// Bit mask of FREQRANGE field.
	SYSCON_SYSOSCCTRL_FREQRANGE_Msk = 0x2
	// Bit FREQRANGE.
	SYSCON_SYSOSCCTRL_FREQRANGE = 0x2
	// 1 - 20 MHz frequency range.
	SYSCON_SYSOSCCTRL_FREQRANGE_1__20_MHZ_FREQUENCY = 0x0
	// 15 - 25 MHz frequency range
	SYSCON_SYSOSCCTRL_FREQRANGE_15__25_MHZ_FREQUENC = 0x1
	// Position of RESERVED field.
	SYSCON_SYSOSCCTRL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_SYSOSCCTRL_RESERVED_Msk = 0xfffffffc

	// WDTOSCCTRL: Watchdog oscillator control
	// Position of DIVSEL field.
	SYSCON_WDTOSCCTRL_DIVSEL_Pos = 0x0
	// Bit mask of DIVSEL field.
	SYSCON_WDTOSCCTRL_DIVSEL_Msk = 0x1f
	// Position of FREQSEL field.
	SYSCON_WDTOSCCTRL_FREQSEL_Pos = 0x5
	// Bit mask of FREQSEL field.
	SYSCON_WDTOSCCTRL_FREQSEL_Msk = 0x1e0
	// 0.5 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_0_5_MHZ = 0x1
	// 0.8 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_0_8_MHZ = 0x2
	// 1.1 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_1_1_MHZ = 0x3
	// 1.4 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_1_4_MHZ = 0x4
	// 1.6 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_1_6_MHZ = 0x5
	// 1.8 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_1_8_MHZ = 0x6
	// 2.0 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_0_MHZ = 0x7
	// 2.2 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_2_MHZ = 0x8
	// 2.4 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_4_MHZ = 0x9
	// 2.6 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_6_MHZ = 0xa
	// 2.7 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_7_MHZ = 0xb
	// 2.9 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_2_9_MHZ = 0xc
	// 3.1 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_3_1_MHZ = 0xd
	// 3.2 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_3_2_MHZ = 0xe
	// 3.4 MHz
	SYSCON_WDTOSCCTRL_FREQSEL_3_4_MHZ = 0xf
	// Position of RESERVED field.
	SYSCON_WDTOSCCTRL_RESERVED_Pos = 0x9
	// Bit mask of RESERVED field.
	SYSCON_WDTOSCCTRL_RESERVED_Msk = 0xfffffe00

	// IRCCTRL: IRC control
	// Position of TRIM field.
	SYSCON_IRCCTRL_TRIM_Pos = 0x0
	// Bit mask of TRIM field.
	SYSCON_IRCCTRL_TRIM_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_IRCCTRL_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_IRCCTRL_RESERVED_Msk = 0xffffff00

	// SYSRESSTAT: System reset status register
	// Position of POR field.
	SYSCON_SYSRESSTAT_POR_Pos = 0x0
	// Bit mask of POR field.
	SYSCON_SYSRESSTAT_POR_Msk = 0x1
	// Bit POR.
	SYSCON_SYSRESSTAT_POR = 0x1
	// No POR detected
	SYSCON_SYSRESSTAT_POR_NO_POR_DETECTED = 0x0
	// POR detected
	SYSCON_SYSRESSTAT_POR_POR_DETECTED = 0x1
	// Position of EXTRST field.
	SYSCON_SYSRESSTAT_EXTRST_Pos = 0x1
	// Bit mask of EXTRST field.
	SYSCON_SYSRESSTAT_EXTRST_Msk = 0x2
	// Bit EXTRST.
	SYSCON_SYSRESSTAT_EXTRST = 0x2
	// No RESET event detected
	SYSCON_SYSRESSTAT_EXTRST_NO_RESET_EVENT_DETEC = 0x0
	// RESET detected
	SYSCON_SYSRESSTAT_EXTRST_RESET_DETECTED = 0x1
	// Position of WDT field.
	SYSCON_SYSRESSTAT_WDT_Pos = 0x2
	// Bit mask of WDT field.
	SYSCON_SYSRESSTAT_WDT_Msk = 0x4
	// Bit WDT.
	SYSCON_SYSRESSTAT_WDT = 0x4
	// No WDT reset detected
	SYSCON_SYSRESSTAT_WDT_NO_WDT_RESET_DETECTE = 0x0
	// WDT reset detected
	SYSCON_SYSRESSTAT_WDT_WDT_RESET_DETECTED = 0x1
	// Position of BOD field.
	SYSCON_SYSRESSTAT_BOD_Pos = 0x3
	// Bit mask of BOD field.
	SYSCON_SYSRESSTAT_BOD_Msk = 0x8
	// Bit BOD.
	SYSCON_SYSRESSTAT_BOD = 0x8
	// No BOD reset detected
	SYSCON_SYSRESSTAT_BOD_NO_BOD_RESET_DETECTE = 0x0
	// BOD reset detected
	SYSCON_SYSRESSTAT_BOD_BOD_RESET_DETECTED = 0x1
	// Position of SYSRST field.
	SYSCON_SYSRESSTAT_SYSRST_Pos = 0x4
	// Bit mask of SYSRST field.
	SYSCON_SYSRESSTAT_SYSRST_Msk = 0x10
	// Bit SYSRST.
	SYSCON_SYSRESSTAT_SYSRST = 0x10
	// No System reset detected
	SYSCON_SYSRESSTAT_SYSRST_NO_SYSTEM_RESET_DETE = 0x0
	// System reset detected
	SYSCON_SYSRESSTAT_SYSRST_SYSTEM_RESET_DETECTE = 0x1
	// Position of RESERVED field.
	SYSCON_SYSRESSTAT_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	SYSCON_SYSRESSTAT_RESERVED_Msk = 0xffffffe0

	// SYSPLLCLKSEL: System PLL clock source select
	// Position of SEL field.
	SYSCON_SYSPLLCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_SYSPLLCLKSEL_SEL_Msk = 0x3
	// IRC oscillator
	SYSCON_SYSPLLCLKSEL_SEL_IRC_OSCILLATOR = 0x0
	// System oscillator
	SYSCON_SYSPLLCLKSEL_SEL_SYSTEM_OSCILLATOR = 0x1
	// Position of RESERVED field.
	SYSCON_SYSPLLCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_SYSPLLCLKSEL_RESERVED_Msk = 0xfffffffc

	// SYSPLLCLKUEN: System PLL clock source update enable
	// Position of ENA field.
	SYSCON_SYSPLLCLKUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_SYSPLLCLKUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_SYSPLLCLKUEN_ENA = 0x1
	// No change
	SYSCON_SYSPLLCLKUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_SYSPLLCLKUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_SYSPLLCLKUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_SYSPLLCLKUEN_RESERVED_Msk = 0xfffffffe

	// USBPLLCLKSEL: USB PLL clock source select
	// Position of SEL field.
	SYSCON_USBPLLCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_USBPLLCLKSEL_SEL_Msk = 0x3
	// IRC. The USB PLL clock source must be switched to system oscillator for correct USB operation.
	SYSCON_USBPLLCLKSEL_SEL_IRC_THE_USB_PLL_CLO = 0x0
	// System oscillator
	SYSCON_USBPLLCLKSEL_SEL_SYSTEM_OSCILLATOR = 0x1
	// Position of RESERVED field.
	SYSCON_USBPLLCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_USBPLLCLKSEL_RESERVED_Msk = 0xfffffffc

	// USBPLLCLKUEN: USB PLL clock source update enable
	// Position of ENA field.
	SYSCON_USBPLLCLKUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_USBPLLCLKUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_USBPLLCLKUEN_ENA = 0x1
	// No change
	SYSCON_USBPLLCLKUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_USBPLLCLKUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_USBPLLCLKUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_USBPLLCLKUEN_RESERVED_Msk = 0xfffffffe

	// MAINCLKSEL: Main clock source select
	// Position of SEL field.
	SYSCON_MAINCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_MAINCLKSEL_SEL_Msk = 0x3
	// IRC oscillator
	SYSCON_MAINCLKSEL_SEL_IRC_OSCILLATOR = 0x0
	// Input clock to system PLL
	SYSCON_MAINCLKSEL_SEL_INPUT_CLOCK_TO_SYSTE = 0x1
	// WDT oscillator
	SYSCON_MAINCLKSEL_SEL_WDT_OSCILLATOR = 0x2
	// System PLL clock out
	SYSCON_MAINCLKSEL_SEL_SYSTEM_PLL_CLOCK_OUT = 0x3
	// Position of RESERVED field.
	SYSCON_MAINCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_MAINCLKSEL_RESERVED_Msk = 0xfffffffc

	// MAINCLKUEN: Main clock source update enable
	// Position of ENA field.
	SYSCON_MAINCLKUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_MAINCLKUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_MAINCLKUEN_ENA = 0x1
	// No change
	SYSCON_MAINCLKUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_MAINCLKUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_MAINCLKUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_MAINCLKUEN_RESERVED_Msk = 0xfffffffe

	// SYSAHBCLKDIV: System AHB clock divider
	// Position of DIV field.
	SYSCON_SYSAHBCLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_SYSAHBCLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_SYSAHBCLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_SYSAHBCLKDIV_RESERVED_Msk = 0xffffff00

	// SYSAHBCLKCTRL: System AHB clock control
	// Position of SYS field.
	SYSCON_SYSAHBCLKCTRL_SYS_Pos = 0x0
	// Bit mask of SYS field.
	SYSCON_SYSAHBCLKCTRL_SYS_Msk = 0x1
	// Bit SYS.
	SYSCON_SYSAHBCLKCTRL_SYS = 0x1
	// Enabled
	SYSCON_SYSAHBCLKCTRL_SYS_ENABLED = 0x1
	// Position of ROM field.
	SYSCON_SYSAHBCLKCTRL_ROM_Pos = 0x1
	// Bit mask of ROM field.
	SYSCON_SYSAHBCLKCTRL_ROM_Msk = 0x2
	// Bit ROM.
	SYSCON_SYSAHBCLKCTRL_ROM = 0x2
	// Disabled
	SYSCON_SYSAHBCLKCTRL_ROM_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_ROM_ENABLED = 0x1
	// Position of RAM field.
	SYSCON_SYSAHBCLKCTRL_RAM_Pos = 0x2
	// Bit mask of RAM field.
	SYSCON_SYSAHBCLKCTRL_RAM_Msk = 0x4
	// Bit RAM.
	SYSCON_SYSAHBCLKCTRL_RAM = 0x4
	// Disabled
	SYSCON_SYSAHBCLKCTRL_RAM_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_RAM_ENABLED = 0x1
	// Position of FLASHREG field.
	SYSCON_SYSAHBCLKCTRL_FLASHREG_Pos = 0x3
	// Bit mask of FLASHREG field.
	SYSCON_SYSAHBCLKCTRL_FLASHREG_Msk = 0x8
	// Bit FLASHREG.
	SYSCON_SYSAHBCLKCTRL_FLASHREG = 0x8
	// Disabled
	SYSCON_SYSAHBCLKCTRL_FLASHREG_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_FLASHREG_ENABLED = 0x1
	// Position of FLASHARRAY field.
	SYSCON_SYSAHBCLKCTRL_FLASHARRAY_Pos = 0x4
	// Bit mask of FLASHARRAY field.
	SYSCON_SYSAHBCLKCTRL_FLASHARRAY_Msk = 0x10
	// Bit FLASHARRAY.
	SYSCON_SYSAHBCLKCTRL_FLASHARRAY = 0x10
	// Disabled
	SYSCON_SYSAHBCLKCTRL_FLASHARRAY_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_FLASHARRAY_ENABLED = 0x1
	// Position of I2C field.
	SYSCON_SYSAHBCLKCTRL_I2C_Pos = 0x5
	// Bit mask of I2C field.
	SYSCON_SYSAHBCLKCTRL_I2C_Msk = 0x20
	// Bit I2C.
	SYSCON_SYSAHBCLKCTRL_I2C = 0x20
	// Disabled
	SYSCON_SYSAHBCLKCTRL_I2C_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_I2C_ENABLED = 0x1
	// Position of GPIO field.
	SYSCON_SYSAHBCLKCTRL_GPIO_Pos = 0x6
	// Bit mask of GPIO field.
	SYSCON_SYSAHBCLKCTRL_GPIO_Msk = 0x40
	// Bit GPIO.
	SYSCON_SYSAHBCLKCTRL_GPIO = 0x40
	// Disabled
	SYSCON_SYSAHBCLKCTRL_GPIO_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_GPIO_ENABLED = 0x1
	// Position of CT16B0 field.
	SYSCON_SYSAHBCLKCTRL_CT16B0_Pos = 0x7
	// Bit mask of CT16B0 field.
	SYSCON_SYSAHBCLKCTRL_CT16B0_Msk = 0x80
	// Bit CT16B0.
	SYSCON_SYSAHBCLKCTRL_CT16B0 = 0x80
	// Disabled
	SYSCON_SYSAHBCLKCTRL_CT16B0_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_CT16B0_ENABLED = 0x1
	// Position of CT16B1 field.
	SYSCON_SYSAHBCLKCTRL_CT16B1_Pos = 0x8
	// Bit mask of CT16B1 field.
	SYSCON_SYSAHBCLKCTRL_CT16B1_Msk = 0x100
	// Bit CT16B1.
	SYSCON_SYSAHBCLKCTRL_CT16B1 = 0x100
	// Disabled
	SYSCON_SYSAHBCLKCTRL_CT16B1_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_CT16B1_ENABLED = 0x1
	// Position of CT32B0 field.
	SYSCON_SYSAHBCLKCTRL_CT32B0_Pos = 0x9
	// Bit mask of CT32B0 field.
	SYSCON_SYSAHBCLKCTRL_CT32B0_Msk = 0x200
	// Bit CT32B0.
	SYSCON_SYSAHBCLKCTRL_CT32B0 = 0x200
	// Disabled
	SYSCON_SYSAHBCLKCTRL_CT32B0_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_CT32B0_ENABLED = 0x1
	// Position of CT32B1 field.
	SYSCON_SYSAHBCLKCTRL_CT32B1_Pos = 0xa
	// Bit mask of CT32B1 field.
	SYSCON_SYSAHBCLKCTRL_CT32B1_Msk = 0x400
	// Bit CT32B1.
	SYSCON_SYSAHBCLKCTRL_CT32B1 = 0x400
	// Disabled
	SYSCON_SYSAHBCLKCTRL_CT32B1_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_CT32B1_ENABLED = 0x1
	// Position of SSP field.
	SYSCON_SYSAHBCLKCTRL_SSP_Pos = 0xb
	// Bit mask of SSP field.
	SYSCON_SYSAHBCLKCTRL_SSP_Msk = 0x800
	// Bit SSP.
	SYSCON_SYSAHBCLKCTRL_SSP = 0x800
	// Disabled
	SYSCON_SYSAHBCLKCTRL_SSP_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_SSP_ENABLED = 0x1
	// Position of UART field.
	SYSCON_SYSAHBCLKCTRL_UART_Pos = 0xc
	// Bit mask of UART field.
	SYSCON_SYSAHBCLKCTRL_UART_Msk = 0x1000
	// Bit UART.
	SYSCON_SYSAHBCLKCTRL_UART = 0x1000
	// Disabled
	SYSCON_SYSAHBCLKCTRL_UART_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_UART_ENABLED = 0x1
	// Position of ADC field.
	SYSCON_SYSAHBCLKCTRL_ADC_Pos = 0xd
	// Bit mask of ADC field.
	SYSCON_SYSAHBCLKCTRL_ADC_Msk = 0x2000
	// Bit ADC.
	SYSCON_SYSAHBCLKCTRL_ADC = 0x2000
	// Disabled
	SYSCON_SYSAHBCLKCTRL_ADC_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_ADC_ENABLED = 0x1
	// Position of USB_REG field.
	SYSCON_SYSAHBCLKCTRL_USB_REG_Pos = 0xe
	// Bit mask of USB_REG field.
	SYSCON_SYSAHBCLKCTRL_USB_REG_Msk = 0x4000
	// Bit USB_REG.
	SYSCON_SYSAHBCLKCTRL_USB_REG = 0x4000
	// Disabled
	SYSCON_SYSAHBCLKCTRL_USB_REG_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_USB_REG_ENABLED = 0x1
	// Position of WDT field.
	SYSCON_SYSAHBCLKCTRL_WDT_Pos = 0xf
	// Bit mask of WDT field.
	SYSCON_SYSAHBCLKCTRL_WDT_Msk = 0x8000
	// Bit WDT.
	SYSCON_SYSAHBCLKCTRL_WDT = 0x8000
	// Disabled
	SYSCON_SYSAHBCLKCTRL_WDT_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_WDT_ENABLED = 0x1
	// Position of IOCON field.
	SYSCON_SYSAHBCLKCTRL_IOCON_Pos = 0x10
	// Bit mask of IOCON field.
	SYSCON_SYSAHBCLKCTRL_IOCON_Msk = 0x10000
	// Bit IOCON.
	SYSCON_SYSAHBCLKCTRL_IOCON = 0x10000
	// Disabled
	SYSCON_SYSAHBCLKCTRL_IOCON_DISABLED = 0x0
	// Enabled
	SYSCON_SYSAHBCLKCTRL_IOCON_ENABLED = 0x1
	// Position of RESERVED field.
	SYSCON_SYSAHBCLKCTRL_RESERVED_Pos = 0x11
	// Bit mask of RESERVED field.
	SYSCON_SYSAHBCLKCTRL_RESERVED_Msk = 0x20000
	// Bit RESERVED.
	SYSCON_SYSAHBCLKCTRL_RESERVED = 0x20000
	// Position of SSP1 field.
	SYSCON_SYSAHBCLKCTRL_SSP1_Pos = 0x12
	// Bit mask of SSP1 field.
	SYSCON_SYSAHBCLKCTRL_SSP1_Msk = 0x40000
	// Bit SSP1.
	SYSCON_SYSAHBCLKCTRL_SSP1 = 0x40000
	// Disable
	SYSCON_SYSAHBCLKCTRL_SSP1_DISABLE = 0x0
	// Enable
	SYSCON_SYSAHBCLKCTRL_SSP1_ENABLE = 0x1
	// Position of RESERVED field.
	SYSCON_SYSAHBCLKCTRL_RESERVED_Pos = 0x13
	// Bit mask of RESERVED field.
	SYSCON_SYSAHBCLKCTRL_RESERVED_Msk = 0xfff80000

	// SSP0CLKDIV: SSP clock divder
	// Position of DIV field.
	SYSCON_SSP0CLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_SSP0CLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_SSP0CLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_SSP0CLKDIV_RESERVED_Msk = 0xffffff00

	// UARTCLKDIV: UART clock divder
	// Position of DIV field.
	SYSCON_UARTCLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_UARTCLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_UARTCLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_UARTCLKDIV_RESERVED_Msk = 0xffffff00

	// SSP1CLKDIV: SPISP1 clock divder
	// Position of DIV field.
	SYSCON_SSP1CLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_SSP1CLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_SSP1CLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_SSP1CLKDIV_RESERVED_Msk = 0xffffff00

	// TRACECLKDIV: ARM trace clock divider
	// Position of DIV field.
	SYSCON_TRACECLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_TRACECLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_TRACECLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_TRACECLKDIV_RESERVED_Msk = 0xffffff00

	// SYSTICKCLKDIV: SYSTICK clock divder
	// Position of DIV field.
	SYSCON_SYSTICKCLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_SYSTICKCLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_SYSTICKCLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_SYSTICKCLKDIV_RESERVED_Msk = 0xffffff00

	// USBCLKSEL: USB clock source select
	// Position of SEL field.
	SYSCON_USBCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_USBCLKSEL_SEL_Msk = 0x3
	// USB PLL out
	SYSCON_USBCLKSEL_SEL_USB_PLL_OUT = 0x0
	// Main clock
	SYSCON_USBCLKSEL_SEL_MAIN_CLOCK = 0x1
	// Position of RESERVED field.
	SYSCON_USBCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_USBCLKSEL_RESERVED_Msk = 0xfffffffc

	// USBCLKUEN: USB clock source update enable
	// Position of ENA field.
	SYSCON_USBCLKUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_USBCLKUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_USBCLKUEN_ENA = 0x1
	// No change
	SYSCON_USBCLKUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_USBCLKUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_USBCLKUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_USBCLKUEN_RESERVED_Msk = 0xfffffffe

	// USBCLKDIV: USB clock source divider
	// Position of DIV field.
	SYSCON_USBCLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_USBCLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_USBCLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_USBCLKDIV_RESERVED_Msk = 0xffffff00

	// WDTCLKSEL: WDT clock source select
	// Position of SEL field.
	SYSCON_WDTCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_WDTCLKSEL_SEL_Msk = 0x3
	// IRC oscillator
	SYSCON_WDTCLKSEL_SEL_IRC_OSCILLATOR = 0x0
	// Main clock
	SYSCON_WDTCLKSEL_SEL_MAIN_CLOCK = 0x1
	// Watchdog oscillator
	SYSCON_WDTCLKSEL_SEL_WATCHDOG_OSCILLATOR = 0x2
	// Position of RESERVED field.
	SYSCON_WDTCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_WDTCLKSEL_RESERVED_Msk = 0xfffffffc

	// WDTCLKUEN: WDT clock source update enable
	// Position of ENA field.
	SYSCON_WDTCLKUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_WDTCLKUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_WDTCLKUEN_ENA = 0x1
	// No change
	SYSCON_WDTCLKUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_WDTCLKUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_WDTCLKUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_WDTCLKUEN_RESERVED_Msk = 0xfffffffe

	// WDTCLKDIV: WDT clock divider
	// Position of DIV field.
	SYSCON_WDTCLKDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_WDTCLKDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_WDTCLKDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_WDTCLKDIV_RESERVED_Msk = 0xffffff00

	// CLKOUTCLKSEL: CLKOUT clock source select
	// Position of SEL field.
	SYSCON_CLKOUTCLKSEL_SEL_Pos = 0x0
	// Bit mask of SEL field.
	SYSCON_CLKOUTCLKSEL_SEL_Msk = 0x3
	// IRC oscillator
	SYSCON_CLKOUTCLKSEL_SEL_IRC_OSCILLATOR = 0x0
	// System oscillator
	SYSCON_CLKOUTCLKSEL_SEL_SYSTEM_OSCILLATOR = 0x1
	// Watchdog oscillator
	SYSCON_CLKOUTCLKSEL_SEL_WATCHDOG_OSCILLATOR = 0x2
	// Main clock
	SYSCON_CLKOUTCLKSEL_SEL_MAIN_CLOCK = 0x3
	// Position of RESERVED field.
	SYSCON_CLKOUTCLKSEL_RESERVED_Pos = 0x2
	// Bit mask of RESERVED field.
	SYSCON_CLKOUTCLKSEL_RESERVED_Msk = 0xfffffffc

	// CLKOUTUEN: CLKOUT clock source update enable
	// Position of ENA field.
	SYSCON_CLKOUTUEN_ENA_Pos = 0x0
	// Bit mask of ENA field.
	SYSCON_CLKOUTUEN_ENA_Msk = 0x1
	// Bit ENA.
	SYSCON_CLKOUTUEN_ENA = 0x1
	// No change
	SYSCON_CLKOUTUEN_ENA_NO_CHANGE = 0x0
	// Update clock source
	SYSCON_CLKOUTUEN_ENA_UPDATE_CLOCK_SOURCE = 0x1
	// Position of RESERVED field.
	SYSCON_CLKOUTUEN_RESERVED_Pos = 0x1
	// Bit mask of RESERVED field.
	SYSCON_CLKOUTUEN_RESERVED_Msk = 0xfffffffe

	// CLKOUTDIV: CLKOUT clock divider
	// Position of DIV field.
	SYSCON_CLKOUTDIV_DIV_Pos = 0x0
	// Bit mask of DIV field.
	SYSCON_CLKOUTDIV_DIV_Msk = 0xff
	// Position of RESERVED field.
	SYSCON_CLKOUTDIV_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_CLKOUTDIV_RESERVED_Msk = 0xffffff00

	// PIOPORCAP0: POR captured PIO status 0
	// Position of CAPPIO0_0 field.
	SYSCON_PIOPORCAP0_CAPPIO0_0_Pos = 0x0
	// Bit mask of CAPPIO0_0 field.
	SYSCON_PIOPORCAP0_CAPPIO0_0_Msk = 0x1
	// Bit CAPPIO0_0.
	SYSCON_PIOPORCAP0_CAPPIO0_0 = 0x1
	// Position of CAPPIO0_1 field.
	SYSCON_PIOPORCAP0_CAPPIO0_1_Pos = 0x1
	// Bit mask of CAPPIO0_1 field.
	SYSCON_PIOPORCAP0_CAPPIO0_1_Msk = 0x2
	// Bit CAPPIO0_1.
	SYSCON_PIOPORCAP0_CAPPIO0_1 = 0x2
	// Position of CAPPIO0_2 field.
	SYSCON_PIOPORCAP0_CAPPIO0_2_Pos = 0x2
	// Bit mask of CAPPIO0_2 field.
	SYSCON_PIOPORCAP0_CAPPIO0_2_Msk = 0x4
	// Bit CAPPIO0_2.
	SYSCON_PIOPORCAP0_CAPPIO0_2 = 0x4
	// Position of CAPPIO0_3 field.
	SYSCON_PIOPORCAP0_CAPPIO0_3_Pos = 0x3
	// Bit mask of CAPPIO0_3 field.
	SYSCON_PIOPORCAP0_CAPPIO0_3_Msk = 0x8
	// Bit CAPPIO0_3.
	SYSCON_PIOPORCAP0_CAPPIO0_3 = 0x8
	// Position of CAPPIO0_4 field.
	SYSCON_PIOPORCAP0_CAPPIO0_4_Pos = 0x4
	// Bit mask of CAPPIO0_4 field.
	SYSCON_PIOPORCAP0_CAPPIO0_4_Msk = 0x10
	// Bit CAPPIO0_4.
	SYSCON_PIOPORCAP0_CAPPIO0_4 = 0x10
	// Position of CAPPIO0_5 field.
	SYSCON_PIOPORCAP0_CAPPIO0_5_Pos = 0x5
	// Bit mask of CAPPIO0_5 field.
	SYSCON_PIOPORCAP0_CAPPIO0_5_Msk = 0x20
	// Bit CAPPIO0_5.
	SYSCON_PIOPORCAP0_CAPPIO0_5 = 0x20
	// Position of CAPPIO0_6 field.
	SYSCON_PIOPORCAP0_CAPPIO0_6_Pos = 0x6
	// Bit mask of CAPPIO0_6 field.
	SYSCON_PIOPORCAP0_CAPPIO0_6_Msk = 0x40
	// Bit CAPPIO0_6.
	SYSCON_PIOPORCAP0_CAPPIO0_6 = 0x40
	// Position of CAPPIO0_7 field.
	SYSCON_PIOPORCAP0_CAPPIO0_7_Pos = 0x7
	// Bit mask of CAPPIO0_7 field.
	SYSCON_PIOPORCAP0_CAPPIO0_7_Msk = 0x80
	// Bit CAPPIO0_7.
	SYSCON_PIOPORCAP0_CAPPIO0_7 = 0x80
	// Position of CAPPIO0_8 field.
	SYSCON_PIOPORCAP0_CAPPIO0_8_Pos = 0x8
	// Bit mask of CAPPIO0_8 field.
	SYSCON_PIOPORCAP0_CAPPIO0_8_Msk = 0x100
	// Bit CAPPIO0_8.
	SYSCON_PIOPORCAP0_CAPPIO0_8 = 0x100
	// Position of CAPPIO0_9 field.
	SYSCON_PIOPORCAP0_CAPPIO0_9_Pos = 0x9
	// Bit mask of CAPPIO0_9 field.
	SYSCON_PIOPORCAP0_CAPPIO0_9_Msk = 0x200
	// Bit CAPPIO0_9.
	SYSCON_PIOPORCAP0_CAPPIO0_9 = 0x200
	// Position of CAPPIO0_10 field.
	SYSCON_PIOPORCAP0_CAPPIO0_10_Pos = 0xa
	// Bit mask of CAPPIO0_10 field.
	SYSCON_PIOPORCAP0_CAPPIO0_10_Msk = 0x400
	// Bit CAPPIO0_10.
	SYSCON_PIOPORCAP0_CAPPIO0_10 = 0x400
	// Position of CAPPIO0_11 field.
	SYSCON_PIOPORCAP0_CAPPIO0_11_Pos = 0xb
	// Bit mask of CAPPIO0_11 field.
	SYSCON_PIOPORCAP0_CAPPIO0_11_Msk = 0x800
	// Bit CAPPIO0_11.
	SYSCON_PIOPORCAP0_CAPPIO0_11 = 0x800
	// Position of CAPPIO1_0 field.
	SYSCON_PIOPORCAP0_CAPPIO1_0_Pos = 0xc
	// Bit mask of CAPPIO1_0 field.
	SYSCON_PIOPORCAP0_CAPPIO1_0_Msk = 0x1000
	// Bit CAPPIO1_0.
	SYSCON_PIOPORCAP0_CAPPIO1_0 = 0x1000
	// Position of CAPPIO1_1 field.
	SYSCON_PIOPORCAP0_CAPPIO1_1_Pos = 0xd
	// Bit mask of CAPPIO1_1 field.
	SYSCON_PIOPORCAP0_CAPPIO1_1_Msk = 0x2000
	// Bit CAPPIO1_1.
	SYSCON_PIOPORCAP0_CAPPIO1_1 = 0x2000
	// Position of CAPPIO1_2 field.
	SYSCON_PIOPORCAP0_CAPPIO1_2_Pos = 0xe
	// Bit mask of CAPPIO1_2 field.
	SYSCON_PIOPORCAP0_CAPPIO1_2_Msk = 0x4000
	// Bit CAPPIO1_2.
	SYSCON_PIOPORCAP0_CAPPIO1_2 = 0x4000
	// Position of CAPPIO1_3 field.
	SYSCON_PIOPORCAP0_CAPPIO1_3_Pos = 0xf
	// Bit mask of CAPPIO1_3 field.
	SYSCON_PIOPORCAP0_CAPPIO1_3_Msk = 0x8000
	// Bit CAPPIO1_3.
	SYSCON_PIOPORCAP0_CAPPIO1_3 = 0x8000
	// Position of CAPPIO1_4 field.
	SYSCON_PIOPORCAP0_CAPPIO1_4_Pos = 0x10
	// Bit mask of CAPPIO1_4 field.
	SYSCON_PIOPORCAP0_CAPPIO1_4_Msk = 0x10000
	// Bit CAPPIO1_4.
	SYSCON_PIOPORCAP0_CAPPIO1_4 = 0x10000
	// Position of CAPPIO1_5 field.
	SYSCON_PIOPORCAP0_CAPPIO1_5_Pos = 0x11
	// Bit mask of CAPPIO1_5 field.
	SYSCON_PIOPORCAP0_CAPPIO1_5_Msk = 0x20000
	// Bit CAPPIO1_5.
	SYSCON_PIOPORCAP0_CAPPIO1_5 = 0x20000
	// Position of CAPPIO1_6 field.
	SYSCON_PIOPORCAP0_CAPPIO1_6_Pos = 0x12
	// Bit mask of CAPPIO1_6 field.
	SYSCON_PIOPORCAP0_CAPPIO1_6_Msk = 0x40000
	// Bit CAPPIO1_6.
	SYSCON_PIOPORCAP0_CAPPIO1_6 = 0x40000
	// Position of CAPPIO1_7 field.
	SYSCON_PIOPORCAP0_CAPPIO1_7_Pos = 0x13
	// Bit mask of CAPPIO1_7 field.
	SYSCON_PIOPORCAP0_CAPPIO1_7_Msk = 0x80000
	// Bit CAPPIO1_7.
	SYSCON_PIOPORCAP0_CAPPIO1_7 = 0x80000
	// Position of CAPPIO1_8 field.
	SYSCON_PIOPORCAP0_CAPPIO1_8_Pos = 0x14
	// Bit mask of CAPPIO1_8 field.
	SYSCON_PIOPORCAP0_CAPPIO1_8_Msk = 0x100000
	// Bit CAPPIO1_8.
	SYSCON_PIOPORCAP0_CAPPIO1_8 = 0x100000
	// Position of CAPPIO1_9 field.
	SYSCON_PIOPORCAP0_CAPPIO1_9_Pos = 0x15
	// Bit mask of CAPPIO1_9 field.
	SYSCON_PIOPORCAP0_CAPPIO1_9_Msk = 0x200000
	// Bit CAPPIO1_9.
	SYSCON_PIOPORCAP0_CAPPIO1_9 = 0x200000
	// Position of CAPPIO1_10 field.
	SYSCON_PIOPORCAP0_CAPPIO1_10_Pos = 0x16
	// Bit mask of CAPPIO1_10 field.
	SYSCON_PIOPORCAP0_CAPPIO1_10_Msk = 0x400000
	// Bit CAPPIO1_10.
	SYSCON_PIOPORCAP0_CAPPIO1_10 = 0x400000
	// Position of CAPPIO1_11 field.
	SYSCON_PIOPORCAP0_CAPPIO1_11_Pos = 0x17
	// Bit mask of CAPPIO1_11 field.
	SYSCON_PIOPORCAP0_CAPPIO1_11_Msk = 0x800000
	// Bit CAPPIO1_11.
	SYSCON_PIOPORCAP0_CAPPIO1_11 = 0x800000
	// Position of CAPPIO2_0 field.
	SYSCON_PIOPORCAP0_CAPPIO2_0_Pos = 0x18
	// Bit mask of CAPPIO2_0 field.
	SYSCON_PIOPORCAP0_CAPPIO2_0_Msk = 0x1000000
	// Bit CAPPIO2_0.
	SYSCON_PIOPORCAP0_CAPPIO2_0 = 0x1000000
	// Position of CAPPIO2_1 field.
	SYSCON_PIOPORCAP0_CAPPIO2_1_Pos = 0x19
	// Bit mask of CAPPIO2_1 field.
	SYSCON_PIOPORCAP0_CAPPIO2_1_Msk = 0x2000000
	// Bit CAPPIO2_1.
	SYSCON_PIOPORCAP0_CAPPIO2_1 = 0x2000000
	// Position of CAPPIO2_2 field.
	SYSCON_PIOPORCAP0_CAPPIO2_2_Pos = 0x1a
	// Bit mask of CAPPIO2_2 field.
	SYSCON_PIOPORCAP0_CAPPIO2_2_Msk = 0x4000000
	// Bit CAPPIO2_2.
	SYSCON_PIOPORCAP0_CAPPIO2_2 = 0x4000000
	// Position of CAPPIO2_3 field.
	SYSCON_PIOPORCAP0_CAPPIO2_3_Pos = 0x1b
	// Bit mask of CAPPIO2_3 field.
	SYSCON_PIOPORCAP0_CAPPIO2_3_Msk = 0x8000000
	// Bit CAPPIO2_3.
	SYSCON_PIOPORCAP0_CAPPIO2_3 = 0x8000000
	// Position of CAPPIO2_4 field.
	SYSCON_PIOPORCAP0_CAPPIO2_4_Pos = 0x1c
	// Bit mask of CAPPIO2_4 field.
	SYSCON_PIOPORCAP0_CAPPIO2_4_Msk = 0x10000000
	// Bit CAPPIO2_4.
	SYSCON_PIOPORCAP0_CAPPIO2_4 = 0x10000000
	// Position of CAPPIO2_5 field.
	SYSCON_PIOPORCAP0_CAPPIO2_5_Pos = 0x1d
	// Bit mask of CAPPIO2_5 field.
	SYSCON_PIOPORCAP0_CAPPIO2_5_Msk = 0x20000000
	// Bit CAPPIO2_5.
	SYSCON_PIOPORCAP0_CAPPIO2_5 = 0x20000000
	// Position of CAPPIO2_6 field.
	SYSCON_PIOPORCAP0_CAPPIO2_6_Pos = 0x1e
	// Bit mask of CAPPIO2_6 field.
	SYSCON_PIOPORCAP0_CAPPIO2_6_Msk = 0x40000000
	// Bit CAPPIO2_6.
	SYSCON_PIOPORCAP0_CAPPIO2_6 = 0x40000000
	// Position of CAPPIO2_7 field.
	SYSCON_PIOPORCAP0_CAPPIO2_7_Pos = 0x1f
	// Bit mask of CAPPIO2_7 field.
	SYSCON_PIOPORCAP0_CAPPIO2_7_Msk = 0x80000000
	// Bit CAPPIO2_7.
	SYSCON_PIOPORCAP0_CAPPIO2_7 = 0x80000000

	// PIOPORCAP1: POR captured PIO status 1
	// Position of CAPPIO2_8 field.
	SYSCON_PIOPORCAP1_CAPPIO2_8_Pos = 0x0
	// Bit mask of CAPPIO2_8 field.
	SYSCON_PIOPORCAP1_CAPPIO2_8_Msk = 0x1
	// Bit CAPPIO2_8.
	SYSCON_PIOPORCAP1_CAPPIO2_8 = 0x1
	// Position of CAPPIO2_9 field.
	SYSCON_PIOPORCAP1_CAPPIO2_9_Pos = 0x1
	// Bit mask of CAPPIO2_9 field.
	SYSCON_PIOPORCAP1_CAPPIO2_9_Msk = 0x2
	// Bit CAPPIO2_9.
	SYSCON_PIOPORCAP1_CAPPIO2_9 = 0x2
	// Position of CAPPIO2_10 field.
	SYSCON_PIOPORCAP1_CAPPIO2_10_Pos = 0x2
	// Bit mask of CAPPIO2_10 field.
	SYSCON_PIOPORCAP1_CAPPIO2_10_Msk = 0x4
	// Bit CAPPIO2_10.
	SYSCON_PIOPORCAP1_CAPPIO2_10 = 0x4
	// Position of CAPPIO2_11 field.
	SYSCON_PIOPORCAP1_CAPPIO2_11_Pos = 0x3
	// Bit mask of CAPPIO2_11 field.
	SYSCON_PIOPORCAP1_CAPPIO2_11_Msk = 0x8
	// Bit CAPPIO2_11.
	SYSCON_PIOPORCAP1_CAPPIO2_11 = 0x8
	// Position of CAPPIO3_0 field.
	SYSCON_PIOPORCAP1_CAPPIO3_0_Pos = 0x4
	// Bit mask of CAPPIO3_0 field.
	SYSCON_PIOPORCAP1_CAPPIO3_0_Msk = 0x10
	// Bit CAPPIO3_0.
	SYSCON_PIOPORCAP1_CAPPIO3_0 = 0x10
	// Position of CAPPIO3_1 field.
	SYSCON_PIOPORCAP1_CAPPIO3_1_Pos = 0x5
	// Bit mask of CAPPIO3_1 field.
	SYSCON_PIOPORCAP1_CAPPIO3_1_Msk = 0x20
	// Bit CAPPIO3_1.
	SYSCON_PIOPORCAP1_CAPPIO3_1 = 0x20
	// Position of CAPPIO3_2 field.
	SYSCON_PIOPORCAP1_CAPPIO3_2_Pos = 0x6
	// Bit mask of CAPPIO3_2 field.
	SYSCON_PIOPORCAP1_CAPPIO3_2_Msk = 0x40
	// Bit CAPPIO3_2.
	SYSCON_PIOPORCAP1_CAPPIO3_2 = 0x40
	// Position of CAPPIO3_3 field.
	SYSCON_PIOPORCAP1_CAPPIO3_3_Pos = 0x7
	// Bit mask of CAPPIO3_3 field.
	SYSCON_PIOPORCAP1_CAPPIO3_3_Msk = 0x80
	// Bit CAPPIO3_3.
	SYSCON_PIOPORCAP1_CAPPIO3_3 = 0x80
	// Position of CAPPIO3_4 field.
	SYSCON_PIOPORCAP1_CAPPIO3_4_Pos = 0x8
	// Bit mask of CAPPIO3_4 field.
	SYSCON_PIOPORCAP1_CAPPIO3_4_Msk = 0x100
	// Bit CAPPIO3_4.
	SYSCON_PIOPORCAP1_CAPPIO3_4 = 0x100
	// Position of CAPPIO3_5 field.
	SYSCON_PIOPORCAP1_CAPPIO3_5_Pos = 0x9
	// Bit mask of CAPPIO3_5 field.
	SYSCON_PIOPORCAP1_CAPPIO3_5_Msk = 0x200
	// Bit CAPPIO3_5.
	SYSCON_PIOPORCAP1_CAPPIO3_5 = 0x200
	// Position of RESERVED field.
	SYSCON_PIOPORCAP1_RESERVED_Pos = 0xa
	// Bit mask of RESERVED field.
	SYSCON_PIOPORCAP1_RESERVED_Msk = 0xfffffc00

	// BODCTRL: BOD control
	// Position of BODRSTLEV field.
	SYSCON_BODCTRL_BODRSTLEV_Pos = 0x0
	// Bit mask of BODRSTLEV field.
	SYSCON_BODCTRL_BODRSTLEV_Msk = 0x3
	// Position of BODINTVAL field.
	SYSCON_BODCTRL_BODINTVAL_Pos = 0x2
	// Bit mask of BODINTVAL field.
	SYSCON_BODCTRL_BODINTVAL_Msk = 0xc
	// Position of BODRSTENA field.
	SYSCON_BODCTRL_BODRSTENA_Pos = 0x4
	// Bit mask of BODRSTENA field.
	SYSCON_BODCTRL_BODRSTENA_Msk = 0x10
	// Bit BODRSTENA.
	SYSCON_BODCTRL_BODRSTENA = 0x10
	// Disable reset function.
	SYSCON_BODCTRL_BODRSTENA_DISABLE_RESET_FUNCTI = 0x0
	// Enable reset function.
	SYSCON_BODCTRL_BODRSTENA_ENABLE_RESET_FUNCTIO = 0x1
	// Position of RESERVED field.
	SYSCON_BODCTRL_RESERVED_Pos = 0x5
	// Bit mask of RESERVED field.
	SYSCON_BODCTRL_RESERVED_Msk = 0xffffffe0

	// SYSTCKCAL: System tick counter calibration
	// Position of CAL field.
	SYSCON_SYSTCKCAL_CAL_Pos = 0x0
	// Bit mask of CAL field.
	SYSCON_SYSTCKCAL_CAL_Msk = 0x3ffffff
	// Position of RESERVED field.
	SYSCON_SYSTCKCAL_RESERVED_Pos = 0x1a
	// Bit mask of RESERVED field.
	SYSCON_SYSTCKCAL_RESERVED_Msk = 0xfc000000

	// STARTAPRP0: Start logic edge control register 0; bottom 32 interrupts
	// Position of APRPIO0_0 field.
	SYSCON_STARTAPRP0_APRPIO0_0_Pos = 0x0
	// Bit mask of APRPIO0_0 field.
	SYSCON_STARTAPRP0_APRPIO0_0_Msk = 0x1
	// Bit APRPIO0_0.
	SYSCON_STARTAPRP0_APRPIO0_0 = 0x1
	// Position of APRPIO0_1 field.
	SYSCON_STARTAPRP0_APRPIO0_1_Pos = 0x1
	// Bit mask of APRPIO0_1 field.
	SYSCON_STARTAPRP0_APRPIO0_1_Msk = 0x2
	// Bit APRPIO0_1.
	SYSCON_STARTAPRP0_APRPIO0_1 = 0x2
	// Position of APRPIO0_2 field.
	SYSCON_STARTAPRP0_APRPIO0_2_Pos = 0x2
	// Bit mask of APRPIO0_2 field.
	SYSCON_STARTAPRP0_APRPIO0_2_Msk = 0x4
	// Bit APRPIO0_2.
	SYSCON_STARTAPRP0_APRPIO0_2 = 0x4
	// Position of APRPIO0_3 field.
	SYSCON_STARTAPRP0_APRPIO0_3_Pos = 0x3
	// Bit mask of APRPIO0_3 field.
	SYSCON_STARTAPRP0_APRPIO0_3_Msk = 0x8
	// Bit APRPIO0_3.
	SYSCON_STARTAPRP0_APRPIO0_3 = 0x8
	// Position of APRPIO0_4 field.
	SYSCON_STARTAPRP0_APRPIO0_4_Pos = 0x4
	// Bit mask of APRPIO0_4 field.
	SYSCON_STARTAPRP0_APRPIO0_4_Msk = 0x10
	// Bit APRPIO0_4.
	SYSCON_STARTAPRP0_APRPIO0_4 = 0x10
	// Position of APRPIO0_5 field.
	SYSCON_STARTAPRP0_APRPIO0_5_Pos = 0x5
	// Bit mask of APRPIO0_5 field.
	SYSCON_STARTAPRP0_APRPIO0_5_Msk = 0x20
	// Bit APRPIO0_5.
	SYSCON_STARTAPRP0_APRPIO0_5 = 0x20
	// Position of APRPIO0_6 field.
	SYSCON_STARTAPRP0_APRPIO0_6_Pos = 0x6
	// Bit mask of APRPIO0_6 field.
	SYSCON_STARTAPRP0_APRPIO0_6_Msk = 0x40
	// Bit APRPIO0_6.
	SYSCON_STARTAPRP0_APRPIO0_6 = 0x40
	// Position of APRPIO0_7 field.
	SYSCON_STARTAPRP0_APRPIO0_7_Pos = 0x7
	// Bit mask of APRPIO0_7 field.
	SYSCON_STARTAPRP0_APRPIO0_7_Msk = 0x80
	// Bit APRPIO0_7.
	SYSCON_STARTAPRP0_APRPIO0_7 = 0x80
	// Position of APRPIO0_8 field.
	SYSCON_STARTAPRP0_APRPIO0_8_Pos = 0x8
	// Bit mask of APRPIO0_8 field.
	SYSCON_STARTAPRP0_APRPIO0_8_Msk = 0x100
	// Bit APRPIO0_8.
	SYSCON_STARTAPRP0_APRPIO0_8 = 0x100
	// Position of APRPIO0_9 field.
	SYSCON_STARTAPRP0_APRPIO0_9_Pos = 0x9
	// Bit mask of APRPIO0_9 field.
	SYSCON_STARTAPRP0_APRPIO0_9_Msk = 0x200
	// Bit APRPIO0_9.
	SYSCON_STARTAPRP0_APRPIO0_9 = 0x200
	// Position of APRPIO0_10 field.
	SYSCON_STARTAPRP0_APRPIO0_10_Pos = 0xa
	// Bit mask of APRPIO0_10 field.
	SYSCON_STARTAPRP0_APRPIO0_10_Msk = 0x400
	// Bit APRPIO0_10.
	SYSCON_STARTAPRP0_APRPIO0_10 = 0x400
	// Position of APRPIO0_11 field.
	SYSCON_STARTAPRP0_APRPIO0_11_Pos = 0xb
	// Bit mask of APRPIO0_11 field.
	SYSCON_STARTAPRP0_APRPIO0_11_Msk = 0x800
	// Bit APRPIO0_11.
	SYSCON_STARTAPRP0_APRPIO0_11 = 0x800
	// Position of APRPIO1_0 field.
	SYSCON_STARTAPRP0_APRPIO1_0_Pos = 0xc
	// Bit mask of APRPIO1_0 field.
	SYSCON_STARTAPRP0_APRPIO1_0_Msk = 0x1000
	// Bit APRPIO1_0.
	SYSCON_STARTAPRP0_APRPIO1_0 = 0x1000
	// Position of APRPIO1_1 field.
	SYSCON_STARTAPRP0_APRPIO1_1_Pos = 0xd
	// Bit mask of APRPIO1_1 field.
	SYSCON_STARTAPRP0_APRPIO1_1_Msk = 0x2000
	// Bit APRPIO1_1.
	SYSCON_STARTAPRP0_APRPIO1_1 = 0x2000
	// Position of APRPIO1_2 field.
	SYSCON_STARTAPRP0_APRPIO1_2_Pos = 0xe
	// Bit mask of APRPIO1_2 field.
	SYSCON_STARTAPRP0_APRPIO1_2_Msk = 0x4000
	// Bit APRPIO1_2.
	SYSCON_STARTAPRP0_APRPIO1_2 = 0x4000
	// Position of APRPIO1_3 field.
	SYSCON_STARTAPRP0_APRPIO1_3_Pos = 0xf
	// Bit mask of APRPIO1_3 field.
	SYSCON_STARTAPRP0_APRPIO1_3_Msk = 0x8000
	// Bit APRPIO1_3.
	SYSCON_STARTAPRP0_APRPIO1_3 = 0x8000
	// Position of APRPIO1_4 field.
	SYSCON_STARTAPRP0_APRPIO1_4_Pos = 0x10
	// Bit mask of APRPIO1_4 field.
	SYSCON_STARTAPRP0_APRPIO1_4_Msk = 0x10000
	// Bit APRPIO1_4.
	SYSCON_STARTAPRP0_APRPIO1_4 = 0x10000
	// Position of APRPIO1_5 field.
	SYSCON_STARTAPRP0_APRPIO1_5_Pos = 0x11
	// Bit mask of APRPIO1_5 field.
	SYSCON_STARTAPRP0_APRPIO1_5_Msk = 0x20000
	// Bit APRPIO1_5.
	SYSCON_STARTAPRP0_APRPIO1_5 = 0x20000
	// Position of APRPIO1_6 field.
	SYSCON_STARTAPRP0_APRPIO1_6_Pos = 0x12
	// Bit mask of APRPIO1_6 field.
	SYSCON_STARTAPRP0_APRPIO1_6_Msk = 0x40000
	// Bit APRPIO1_6.
	SYSCON_STARTAPRP0_APRPIO1_6 = 0x40000
	// Position of APRPIO1_7 field.
	SYSCON_STARTAPRP0_APRPIO1_7_Pos = 0x13
	// Bit mask of APRPIO1_7 field.
	SYSCON_STARTAPRP0_APRPIO1_7_Msk = 0x80000
	// Bit APRPIO1_7.
	SYSCON_STARTAPRP0_APRPIO1_7 = 0x80000
	// Position of APRPIO1_8 field.
	SYSCON_STARTAPRP0_APRPIO1_8_Pos = 0x14
	// Bit mask of APRPIO1_8 field.
	SYSCON_STARTAPRP0_APRPIO1_8_Msk = 0x100000
	// Bit APRPIO1_8.
	SYSCON_STARTAPRP0_APRPIO1_8 = 0x100000
	// Position of APRPIO1_9 field.
	SYSCON_STARTAPRP0_APRPIO1_9_Pos = 0x15
	// Bit mask of APRPIO1_9 field.
	SYSCON_STARTAPRP0_APRPIO1_9_Msk = 0x200000
	// Bit APRPIO1_9.
	SYSCON_STARTAPRP0_APRPIO1_9 = 0x200000
	// Position of APRPIO1_10 field.
	SYSCON_STARTAPRP0_APRPIO1_10_Pos = 0x16
	// Bit mask of APRPIO1_10 field.
	SYSCON_STARTAPRP0_APRPIO1_10_Msk = 0x400000
	// Bit APRPIO1_10.
	SYSCON_STARTAPRP0_APRPIO1_10 = 0x400000
	// Position of APRPIO1_11 field.
	SYSCON_STARTAPRP0_APRPIO1_11_Pos = 0x17
	// Bit mask of APRPIO1_11 field.
	SYSCON_STARTAPRP0_APRPIO1_11_Msk = 0x800000
	// Bit APRPIO1_11.
	SYSCON_STARTAPRP0_APRPIO1_11 = 0x800000
	// Position of APRPIO2_0 field.
	SYSCON_STARTAPRP0_APRPIO2_0_Pos = 0x18
	// Bit mask of APRPIO2_0 field.
	SYSCON_STARTAPRP0_APRPIO2_0_Msk = 0x1000000
	// Bit APRPIO2_0.
	SYSCON_STARTAPRP0_APRPIO2_0 = 0x1000000
	// Position of APRPIO2_1 field.
	SYSCON_STARTAPRP0_APRPIO2_1_Pos = 0x19
	// Bit mask of APRPIO2_1 field.
	SYSCON_STARTAPRP0_APRPIO2_1_Msk = 0x2000000
	// Bit APRPIO2_1.
	SYSCON_STARTAPRP0_APRPIO2_1 = 0x2000000
	// Position of APRPIO2_2 field.
	SYSCON_STARTAPRP0_APRPIO2_2_Pos = 0x1a
	// Bit mask of APRPIO2_2 field.
	SYSCON_STARTAPRP0_APRPIO2_2_Msk = 0x4000000
	// Bit APRPIO2_2.
	SYSCON_STARTAPRP0_APRPIO2_2 = 0x4000000
	// Position of APRPIO2_3 field.
	SYSCON_STARTAPRP0_APRPIO2_3_Pos = 0x1b
	// Bit mask of APRPIO2_3 field.
	SYSCON_STARTAPRP0_APRPIO2_3_Msk = 0x8000000
	// Bit APRPIO2_3.
	SYSCON_STARTAPRP0_APRPIO2_3 = 0x8000000
	// Position of APRPIO2_4 field.
	SYSCON_STARTAPRP0_APRPIO2_4_Pos = 0x1c
	// Bit mask of APRPIO2_4 field.
	SYSCON_STARTAPRP0_APRPIO2_4_Msk = 0x10000000
	// Bit APRPIO2_4.
	SYSCON_STARTAPRP0_APRPIO2_4 = 0x10000000
	// Position of APRPIO2_5 field.
	SYSCON_STARTAPRP0_APRPIO2_5_Pos = 0x1d
	// Bit mask of APRPIO2_5 field.
	SYSCON_STARTAPRP0_APRPIO2_5_Msk = 0x20000000
	// Bit APRPIO2_5.
	SYSCON_STARTAPRP0_APRPIO2_5 = 0x20000000
	// Position of APRPIO2_6 field.
	SYSCON_STARTAPRP0_APRPIO2_6_Pos = 0x1e
	// Bit mask of APRPIO2_6 field.
	SYSCON_STARTAPRP0_APRPIO2_6_Msk = 0x40000000
	// Bit APRPIO2_6.
	SYSCON_STARTAPRP0_APRPIO2_6 = 0x40000000
	// Position of APRPIO2_7 field.
	SYSCON_STARTAPRP0_APRPIO2_7_Pos = 0x1f
	// Bit mask of APRPIO2_7 field.
	SYSCON_STARTAPRP0_APRPIO2_7_Msk = 0x80000000
	// Bit APRPIO2_7.
	SYSCON_STARTAPRP0_APRPIO2_7 = 0x80000000

	// STARTERP0: Start logic signal enable register 0; bottom 32 interrupts
	// Position of ERPIO0_0 field.
	SYSCON_STARTERP0_ERPIO0_0_Pos = 0x0
	// Bit mask of ERPIO0_0 field.
	SYSCON_STARTERP0_ERPIO0_0_Msk = 0x1
	// Bit ERPIO0_0.
	SYSCON_STARTERP0_ERPIO0_0 = 0x1
	// Position of ERPIO0_1 field.
	SYSCON_STARTERP0_ERPIO0_1_Pos = 0x1
	// Bit mask of ERPIO0_1 field.
	SYSCON_STARTERP0_ERPIO0_1_Msk = 0x2
	// Bit ERPIO0_1.
	SYSCON_STARTERP0_ERPIO0_1 = 0x2
	// Position of ERPIO0_2 field.
	SYSCON_STARTERP0_ERPIO0_2_Pos = 0x2
	// Bit mask of ERPIO0_2 field.
	SYSCON_STARTERP0_ERPIO0_2_Msk = 0x4
	// Bit ERPIO0_2.
	SYSCON_STARTERP0_ERPIO0_2 = 0x4
	// Position of ERPIO0_3 field.
	SYSCON_STARTERP0_ERPIO0_3_Pos = 0x3
	// Bit mask of ERPIO0_3 field.
	SYSCON_STARTERP0_ERPIO0_3_Msk = 0x8
	// Bit ERPIO0_3.
	SYSCON_STARTERP0_ERPIO0_3 = 0x8
	// Position of ERPIO0_4 field.
	SYSCON_STARTERP0_ERPIO0_4_Pos = 0x4
	// Bit mask of ERPIO0_4 field.
	SYSCON_STARTERP0_ERPIO0_4_Msk = 0x10
	// Bit ERPIO0_4.
	SYSCON_STARTERP0_ERPIO0_4 = 0x10
	// Position of ERPIO0_5 field.
	SYSCON_STARTERP0_ERPIO0_5_Pos = 0x5
	// Bit mask of ERPIO0_5 field.
	SYSCON_STARTERP0_ERPIO0_5_Msk = 0x20
	// Bit ERPIO0_5.
	SYSCON_STARTERP0_ERPIO0_5 = 0x20
	// Position of ERPIO0_6 field.
	SYSCON_STARTERP0_ERPIO0_6_Pos = 0x6
	// Bit mask of ERPIO0_6 field.
	SYSCON_STARTERP0_ERPIO0_6_Msk = 0x40
	// Bit ERPIO0_6.
	SYSCON_STARTERP0_ERPIO0_6 = 0x40
	// Position of ERPIO0_7 field.
	SYSCON_STARTERP0_ERPIO0_7_Pos = 0x7
	// Bit mask of ERPIO0_7 field.
	SYSCON_STARTERP0_ERPIO0_7_Msk = 0x80
	// Bit ERPIO0_7.
	SYSCON_STARTERP0_ERPIO0_7 = 0x80
	// Position of ERPIO0_8 field.
	SYSCON_STARTERP0_ERPIO0_8_Pos = 0x8
	// Bit mask of ERPIO0_8 field.
	SYSCON_STARTERP0_ERPIO0_8_Msk = 0x100
	// Bit ERPIO0_8.
	SYSCON_STARTERP0_ERPIO0_8 = 0x100
	// Position of ERPIO0_9 field.
	SYSCON_STARTERP0_ERPIO0_9_Pos = 0x9
	// Bit mask of ERPIO0_9 field.
	SYSCON_STARTERP0_ERPIO0_9_Msk = 0x200
	// Bit ERPIO0_9.
	SYSCON_STARTERP0_ERPIO0_9 = 0x200
	// Position of ERPIO0_10 field.
	SYSCON_STARTERP0_ERPIO0_10_Pos = 0xa
	// Bit mask of ERPIO0_10 field.
	SYSCON_STARTERP0_ERPIO0_10_Msk = 0x400
	// Bit ERPIO0_10.
	SYSCON_STARTERP0_ERPIO0_10 = 0x400
	// Position of ERPIO0_11 field.
	SYSCON_STARTERP0_ERPIO0_11_Pos = 0xb
	// Bit mask of ERPIO0_11 field.
	SYSCON_STARTERP0_ERPIO0_11_Msk = 0x800
	// Bit ERPIO0_11.
	SYSCON_STARTERP0_ERPIO0_11 = 0x800
	// Position of ERPIO1_0 field.
	SYSCON_STARTERP0_ERPIO1_0_Pos = 0xc
	// Bit mask of ERPIO1_0 field.
	SYSCON_STARTERP0_ERPIO1_0_Msk = 0x1000
	// Bit ERPIO1_0.
	SYSCON_STARTERP0_ERPIO1_0 = 0x1000
	// Position of ERPIO1_1 field.
	SYSCON_STARTERP0_ERPIO1_1_Pos = 0xd
	// Bit mask of ERPIO1_1 field.
	SYSCON_STARTERP0_ERPIO1_1_Msk = 0x2000
	// Bit ERPIO1_1.
	SYSCON_STARTERP0_ERPIO1_1 = 0x2000
	// Position of ERPIO1_2 field.
	SYSCON_STARTERP0_ERPIO1_2_Pos = 0xe
	// Bit mask of ERPIO1_2 field.
	SYSCON_STARTERP0_ERPIO1_2_Msk = 0x4000
	// Bit ERPIO1_2.
	SYSCON_STARTERP0_ERPIO1_2 = 0x4000
	// Position of ERPIO1_3 field.
	SYSCON_STARTERP0_ERPIO1_3_Pos = 0xf
	// Bit mask of ERPIO1_3 field.
	SYSCON_STARTERP0_ERPIO1_3_Msk = 0x8000
	// Bit ERPIO1_3.
	SYSCON_STARTERP0_ERPIO1_3 = 0x8000
	// Position of ERPIO1_4 field.
	SYSCON_STARTERP0_ERPIO1_4_Pos = 0x10
	// Bit mask of ERPIO1_4 field.
	SYSCON_STARTERP0_ERPIO1_4_Msk = 0x10000
	// Bit ERPIO1_4.
	SYSCON_STARTERP0_ERPIO1_4 = 0x10000
	// Position of ERPIO1_5 field.
	SYSCON_STARTERP0_ERPIO1_5_Pos = 0x11
	// Bit mask of ERPIO1_5 field.
	SYSCON_STARTERP0_ERPIO1_5_Msk = 0x20000
	// Bit ERPIO1_5.
	SYSCON_STARTERP0_ERPIO1_5 = 0x20000
	// Position of ERPIO1_6 field.
	SYSCON_STARTERP0_ERPIO1_6_Pos = 0x12
	// Bit mask of ERPIO1_6 field.
	SYSCON_STARTERP0_ERPIO1_6_Msk = 0x40000
	// Bit ERPIO1_6.
	SYSCON_STARTERP0_ERPIO1_6 = 0x40000
	// Position of ERPIO1_7 field.
	SYSCON_STARTERP0_ERPIO1_7_Pos = 0x13
	// Bit mask of ERPIO1_7 field.
	SYSCON_STARTERP0_ERPIO1_7_Msk = 0x80000
	// Bit ERPIO1_7.
	SYSCON_STARTERP0_ERPIO1_7 = 0x80000
	// Position of ERPIO1_8 field.
	SYSCON_STARTERP0_ERPIO1_8_Pos = 0x14
	// Bit mask of ERPIO1_8 field.
	SYSCON_STARTERP0_ERPIO1_8_Msk = 0x100000
	// Bit ERPIO1_8.
	SYSCON_STARTERP0_ERPIO1_8 = 0x100000
	// Position of ERPIO1_9 field.
	SYSCON_STARTERP0_ERPIO1_9_Pos = 0x15
	// Bit mask of ERPIO1_9 field.
	SYSCON_STARTERP0_ERPIO1_9_Msk = 0x200000
	// Bit ERPIO1_9.
	SYSCON_STARTERP0_ERPIO1_9 = 0x200000
	// Position of ERPIO1_10 field.
	SYSCON_STARTERP0_ERPIO1_10_Pos = 0x16
	// Bit mask of ERPIO1_10 field.
	SYSCON_STARTERP0_ERPIO1_10_Msk = 0x400000
	// Bit ERPIO1_10.
	SYSCON_STARTERP0_ERPIO1_10 = 0x400000
	// Position of ERPIO1_11 field.
	SYSCON_STARTERP0_ERPIO1_11_Pos = 0x17
	// Bit mask of ERPIO1_11 field.
	SYSCON_STARTERP0_ERPIO1_11_Msk = 0x800000
	// Bit ERPIO1_11.
	SYSCON_STARTERP0_ERPIO1_11 = 0x800000
	// Position of ERPIO2_0 field.
	SYSCON_STARTERP0_ERPIO2_0_Pos = 0x18
	// Bit mask of ERPIO2_0 field.
	SYSCON_STARTERP0_ERPIO2_0_Msk = 0x1000000
	// Bit ERPIO2_0.
	SYSCON_STARTERP0_ERPIO2_0 = 0x1000000
	// Position of ERPIO2_1 field.
	SYSCON_STARTERP0_ERPIO2_1_Pos = 0x19
	// Bit mask of ERPIO2_1 field.
	SYSCON_STARTERP0_ERPIO2_1_Msk = 0x2000000
	// Bit ERPIO2_1.
	SYSCON_STARTERP0_ERPIO2_1 = 0x2000000
	// Position of ERPIO2_2 field.
	SYSCON_STARTERP0_ERPIO2_2_Pos = 0x1a
	// Bit mask of ERPIO2_2 field.
	SYSCON_STARTERP0_ERPIO2_2_Msk = 0x4000000
	// Bit ERPIO2_2.
	SYSCON_STARTERP0_ERPIO2_2 = 0x4000000
	// Position of ERPIO2_3 field.
	SYSCON_STARTERP0_ERPIO2_3_Pos = 0x1b
	// Bit mask of ERPIO2_3 field.
	SYSCON_STARTERP0_ERPIO2_3_Msk = 0x8000000
	// Bit ERPIO2_3.
	SYSCON_STARTERP0_ERPIO2_3 = 0x8000000
	// Position of ERPIO2_4 field.
	SYSCON_STARTERP0_ERPIO2_4_Pos = 0x1c
	// Bit mask of ERPIO2_4 field.
	SYSCON_STARTERP0_ERPIO2_4_Msk = 0x10000000
	// Bit ERPIO2_4.
	SYSCON_STARTERP0_ERPIO2_4 = 0x10000000
	// Position of ERPIO2_5 field.
	SYSCON_STARTERP0_ERPIO2_5_Pos = 0x1d
	// Bit mask of ERPIO2_5 field.
	SYSCON_STARTERP0_ERPIO2_5_Msk = 0x20000000
	// Bit ERPIO2_5.
	SYSCON_STARTERP0_ERPIO2_5 = 0x20000000
	// Position of ERPIO2_6 field.
	SYSCON_STARTERP0_ERPIO2_6_Pos = 0x1e
	// Bit mask of ERPIO2_6 field.
	SYSCON_STARTERP0_ERPIO2_6_Msk = 0x40000000
	// Bit ERPIO2_6.
	SYSCON_STARTERP0_ERPIO2_6 = 0x40000000
	// Position of ERPIO2_7 field.
	SYSCON_STARTERP0_ERPIO2_7_Pos = 0x1f
	// Bit mask of ERPIO2_7 field.
	SYSCON_STARTERP0_ERPIO2_7_Msk = 0x80000000
	// Bit ERPIO2_7.
	SYSCON_STARTERP0_ERPIO2_7 = 0x80000000

	// STARTRSRP0CLR: Start logic reset register 0; bottom 32 interrupts
	// Position of RSRPIO0_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_0_Pos = 0x0
	// Bit mask of RSRPIO0_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_0_Msk = 0x1
	// Bit RSRPIO0_0.
	SYSCON_STARTRSRP0CLR_RSRPIO0_0 = 0x1
	// Position of RSRPIO0_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_1_Pos = 0x1
	// Bit mask of RSRPIO0_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_1_Msk = 0x2
	// Bit RSRPIO0_1.
	SYSCON_STARTRSRP0CLR_RSRPIO0_1 = 0x2
	// Position of RSRPIO0_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_2_Pos = 0x2
	// Bit mask of RSRPIO0_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_2_Msk = 0x4
	// Bit RSRPIO0_2.
	SYSCON_STARTRSRP0CLR_RSRPIO0_2 = 0x4
	// Position of RSRPIO0_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_3_Pos = 0x3
	// Bit mask of RSRPIO0_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_3_Msk = 0x8
	// Bit RSRPIO0_3.
	SYSCON_STARTRSRP0CLR_RSRPIO0_3 = 0x8
	// Position of RSRPIO0_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_4_Pos = 0x4
	// Bit mask of RSRPIO0_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_4_Msk = 0x10
	// Bit RSRPIO0_4.
	SYSCON_STARTRSRP0CLR_RSRPIO0_4 = 0x10
	// Position of RSRPIO0_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_5_Pos = 0x5
	// Bit mask of RSRPIO0_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_5_Msk = 0x20
	// Bit RSRPIO0_5.
	SYSCON_STARTRSRP0CLR_RSRPIO0_5 = 0x20
	// Position of RSRPIO0_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_6_Pos = 0x6
	// Bit mask of RSRPIO0_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_6_Msk = 0x40
	// Bit RSRPIO0_6.
	SYSCON_STARTRSRP0CLR_RSRPIO0_6 = 0x40
	// Position of RSRPIO0_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_7_Pos = 0x7
	// Bit mask of RSRPIO0_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_7_Msk = 0x80
	// Bit RSRPIO0_7.
	SYSCON_STARTRSRP0CLR_RSRPIO0_7 = 0x80
	// Position of RSRPIO0_8 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_8_Pos = 0x8
	// Bit mask of RSRPIO0_8 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_8_Msk = 0x100
	// Bit RSRPIO0_8.
	SYSCON_STARTRSRP0CLR_RSRPIO0_8 = 0x100
	// Position of RSRPIO0_9 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_9_Pos = 0x9
	// Bit mask of RSRPIO0_9 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_9_Msk = 0x200
	// Bit RSRPIO0_9.
	SYSCON_STARTRSRP0CLR_RSRPIO0_9 = 0x200
	// Position of RSRPIO0_10 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_10_Pos = 0xa
	// Bit mask of RSRPIO0_10 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_10_Msk = 0x400
	// Bit RSRPIO0_10.
	SYSCON_STARTRSRP0CLR_RSRPIO0_10 = 0x400
	// Position of RSRPIO0_11 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_11_Pos = 0xb
	// Bit mask of RSRPIO0_11 field.
	SYSCON_STARTRSRP0CLR_RSRPIO0_11_Msk = 0x800
	// Bit RSRPIO0_11.
	SYSCON_STARTRSRP0CLR_RSRPIO0_11 = 0x800
	// Position of RSRPIO1_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_0_Pos = 0xc
	// Bit mask of RSRPIO1_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_0_Msk = 0x1000
	// Bit RSRPIO1_0.
	SYSCON_STARTRSRP0CLR_RSRPIO1_0 = 0x1000
	// Position of RSRPIO1_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_1_Pos = 0xd
	// Bit mask of RSRPIO1_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_1_Msk = 0x2000
	// Bit RSRPIO1_1.
	SYSCON_STARTRSRP0CLR_RSRPIO1_1 = 0x2000
	// Position of RSRPIO1_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_2_Pos = 0xe
	// Bit mask of RSRPIO1_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_2_Msk = 0x4000
	// Bit RSRPIO1_2.
	SYSCON_STARTRSRP0CLR_RSRPIO1_2 = 0x4000
	// Position of RSRPIO1_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_3_Pos = 0xf
	// Bit mask of RSRPIO1_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_3_Msk = 0x8000
	// Bit RSRPIO1_3.
	SYSCON_STARTRSRP0CLR_RSRPIO1_3 = 0x8000
	// Position of RSRPIO1_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_4_Pos = 0x10
	// Bit mask of RSRPIO1_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_4_Msk = 0x10000
	// Bit RSRPIO1_4.
	SYSCON_STARTRSRP0CLR_RSRPIO1_4 = 0x10000
	// Position of RSRPIO1_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_5_Pos = 0x11
	// Bit mask of RSRPIO1_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_5_Msk = 0x20000
	// Bit RSRPIO1_5.
	SYSCON_STARTRSRP0CLR_RSRPIO1_5 = 0x20000
	// Position of RSRPIO1_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_6_Pos = 0x12
	// Bit mask of RSRPIO1_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_6_Msk = 0x40000
	// Bit RSRPIO1_6.
	SYSCON_STARTRSRP0CLR_RSRPIO1_6 = 0x40000
	// Position of RSRPIO1_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_7_Pos = 0x13
	// Bit mask of RSRPIO1_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_7_Msk = 0x80000
	// Bit RSRPIO1_7.
	SYSCON_STARTRSRP0CLR_RSRPIO1_7 = 0x80000
	// Position of RSRPIO1_8 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_8_Pos = 0x14
	// Bit mask of RSRPIO1_8 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_8_Msk = 0x100000
	// Bit RSRPIO1_8.
	SYSCON_STARTRSRP0CLR_RSRPIO1_8 = 0x100000
	// Position of RSRPIO1_9 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_9_Pos = 0x15
	// Bit mask of RSRPIO1_9 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_9_Msk = 0x200000
	// Bit RSRPIO1_9.
	SYSCON_STARTRSRP0CLR_RSRPIO1_9 = 0x200000
	// Position of RSRPIO1_10 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_10_Pos = 0x16
	// Bit mask of RSRPIO1_10 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_10_Msk = 0x400000
	// Bit RSRPIO1_10.
	SYSCON_STARTRSRP0CLR_RSRPIO1_10 = 0x400000
	// Position of RSRPIO1_11 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_11_Pos = 0x17
	// Bit mask of RSRPIO1_11 field.
	SYSCON_STARTRSRP0CLR_RSRPIO1_11_Msk = 0x800000
	// Bit RSRPIO1_11.
	SYSCON_STARTRSRP0CLR_RSRPIO1_11 = 0x800000
	// Position of RSRPIO2_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_0_Pos = 0x18
	// Bit mask of RSRPIO2_0 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_0_Msk = 0x1000000
	// Bit RSRPIO2_0.
	SYSCON_STARTRSRP0CLR_RSRPIO2_0 = 0x1000000
	// Position of RSRPIO2_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_1_Pos = 0x19
	// Bit mask of RSRPIO2_1 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_1_Msk = 0x2000000
	// Bit RSRPIO2_1.
	SYSCON_STARTRSRP0CLR_RSRPIO2_1 = 0x2000000
	// Position of RSRPIO2_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_2_Pos = 0x1a
	// Bit mask of RSRPIO2_2 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_2_Msk = 0x4000000
	// Bit RSRPIO2_2.
	SYSCON_STARTRSRP0CLR_RSRPIO2_2 = 0x4000000
	// Position of RSRPIO2_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_3_Pos = 0x1b
	// Bit mask of RSRPIO2_3 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_3_Msk = 0x8000000
	// Bit RSRPIO2_3.
	SYSCON_STARTRSRP0CLR_RSRPIO2_3 = 0x8000000
	// Position of RSRPIO2_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_4_Pos = 0x1c
	// Bit mask of RSRPIO2_4 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_4_Msk = 0x10000000
	// Bit RSRPIO2_4.
	SYSCON_STARTRSRP0CLR_RSRPIO2_4 = 0x10000000
	// Position of RSRPIO2_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_5_Pos = 0x1d
	// Bit mask of RSRPIO2_5 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_5_Msk = 0x20000000
	// Bit RSRPIO2_5.
	SYSCON_STARTRSRP0CLR_RSRPIO2_5 = 0x20000000
	// Position of RSRPIO2_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_6_Pos = 0x1e
	// Bit mask of RSRPIO2_6 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_6_Msk = 0x40000000
	// Bit RSRPIO2_6.
	SYSCON_STARTRSRP0CLR_RSRPIO2_6 = 0x40000000
	// Position of RSRPIO2_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_7_Pos = 0x1f
	// Bit mask of RSRPIO2_7 field.
	SYSCON_STARTRSRP0CLR_RSRPIO2_7_Msk = 0x80000000
	// Bit RSRPIO2_7.
	SYSCON_STARTRSRP0CLR_RSRPIO2_7 = 0x80000000

	// STARTSRP0: Start logic status register 0; bottom 32 interrupts
	// Position of SRPIO0_0 field.
	SYSCON_STARTSRP0_SRPIO0_0_Pos = 0x0
	// Bit mask of SRPIO0_0 field.
	SYSCON_STARTSRP0_SRPIO0_0_Msk = 0x1
	// Bit SRPIO0_0.
	SYSCON_STARTSRP0_SRPIO0_0 = 0x1
	// Position of SRPIO0_1 field.
	SYSCON_STARTSRP0_SRPIO0_1_Pos = 0x1
	// Bit mask of SRPIO0_1 field.
	SYSCON_STARTSRP0_SRPIO0_1_Msk = 0x2
	// Bit SRPIO0_1.
	SYSCON_STARTSRP0_SRPIO0_1 = 0x2
	// Position of SRPIO0_2 field.
	SYSCON_STARTSRP0_SRPIO0_2_Pos = 0x2
	// Bit mask of SRPIO0_2 field.
	SYSCON_STARTSRP0_SRPIO0_2_Msk = 0x4
	// Bit SRPIO0_2.
	SYSCON_STARTSRP0_SRPIO0_2 = 0x4
	// Position of SRPIO0_3 field.
	SYSCON_STARTSRP0_SRPIO0_3_Pos = 0x3
	// Bit mask of SRPIO0_3 field.
	SYSCON_STARTSRP0_SRPIO0_3_Msk = 0x8
	// Bit SRPIO0_3.
	SYSCON_STARTSRP0_SRPIO0_3 = 0x8
	// Position of SRPIO0_4 field.
	SYSCON_STARTSRP0_SRPIO0_4_Pos = 0x4
	// Bit mask of SRPIO0_4 field.
	SYSCON_STARTSRP0_SRPIO0_4_Msk = 0x10
	// Bit SRPIO0_4.
	SYSCON_STARTSRP0_SRPIO0_4 = 0x10
	// Position of SRPIO0_5 field.
	SYSCON_STARTSRP0_SRPIO0_5_Pos = 0x5
	// Bit mask of SRPIO0_5 field.
	SYSCON_STARTSRP0_SRPIO0_5_Msk = 0x20
	// Bit SRPIO0_5.
	SYSCON_STARTSRP0_SRPIO0_5 = 0x20
	// Position of SRPIO0_6 field.
	SYSCON_STARTSRP0_SRPIO0_6_Pos = 0x6
	// Bit mask of SRPIO0_6 field.
	SYSCON_STARTSRP0_SRPIO0_6_Msk = 0x40
	// Bit SRPIO0_6.
	SYSCON_STARTSRP0_SRPIO0_6 = 0x40
	// Position of SRPIO0_7 field.
	SYSCON_STARTSRP0_SRPIO0_7_Pos = 0x7
	// Bit mask of SRPIO0_7 field.
	SYSCON_STARTSRP0_SRPIO0_7_Msk = 0x80
	// Bit SRPIO0_7.
	SYSCON_STARTSRP0_SRPIO0_7 = 0x80
	// Position of SRPIO0_8 field.
	SYSCON_STARTSRP0_SRPIO0_8_Pos = 0x8
	// Bit mask of SRPIO0_8 field.
	SYSCON_STARTSRP0_SRPIO0_8_Msk = 0x100
	// Bit SRPIO0_8.
	SYSCON_STARTSRP0_SRPIO0_8 = 0x100
	// Position of SRPIO0_9 field.
	SYSCON_STARTSRP0_SRPIO0_9_Pos = 0x9
	// Bit mask of SRPIO0_9 field.
	SYSCON_STARTSRP0_SRPIO0_9_Msk = 0x200
	// Bit SRPIO0_9.
	SYSCON_STARTSRP0_SRPIO0_9 = 0x200
	// Position of SRPIO0_10 field.
	SYSCON_STARTSRP0_SRPIO0_10_Pos = 0xa
	// Bit mask of SRPIO0_10 field.
	SYSCON_STARTSRP0_SRPIO0_10_Msk = 0x400
	// Bit SRPIO0_10.
	SYSCON_STARTSRP0_SRPIO0_10 = 0x400
	// Position of SRPIO0_11 field.
	SYSCON_STARTSRP0_SRPIO0_11_Pos = 0xb
	// Bit mask of SRPIO0_11 field.
	SYSCON_STARTSRP0_SRPIO0_11_Msk = 0x800
	// Bit SRPIO0_11.
	SYSCON_STARTSRP0_SRPIO0_11 = 0x800
	// Position of SRPIO1_0 field.
	SYSCON_STARTSRP0_SRPIO1_0_Pos = 0xc
	// Bit mask of SRPIO1_0 field.
	SYSCON_STARTSRP0_SRPIO1_0_Msk = 0x1000
	// Bit SRPIO1_0.
	SYSCON_STARTSRP0_SRPIO1_0 = 0x1000
	// Position of SRPIO1_1 field.
	SYSCON_STARTSRP0_SRPIO1_1_Pos = 0xd
	// Bit mask of SRPIO1_1 field.
	SYSCON_STARTSRP0_SRPIO1_1_Msk = 0x2000
	// Bit SRPIO1_1.
	SYSCON_STARTSRP0_SRPIO1_1 = 0x2000
	// Position of SRPIO1_2 field.
	SYSCON_STARTSRP0_SRPIO1_2_Pos = 0xe
	// Bit mask of SRPIO1_2 field.
	SYSCON_STARTSRP0_SRPIO1_2_Msk = 0x4000
	// Bit SRPIO1_2.
	SYSCON_STARTSRP0_SRPIO1_2 = 0x4000
	// Position of SRPIO1_3 field.
	SYSCON_STARTSRP0_SRPIO1_3_Pos = 0xf
	// Bit mask of SRPIO1_3 field.
	SYSCON_STARTSRP0_SRPIO1_3_Msk = 0x8000
	// Bit SRPIO1_3.
	SYSCON_STARTSRP0_SRPIO1_3 = 0x8000
	// Position of SRPIO1_4 field.
	SYSCON_STARTSRP0_SRPIO1_4_Pos = 0x10
	// Bit mask of SRPIO1_4 field.
	SYSCON_STARTSRP0_SRPIO1_4_Msk = 0x10000
	// Bit SRPIO1_4.
	SYSCON_STARTSRP0_SRPIO1_4 = 0x10000
	// Position of SRPIO1_5 field.
	SYSCON_STARTSRP0_SRPIO1_5_Pos = 0x11
	// Bit mask of SRPIO1_5 field.
	SYSCON_STARTSRP0_SRPIO1_5_Msk = 0x20000
	// Bit SRPIO1_5.
	SYSCON_STARTSRP0_SRPIO1_5 = 0x20000
	// Position of SRPIO1_6 field.
	SYSCON_STARTSRP0_SRPIO1_6_Pos = 0x12
	// Bit mask of SRPIO1_6 field.
	SYSCON_STARTSRP0_SRPIO1_6_Msk = 0x40000
	// Bit SRPIO1_6.
	SYSCON_STARTSRP0_SRPIO1_6 = 0x40000
	// Position of SRPIO1_7 field.
	SYSCON_STARTSRP0_SRPIO1_7_Pos = 0x13
	// Bit mask of SRPIO1_7 field.
	SYSCON_STARTSRP0_SRPIO1_7_Msk = 0x80000
	// Bit SRPIO1_7.
	SYSCON_STARTSRP0_SRPIO1_7 = 0x80000
	// Position of SRPIO1_8 field.
	SYSCON_STARTSRP0_SRPIO1_8_Pos = 0x14
	// Bit mask of SRPIO1_8 field.
	SYSCON_STARTSRP0_SRPIO1_8_Msk = 0x100000
	// Bit SRPIO1_8.
	SYSCON_STARTSRP0_SRPIO1_8 = 0x100000
	// Position of SRPIO1_9 field.
	SYSCON_STARTSRP0_SRPIO1_9_Pos = 0x15
	// Bit mask of SRPIO1_9 field.
	SYSCON_STARTSRP0_SRPIO1_9_Msk = 0x200000
	// Bit SRPIO1_9.
	SYSCON_STARTSRP0_SRPIO1_9 = 0x200000
	// Position of SRPIO1_10 field.
	SYSCON_STARTSRP0_SRPIO1_10_Pos = 0x16
	// Bit mask of SRPIO1_10 field.
	SYSCON_STARTSRP0_SRPIO1_10_Msk = 0x400000
	// Bit SRPIO1_10.
	SYSCON_STARTSRP0_SRPIO1_10 = 0x400000
	// Position of SRPIO1_11 field.
	SYSCON_STARTSRP0_SRPIO1_11_Pos = 0x17
	// Bit mask of SRPIO1_11 field.
	SYSCON_STARTSRP0_SRPIO1_11_Msk = 0x800000
	// Bit SRPIO1_11.
	SYSCON_STARTSRP0_SRPIO1_11 = 0x800000
	// Position of SRPIO2_0 field.
	SYSCON_STARTSRP0_SRPIO2_0_Pos = 0x18
	// Bit mask of SRPIO2_0 field.
	SYSCON_STARTSRP0_SRPIO2_0_Msk = 0x1000000
	// Bit SRPIO2_0.
	SYSCON_STARTSRP0_SRPIO2_0 = 0x1000000
	// Position of SRPIO2_1 field.
	SYSCON_STARTSRP0_SRPIO2_1_Pos = 0x19
	// Bit mask of SRPIO2_1 field.
	SYSCON_STARTSRP0_SRPIO2_1_Msk = 0x2000000
	// Bit SRPIO2_1.
	SYSCON_STARTSRP0_SRPIO2_1 = 0x2000000
	// Position of SRPIO2_2 field.
	SYSCON_STARTSRP0_SRPIO2_2_Pos = 0x1a
	// Bit mask of SRPIO2_2 field.
	SYSCON_STARTSRP0_SRPIO2_2_Msk = 0x4000000
	// Bit SRPIO2_2.
	SYSCON_STARTSRP0_SRPIO2_2 = 0x4000000
	// Position of SRPIO2_3 field.
	SYSCON_STARTSRP0_SRPIO2_3_Pos = 0x1b
	// Bit mask of SRPIO2_3 field.
	SYSCON_STARTSRP0_SRPIO2_3_Msk = 0x8000000
	// Bit SRPIO2_3.
	SYSCON_STARTSRP0_SRPIO2_3 = 0x8000000
	// Position of SRPIO2_4 field.
	SYSCON_STARTSRP0_SRPIO2_4_Pos = 0x1c
	// Bit mask of SRPIO2_4 field.
	SYSCON_STARTSRP0_SRPIO2_4_Msk = 0x10000000
	// Bit SRPIO2_4.
	SYSCON_STARTSRP0_SRPIO2_4 = 0x10000000
	// Position of SRPIO2_5 field.
	SYSCON_STARTSRP0_SRPIO2_5_Pos = 0x1d
	// Bit mask of SRPIO2_5 field.
	SYSCON_STARTSRP0_SRPIO2_5_Msk = 0x20000000
	// Bit SRPIO2_5.
	SYSCON_STARTSRP0_SRPIO2_5 = 0x20000000
	// Position of SRPIO2_6 field.
	SYSCON_STARTSRP0_SRPIO2_6_Pos = 0x1e
	// Bit mask of SRPIO2_6 field.
	SYSCON_STARTSRP0_SRPIO2_6_Msk = 0x40000000
	// Bit SRPIO2_6.
	SYSCON_STARTSRP0_SRPIO2_6 = 0x40000000
	// Position of SRPIO2_7 field.
	SYSCON_STARTSRP0_SRPIO2_7_Pos = 0x1f
	// Bit mask of SRPIO2_7 field.
	SYSCON_STARTSRP0_SRPIO2_7_Msk = 0x80000000
	// Bit SRPIO2_7.
	SYSCON_STARTSRP0_SRPIO2_7 = 0x80000000

	// STARTAPRP1: Start logic edge control register 1; top 8 interrupts
	// Position of APRPIO2_8 field.
	SYSCON_STARTAPRP1_APRPIO2_8_Pos = 0x0
	// Bit mask of APRPIO2_8 field.
	SYSCON_STARTAPRP1_APRPIO2_8_Msk = 0x1
	// Bit APRPIO2_8.
	SYSCON_STARTAPRP1_APRPIO2_8 = 0x1
	// Position of APRPIO2_9 field.
	SYSCON_STARTAPRP1_APRPIO2_9_Pos = 0x1
	// Bit mask of APRPIO2_9 field.
	SYSCON_STARTAPRP1_APRPIO2_9_Msk = 0x2
	// Bit APRPIO2_9.
	SYSCON_STARTAPRP1_APRPIO2_9 = 0x2
	// Position of APRPIO2_10 field.
	SYSCON_STARTAPRP1_APRPIO2_10_Pos = 0x2
	// Bit mask of APRPIO2_10 field.
	SYSCON_STARTAPRP1_APRPIO2_10_Msk = 0x4
	// Bit APRPIO2_10.
	SYSCON_STARTAPRP1_APRPIO2_10 = 0x4
	// Position of APRPIO2_11 field.
	SYSCON_STARTAPRP1_APRPIO2_11_Pos = 0x3
	// Bit mask of APRPIO2_11 field.
	SYSCON_STARTAPRP1_APRPIO2_11_Msk = 0x8
	// Bit APRPIO2_11.
	SYSCON_STARTAPRP1_APRPIO2_11 = 0x8
	// Position of APRPIO3_0 field.
	SYSCON_STARTAPRP1_APRPIO3_0_Pos = 0x4
	// Bit mask of APRPIO3_0 field.
	SYSCON_STARTAPRP1_APRPIO3_0_Msk = 0x10
	// Bit APRPIO3_0.
	SYSCON_STARTAPRP1_APRPIO3_0 = 0x10
	// Position of APRPIO3_1 field.
	SYSCON_STARTAPRP1_APRPIO3_1_Pos = 0x5
	// Bit mask of APRPIO3_1 field.
	SYSCON_STARTAPRP1_APRPIO3_1_Msk = 0x20
	// Bit APRPIO3_1.
	SYSCON_STARTAPRP1_APRPIO3_1 = 0x20
	// Position of APRPIO3_2 field.
	SYSCON_STARTAPRP1_APRPIO3_2_Pos = 0x6
	// Bit mask of APRPIO3_2 field.
	SYSCON_STARTAPRP1_APRPIO3_2_Msk = 0x40
	// Bit APRPIO3_2.
	SYSCON_STARTAPRP1_APRPIO3_2 = 0x40
	// Position of APRPIO3_3 field.
	SYSCON_STARTAPRP1_APRPIO3_3_Pos = 0x7
	// Bit mask of APRPIO3_3 field.
	SYSCON_STARTAPRP1_APRPIO3_3_Msk = 0x80
	// Bit APRPIO3_3.
	SYSCON_STARTAPRP1_APRPIO3_3 = 0x80
	// Position of RESERVED field.
	SYSCON_STARTAPRP1_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_STARTAPRP1_RESERVED_Msk = 0xffffff00

	// STARTERP1: Start logic signal enable register 1; top 8 interrupts
	// Position of ERPIO2_8 field.
	SYSCON_STARTERP1_ERPIO2_8_Pos = 0x0
	// Bit mask of ERPIO2_8 field.
	SYSCON_STARTERP1_ERPIO2_8_Msk = 0x1
	// Bit ERPIO2_8.
	SYSCON_STARTERP1_ERPIO2_8 = 0x1
	// Position of ERPIO2_9 field.
	SYSCON_STARTERP1_ERPIO2_9_Pos = 0x1
	// Bit mask of ERPIO2_9 field.
	SYSCON_STARTERP1_ERPIO2_9_Msk = 0x2
	// Bit ERPIO2_9.
	SYSCON_STARTERP1_ERPIO2_9 = 0x2
	// Position of ERPIO2_10 field.
	SYSCON_STARTERP1_ERPIO2_10_Pos = 0x2
	// Bit mask of ERPIO2_10 field.
	SYSCON_STARTERP1_ERPIO2_10_Msk = 0x4
	// Bit ERPIO2_10.
	SYSCON_STARTERP1_ERPIO2_10 = 0x4
	// Position of ERPIO2_11 field.
	SYSCON_STARTERP1_ERPIO2_11_Pos = 0x3
	// Bit mask of ERPIO2_11 field.
	SYSCON_STARTERP1_ERPIO2_11_Msk = 0x8
	// Bit ERPIO2_11.
	SYSCON_STARTERP1_ERPIO2_11 = 0x8
	// Position of ERPIO3_0 field.
	SYSCON_STARTERP1_ERPIO3_0_Pos = 0x4
	// Bit mask of ERPIO3_0 field.
	SYSCON_STARTERP1_ERPIO3_0_Msk = 0x10
	// Bit ERPIO3_0.
	SYSCON_STARTERP1_ERPIO3_0 = 0x10
	// Position of ERPIO3_1 field.
	SYSCON_STARTERP1_ERPIO3_1_Pos = 0x5
	// Bit mask of ERPIO3_1 field.
	SYSCON_STARTERP1_ERPIO3_1_Msk = 0x20
	// Bit ERPIO3_1.
	SYSCON_STARTERP1_ERPIO3_1 = 0x20
	// Position of ERPIO3_2 field.
	SYSCON_STARTERP1_ERPIO3_2_Pos = 0x6
	// Bit mask of ERPIO3_2 field.
	SYSCON_STARTERP1_ERPIO3_2_Msk = 0x40
	// Bit ERPIO3_2.
	SYSCON_STARTERP1_ERPIO3_2 = 0x40
	// Position of ERPIO3_3 field.
	SYSCON_STARTERP1_ERPIO3_3_Pos = 0x7
	// Bit mask of ERPIO3_3 field.
	SYSCON_STARTERP1_ERPIO3_3_Msk = 0x80
	// Bit ERPIO3_3.
	SYSCON_STARTERP1_ERPIO3_3 = 0x80
	// Position of RESERVED field.
	SYSCON_STARTERP1_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_STARTERP1_RESERVED_Msk = 0xffffff00

	// STARTRSRP1CLR: Start logic reset register 1; top 8 interrupts
	// Position of RSRPIO2_8 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_8_Pos = 0x0
	// Bit mask of RSRPIO2_8 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_8_Msk = 0x1
	// Bit RSRPIO2_8.
	SYSCON_STARTRSRP1CLR_RSRPIO2_8 = 0x1
	// Position of RSRPIO2_9 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_9_Pos = 0x1
	// Bit mask of RSRPIO2_9 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_9_Msk = 0x2
	// Bit RSRPIO2_9.
	SYSCON_STARTRSRP1CLR_RSRPIO2_9 = 0x2
	// Position of RSRPIO2_10 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_10_Pos = 0x2
	// Bit mask of RSRPIO2_10 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_10_Msk = 0x4
	// Bit RSRPIO2_10.
	SYSCON_STARTRSRP1CLR_RSRPIO2_10 = 0x4
	// Position of RSRPIO2_11 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_11_Pos = 0x3
	// Bit mask of RSRPIO2_11 field.
	SYSCON_STARTRSRP1CLR_RSRPIO2_11_Msk = 0x8
	// Bit RSRPIO2_11.
	SYSCON_STARTRSRP1CLR_RSRPIO2_11 = 0x8
	// Position of RSRPIO3_0 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_0_Pos = 0x4
	// Bit mask of RSRPIO3_0 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_0_Msk = 0x10
	// Bit RSRPIO3_0.
	SYSCON_STARTRSRP1CLR_RSRPIO3_0 = 0x10
	// Position of RSRPIO3_1 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_1_Pos = 0x5
	// Bit mask of RSRPIO3_1 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_1_Msk = 0x20
	// Bit RSRPIO3_1.
	SYSCON_STARTRSRP1CLR_RSRPIO3_1 = 0x20
	// Position of RSRPIO3_2 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_2_Pos = 0x6
	// Bit mask of RSRPIO3_2 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_2_Msk = 0x40
	// Bit RSRPIO3_2.
	SYSCON_STARTRSRP1CLR_RSRPIO3_2 = 0x40
	// Position of RSRPIO3_3 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_3_Pos = 0x7
	// Bit mask of RSRPIO3_3 field.
	SYSCON_STARTRSRP1CLR_RSRPIO3_3_Msk = 0x80
	// Bit RSRPIO3_3.
	SYSCON_STARTRSRP1CLR_RSRPIO3_3 = 0x80
	// Position of RESERVED field.
	SYSCON_STARTRSRP1CLR_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_STARTRSRP1CLR_RESERVED_Msk = 0xffffff00

	// STARTSRP1: Start logic status register 1; top 8 interrupts
	// Position of SRPIO2_8 field.
	SYSCON_STARTSRP1_SRPIO2_8_Pos = 0x0
	// Bit mask of SRPIO2_8 field.
	SYSCON_STARTSRP1_SRPIO2_8_Msk = 0x1
	// Bit SRPIO2_8.
	SYSCON_STARTSRP1_SRPIO2_8 = 0x1
	// Position of SRPIO2_9 field.
	SYSCON_STARTSRP1_SRPIO2_9_Pos = 0x1
	// Bit mask of SRPIO2_9 field.
	SYSCON_STARTSRP1_SRPIO2_9_Msk = 0x2
	// Bit SRPIO2_9.
	SYSCON_STARTSRP1_SRPIO2_9 = 0x2
	// Position of SRPIO2_10 field.
	SYSCON_STARTSRP1_SRPIO2_10_Pos = 0x2
	// Bit mask of SRPIO2_10 field.
	SYSCON_STARTSRP1_SRPIO2_10_Msk = 0x4
	// Bit SRPIO2_10.
	SYSCON_STARTSRP1_SRPIO2_10 = 0x4
	// Position of SRPIO2_11 field.
	SYSCON_STARTSRP1_SRPIO2_11_Pos = 0x3
	// Bit mask of SRPIO2_11 field.
	SYSCON_STARTSRP1_SRPIO2_11_Msk = 0x8
	// Bit SRPIO2_11.
	SYSCON_STARTSRP1_SRPIO2_11 = 0x8
	// Position of SRPIO3_0 field.
	SYSCON_STARTSRP1_SRPIO3_0_Pos = 0x4
	// Bit mask of SRPIO3_0 field.
	SYSCON_STARTSRP1_SRPIO3_0_Msk = 0x10
	// Bit SRPIO3_0.
	SYSCON_STARTSRP1_SRPIO3_0 = 0x10
	// Position of SRPIO3_1 field.
	SYSCON_STARTSRP1_SRPIO3_1_Pos = 0x5
	// Bit mask of SRPIO3_1 field.
	SYSCON_STARTSRP1_SRPIO3_1_Msk = 0x20
	// Bit SRPIO3_1.
	SYSCON_STARTSRP1_SRPIO3_1 = 0x20
	// Position of SRPIO3_2 field.
	SYSCON_STARTSRP1_SRPIO3_2_Pos = 0x6
	// Bit mask of SRPIO3_2 field.
	SYSCON_STARTSRP1_SRPIO3_2_Msk = 0x40
	// Bit SRPIO3_2.
	SYSCON_STARTSRP1_SRPIO3_2 = 0x40
	// Position of SRPIO3_3 field.
	SYSCON_STARTSRP1_SRPIO3_3_Pos = 0x7
	// Bit mask of SRPIO3_3 field.
	SYSCON_STARTSRP1_SRPIO3_3_Msk = 0x80
	// Bit SRPIO3_3.
	SYSCON_STARTSRP1_SRPIO3_3 = 0x80
	// Position of RESERVED field.
	SYSCON_STARTSRP1_RESERVED_Pos = 0x8
	// Bit mask of RESERVED field.
	SYSCON_STARTSRP1_RESERVED_Msk = 0xffffff00

	// PDSLEEPCFG: Power-down states in Deep-sleep mode
	// Position of FIXEDVAL0 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL0_Pos = 0x0
	// Bit mask of FIXEDVAL0 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL0_Msk = 0x7
	// Position of BOD_PD field.
	SYSCON_PDSLEEPCFG_BOD_PD_Pos = 0x3
	// Bit mask of BOD_PD field.
	SYSCON_PDSLEEPCFG_BOD_PD_Msk = 0x8
	// Bit BOD_PD.
	SYSCON_PDSLEEPCFG_BOD_PD = 0x8
	// Powered
	SYSCON_PDSLEEPCFG_BOD_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDSLEEPCFG_BOD_PD_POWERED_DOWN = 0x1
	// Position of FIXEDVAL1 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL1_Pos = 0x4
	// Bit mask of FIXEDVAL1 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL1_Msk = 0x30
	// Position of WDTOSC_PD field.
	SYSCON_PDSLEEPCFG_WDTOSC_PD_Pos = 0x6
	// Bit mask of WDTOSC_PD field.
	SYSCON_PDSLEEPCFG_WDTOSC_PD_Msk = 0x40
	// Bit WDTOSC_PD.
	SYSCON_PDSLEEPCFG_WDTOSC_PD = 0x40
	// Powered
	SYSCON_PDSLEEPCFG_WDTOSC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDSLEEPCFG_WDTOSC_PD_POWERED_DOWN = 0x1
	// Position of FIXEDVAL2 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL2_Pos = 0x7
	// Bit mask of FIXEDVAL2 field.
	SYSCON_PDSLEEPCFG_FIXEDVAL2_Msk = 0xf80
	// Position of RESERVED field.
	SYSCON_PDSLEEPCFG_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	SYSCON_PDSLEEPCFG_RESERVED_Msk = 0xfffff000

	// PDAWAKECFG: Power-down states after wake-up from Deep-sleep mode
	// Position of IRCOUT_PD field.
	SYSCON_PDAWAKECFG_IRCOUT_PD_Pos = 0x0
	// Bit mask of IRCOUT_PD field.
	SYSCON_PDAWAKECFG_IRCOUT_PD_Msk = 0x1
	// Bit IRCOUT_PD.
	SYSCON_PDAWAKECFG_IRCOUT_PD = 0x1
	// Powered
	SYSCON_PDAWAKECFG_IRCOUT_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_IRCOUT_PD_POWERED_DOWN = 0x1
	// Position of IRC_PD field.
	SYSCON_PDAWAKECFG_IRC_PD_Pos = 0x1
	// Bit mask of IRC_PD field.
	SYSCON_PDAWAKECFG_IRC_PD_Msk = 0x2
	// Bit IRC_PD.
	SYSCON_PDAWAKECFG_IRC_PD = 0x2
	// Powered
	SYSCON_PDAWAKECFG_IRC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_IRC_PD_POWERED_DOWN = 0x1
	// Position of FLASH_PD field.
	SYSCON_PDAWAKECFG_FLASH_PD_Pos = 0x2
	// Bit mask of FLASH_PD field.
	SYSCON_PDAWAKECFG_FLASH_PD_Msk = 0x4
	// Bit FLASH_PD.
	SYSCON_PDAWAKECFG_FLASH_PD = 0x4
	// Powered
	SYSCON_PDAWAKECFG_FLASH_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_FLASH_PD_POWERED_DOWN = 0x1
	// Position of BOD_PD field.
	SYSCON_PDAWAKECFG_BOD_PD_Pos = 0x3
	// Bit mask of BOD_PD field.
	SYSCON_PDAWAKECFG_BOD_PD_Msk = 0x8
	// Bit BOD_PD.
	SYSCON_PDAWAKECFG_BOD_PD = 0x8
	// Powered
	SYSCON_PDAWAKECFG_BOD_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_BOD_PD_POWERED_DOWN = 0x1
	// Position of ADC_PD field.
	SYSCON_PDAWAKECFG_ADC_PD_Pos = 0x4
	// Bit mask of ADC_PD field.
	SYSCON_PDAWAKECFG_ADC_PD_Msk = 0x10
	// Bit ADC_PD.
	SYSCON_PDAWAKECFG_ADC_PD = 0x10
	// Powered
	SYSCON_PDAWAKECFG_ADC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_ADC_PD_POWERED_DOWN = 0x1
	// Position of SYSOSC_PD field.
	SYSCON_PDAWAKECFG_SYSOSC_PD_Pos = 0x5
	// Bit mask of SYSOSC_PD field.
	SYSCON_PDAWAKECFG_SYSOSC_PD_Msk = 0x20
	// Bit SYSOSC_PD.
	SYSCON_PDAWAKECFG_SYSOSC_PD = 0x20
	// Powered
	SYSCON_PDAWAKECFG_SYSOSC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_SYSOSC_PD_POWERED_DOWN = 0x1
	// Position of WDTOSC_PD field.
	SYSCON_PDAWAKECFG_WDTOSC_PD_Pos = 0x6
	// Bit mask of WDTOSC_PD field.
	SYSCON_PDAWAKECFG_WDTOSC_PD_Msk = 0x40
	// Bit WDTOSC_PD.
	SYSCON_PDAWAKECFG_WDTOSC_PD = 0x40
	// Powered
	SYSCON_PDAWAKECFG_WDTOSC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_WDTOSC_PD_POWERED_DOWN = 0x1
	// Position of SYSPLL_PD field.
	SYSCON_PDAWAKECFG_SYSPLL_PD_Pos = 0x7
	// Bit mask of SYSPLL_PD field.
	SYSCON_PDAWAKECFG_SYSPLL_PD_Msk = 0x80
	// Bit SYSPLL_PD.
	SYSCON_PDAWAKECFG_SYSPLL_PD = 0x80
	// Powered
	SYSCON_PDAWAKECFG_SYSPLL_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_SYSPLL_PD_POWERED_DOWN = 0x1
	// Position of USBPLL_PD field.
	SYSCON_PDAWAKECFG_USBPLL_PD_Pos = 0x8
	// Bit mask of USBPLL_PD field.
	SYSCON_PDAWAKECFG_USBPLL_PD_Msk = 0x100
	// Bit USBPLL_PD.
	SYSCON_PDAWAKECFG_USBPLL_PD = 0x100
	// Powered
	SYSCON_PDAWAKECFG_USBPLL_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDAWAKECFG_USBPLL_PD_POWERED_DOWN = 0x1
	// Position of FIXEDVAL0 field.
	SYSCON_PDAWAKECFG_FIXEDVAL0_Pos = 0x9
	// Bit mask of FIXEDVAL0 field.
	SYSCON_PDAWAKECFG_FIXEDVAL0_Msk = 0x200
	// Bit FIXEDVAL0.
	SYSCON_PDAWAKECFG_FIXEDVAL0 = 0x200
	// Position of USBPAD_PD field.
	SYSCON_PDAWAKECFG_USBPAD_PD_Pos = 0xa
	// Bit mask of USBPAD_PD field.
	SYSCON_PDAWAKECFG_USBPAD_PD_Msk = 0x400
	// Bit USBPAD_PD.
	SYSCON_PDAWAKECFG_USBPAD_PD = 0x400
	// USB PHY powered
	SYSCON_PDAWAKECFG_USBPAD_PD_USB_PHY_POWERED = 0x0
	// USB PHY powered down
	SYSCON_PDAWAKECFG_USBPAD_PD_USB_PHY_POWERED_DOWN = 0x1
	// Position of FIXEDVAL1 field.
	SYSCON_PDAWAKECFG_FIXEDVAL1_Pos = 0xb
	// Bit mask of FIXEDVAL1 field.
	SYSCON_PDAWAKECFG_FIXEDVAL1_Msk = 0x800
	// Bit FIXEDVAL1.
	SYSCON_PDAWAKECFG_FIXEDVAL1 = 0x800
	// Position of FIXEDVAL2 field.
	SYSCON_PDAWAKECFG_FIXEDVAL2_Pos = 0xc
	// Bit mask of FIXEDVAL2 field.
	SYSCON_PDAWAKECFG_FIXEDVAL2_Msk = 0x1000
	// Bit FIXEDVAL2.
	SYSCON_PDAWAKECFG_FIXEDVAL2 = 0x1000
	// Position of FIXEDVAL3 field.
	SYSCON_PDAWAKECFG_FIXEDVAL3_Pos = 0xd
	// Bit mask of FIXEDVAL3 field.
	SYSCON_PDAWAKECFG_FIXEDVAL3_Msk = 0xe000
	// Position of RESERVED field.
	SYSCON_PDAWAKECFG_RESERVED_Pos = 0x10
	// Bit mask of RESERVED field.
	SYSCON_PDAWAKECFG_RESERVED_Msk = 0xffff0000

	// PDRUNCFG: Power-down configuration register
	// Position of IRCOUT_PD field.
	SYSCON_PDRUNCFG_IRCOUT_PD_Pos = 0x0
	// Bit mask of IRCOUT_PD field.
	SYSCON_PDRUNCFG_IRCOUT_PD_Msk = 0x1
	// Bit IRCOUT_PD.
	SYSCON_PDRUNCFG_IRCOUT_PD = 0x1
	// Powered
	SYSCON_PDRUNCFG_IRCOUT_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_IRCOUT_PD_POWERED_DOWN = 0x1
	// Position of IRC_PD field.
	SYSCON_PDRUNCFG_IRC_PD_Pos = 0x1
	// Bit mask of IRC_PD field.
	SYSCON_PDRUNCFG_IRC_PD_Msk = 0x2
	// Bit IRC_PD.
	SYSCON_PDRUNCFG_IRC_PD = 0x2
	// Powered
	SYSCON_PDRUNCFG_IRC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_IRC_PD_POWERED_DOWN = 0x1
	// Position of FLASH_PD field.
	SYSCON_PDRUNCFG_FLASH_PD_Pos = 0x2
	// Bit mask of FLASH_PD field.
	SYSCON_PDRUNCFG_FLASH_PD_Msk = 0x4
	// Bit FLASH_PD.
	SYSCON_PDRUNCFG_FLASH_PD = 0x4
	// Powered
	SYSCON_PDRUNCFG_FLASH_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_FLASH_PD_POWERED_DOWN = 0x1
	// Position of BOD_PD field.
	SYSCON_PDRUNCFG_BOD_PD_Pos = 0x3
	// Bit mask of BOD_PD field.
	SYSCON_PDRUNCFG_BOD_PD_Msk = 0x8
	// Bit BOD_PD.
	SYSCON_PDRUNCFG_BOD_PD = 0x8
	// Powered
	SYSCON_PDRUNCFG_BOD_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_BOD_PD_POWERED_DOWN = 0x1
	// Position of ADC_PD field.
	SYSCON_PDRUNCFG_ADC_PD_Pos = 0x4
	// Bit mask of ADC_PD field.
	SYSCON_PDRUNCFG_ADC_PD_Msk = 0x10
	// Bit ADC_PD.
	SYSCON_PDRUNCFG_ADC_PD = 0x10
	// Powered
	SYSCON_PDRUNCFG_ADC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_ADC_PD_POWERED_DOWN = 0x1
	// Position of SYSOSC_PD field.
	SYSCON_PDRUNCFG_SYSOSC_PD_Pos = 0x5
	// Bit mask of SYSOSC_PD field.
	SYSCON_PDRUNCFG_SYSOSC_PD_Msk = 0x20
	// Bit SYSOSC_PD.
	SYSCON_PDRUNCFG_SYSOSC_PD = 0x20
	// Powered
	SYSCON_PDRUNCFG_SYSOSC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_SYSOSC_PD_POWERED_DOWN = 0x1
	// Position of WDTOSC_PD field.
	SYSCON_PDRUNCFG_WDTOSC_PD_Pos = 0x6
	// Bit mask of WDTOSC_PD field.
	SYSCON_PDRUNCFG_WDTOSC_PD_Msk = 0x40
	// Bit WDTOSC_PD.
	SYSCON_PDRUNCFG_WDTOSC_PD = 0x40
	// Powered
	SYSCON_PDRUNCFG_WDTOSC_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_WDTOSC_PD_POWERED_DOWN = 0x1
	// Position of SYSPLL_PD field.
	SYSCON_PDRUNCFG_SYSPLL_PD_Pos = 0x7
	// Bit mask of SYSPLL_PD field.
	SYSCON_PDRUNCFG_SYSPLL_PD_Msk = 0x80
	// Bit SYSPLL_PD.
	SYSCON_PDRUNCFG_SYSPLL_PD = 0x80
	// Powered
	SYSCON_PDRUNCFG_SYSPLL_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_SYSPLL_PD_POWERED_DOWN = 0x1
	// Position of USBPLL_PD field.
	SYSCON_PDRUNCFG_USBPLL_PD_Pos = 0x8
	// Bit mask of USBPLL_PD field.
	SYSCON_PDRUNCFG_USBPLL_PD_Msk = 0x100
	// Bit USBPLL_PD.
	SYSCON_PDRUNCFG_USBPLL_PD = 0x100
	// Powered
	SYSCON_PDRUNCFG_USBPLL_PD_POWERED = 0x0
	// Powered down
	SYSCON_PDRUNCFG_USBPLL_PD_POWERED_DOWN = 0x1
	// Position of FIXEDVAL0 field.
	SYSCON_PDRUNCFG_FIXEDVAL0_Pos = 0x9
	// Bit mask of FIXEDVAL0 field.
	SYSCON_PDRUNCFG_FIXEDVAL0_Msk = 0x200
	// Bit FIXEDVAL0.
	SYSCON_PDRUNCFG_FIXEDVAL0 = 0x200
	// Position of USBPAD_PD field.
	SYSCON_PDRUNCFG_USBPAD_PD_Pos = 0xa
	// Bit mask of USBPAD_PD field.
	SYSCON_PDRUNCFG_USBPAD_PD_Msk = 0x400
	// Bit USBPAD_PD.
	SYSCON_PDRUNCFG_USBPAD_PD = 0x400
	// USB PHY powered
	SYSCON_PDRUNCFG_USBPAD_PD_USB_PHY_POWERED = 0x0
	// USB PHY powered down (suspend mode)
	SYSCON_PDRUNCFG_USBPAD_PD_USB_PHY_POWERED_DOWN = 0x1
	// Position of FIXEDVAL1 field.
	SYSCON_PDRUNCFG_FIXEDVAL1_Pos = 0xb
	// Bit mask of FIXEDVAL1 field.
	SYSCON_PDRUNCFG_FIXEDVAL1_Msk = 0x800
	// Bit FIXEDVAL1.
	SYSCON_PDRUNCFG_FIXEDVAL1 = 0x800
	// Position of RESERVED field.
	SYSCON_PDRUNCFG_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	SYSCON_PDRUNCFG_RESERVED_Msk = 0xfffff000

	// DEVICE_ID: Device ID
	// Position of DEVICEID field.
	SYSCON_DEVICE_ID_DEVICEID_Pos = 0x0
	// Bit mask of DEVICEID field.
	SYSCON_DEVICE_ID_DEVICEID_Msk = 0xffffffff
)

// Bitfields for GPIO0: Product name title=UM10375 Chapter title=LPC13xx General Purpose I/O (GPIO) Modification date=4/20/2011 Major revision=2 Minor revision=1
const (
	// DATA: Port n data register for pins PIOn_0 to PIOn_11
	// Position of DATA0 field.
	GPIO_DATA_DATA0_Pos = 0x0
	// Bit mask of DATA0 field.
	GPIO_DATA_DATA0_Msk = 0x1
	// Bit DATA0.
	GPIO_DATA_DATA0 = 0x1
	// Position of DATA1 field.
	GPIO_DATA_DATA1_Pos = 0x1
	// Bit mask of DATA1 field.
	GPIO_DATA_DATA1_Msk = 0x2
	// Bit DATA1.
	GPIO_DATA_DATA1 = 0x2
	// Position of DATA2 field.
	GPIO_DATA_DATA2_Pos = 0x2
	// Bit mask of DATA2 field.
	GPIO_DATA_DATA2_Msk = 0x4
	// Bit DATA2.
	GPIO_DATA_DATA2 = 0x4
	// Position of DATA3 field.
	GPIO_DATA_DATA3_Pos = 0x3
	// Bit mask of DATA3 field.
	GPIO_DATA_DATA3_Msk = 0x8
	// Bit DATA3.
	GPIO_DATA_DATA3 = 0x8
	// Position of DATA4 field.
	GPIO_DATA_DATA4_Pos = 0x4
	// Bit mask of DATA4 field.
	GPIO_DATA_DATA4_Msk = 0x10
	// Bit DATA4.
	GPIO_DATA_DATA4 = 0x10
	// Position of DATA5 field.
	GPIO_DATA_DATA5_Pos = 0x5
	// Bit mask of DATA5 field.
	GPIO_DATA_DATA5_Msk = 0x20
	// Bit DATA5.
	GPIO_DATA_DATA5 = 0x20
	// Position of DATA6 field.
	GPIO_DATA_DATA6_Pos = 0x6
	// Bit mask of DATA6 field.
	GPIO_DATA_DATA6_Msk = 0x40
	// Bit DATA6.
	GPIO_DATA_DATA6 = 0x40
	// Position of DATA7 field.
	GPIO_DATA_DATA7_Pos = 0x7
	// Bit mask of DATA7 field.
	GPIO_DATA_DATA7_Msk = 0x80
	// Bit DATA7.
	GPIO_DATA_DATA7 = 0x80
	// Position of DATA8 field.
	GPIO_DATA_DATA8_Pos = 0x8
	// Bit mask of DATA8 field.
	GPIO_DATA_DATA8_Msk = 0x100
	// Bit DATA8.
	GPIO_DATA_DATA8 = 0x100
	// Position of DATA9 field.
	GPIO_DATA_DATA9_Pos = 0x9
	// Bit mask of DATA9 field.
	GPIO_DATA_DATA9_Msk = 0x200
	// Bit DATA9.
	GPIO_DATA_DATA9 = 0x200
	// Position of DATA10 field.
	GPIO_DATA_DATA10_Pos = 0xa
	// Bit mask of DATA10 field.
	GPIO_DATA_DATA10_Msk = 0x400
	// Bit DATA10.
	GPIO_DATA_DATA10 = 0x400
	// Position of DATA11 field.
	GPIO_DATA_DATA11_Pos = 0xb
	// Bit mask of DATA11 field.
	GPIO_DATA_DATA11_Msk = 0x800
	// Bit DATA11.
	GPIO_DATA_DATA11 = 0x800
	// Position of RESERVED field.
	GPIO_DATA_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_DATA_RESERVED_Msk = 0xfffff000

	// DIR: Data direction register for port n
	// Position of IO0 field.
	GPIO_DIR_IO0_Pos = 0x0
	// Bit mask of IO0 field.
	GPIO_DIR_IO0_Msk = 0x1
	// Bit IO0.
	GPIO_DIR_IO0 = 0x1
	// Position of IO1 field.
	GPIO_DIR_IO1_Pos = 0x1
	// Bit mask of IO1 field.
	GPIO_DIR_IO1_Msk = 0x2
	// Bit IO1.
	GPIO_DIR_IO1 = 0x2
	// Position of IO2 field.
	GPIO_DIR_IO2_Pos = 0x2
	// Bit mask of IO2 field.
	GPIO_DIR_IO2_Msk = 0x4
	// Bit IO2.
	GPIO_DIR_IO2 = 0x4
	// Position of IO3 field.
	GPIO_DIR_IO3_Pos = 0x3
	// Bit mask of IO3 field.
	GPIO_DIR_IO3_Msk = 0x8
	// Bit IO3.
	GPIO_DIR_IO3 = 0x8
	// Position of IO4 field.
	GPIO_DIR_IO4_Pos = 0x4
	// Bit mask of IO4 field.
	GPIO_DIR_IO4_Msk = 0x10
	// Bit IO4.
	GPIO_DIR_IO4 = 0x10
	// Position of IO5 field.
	GPIO_DIR_IO5_Pos = 0x5
	// Bit mask of IO5 field.
	GPIO_DIR_IO5_Msk = 0x20
	// Bit IO5.
	GPIO_DIR_IO5 = 0x20
	// Position of IO6 field.
	GPIO_DIR_IO6_Pos = 0x6
	// Bit mask of IO6 field.
	GPIO_DIR_IO6_Msk = 0x40
	// Bit IO6.
	GPIO_DIR_IO6 = 0x40
	// Position of IO7 field.
	GPIO_DIR_IO7_Pos = 0x7
	// Bit mask of IO7 field.
	GPIO_DIR_IO7_Msk = 0x80
	// Bit IO7.
	GPIO_DIR_IO7 = 0x80
	// Position of IO8 field.
	GPIO_DIR_IO8_Pos = 0x8
	// Bit mask of IO8 field.
	GPIO_DIR_IO8_Msk = 0x100
	// Bit IO8.
	GPIO_DIR_IO8 = 0x100
	// Position of IO9 field.
	GPIO_DIR_IO9_Pos = 0x9
	// Bit mask of IO9 field.
	GPIO_DIR_IO9_Msk = 0x200
	// Bit IO9.
	GPIO_DIR_IO9 = 0x200
	// Position of IO10 field.
	GPIO_DIR_IO10_Pos = 0xa
	// Bit mask of IO10 field.
	GPIO_DIR_IO10_Msk = 0x400
	// Bit IO10.
	GPIO_DIR_IO10 = 0x400
	// Position of IO11 field.
	GPIO_DIR_IO11_Pos = 0xb
	// Bit mask of IO11 field.
	GPIO_DIR_IO11_Msk = 0x800
	// Bit IO11.
	GPIO_DIR_IO11 = 0x800
	// Position of RESERVED field.
	GPIO_DIR_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_DIR_RESERVED_Msk = 0xfffff000

	// IS: Interrupt sense register for port n
	// Position of ISENSE0 field.
	GPIO_IS_ISENSE0_Pos = 0x0
	// Bit mask of ISENSE0 field.
	GPIO_IS_ISENSE0_Msk = 0x1
	// Bit ISENSE0.
	GPIO_IS_ISENSE0 = 0x1
	// Position of ISENSE1 field.
	GPIO_IS_ISENSE1_Pos = 0x1
	// Bit mask of ISENSE1 field.
	GPIO_IS_ISENSE1_Msk = 0x2
	// Bit ISENSE1.
	GPIO_IS_ISENSE1 = 0x2
	// Position of ISENSE2 field.
	GPIO_IS_ISENSE2_Pos = 0x2
	// Bit mask of ISENSE2 field.
	GPIO_IS_ISENSE2_Msk = 0x4
	// Bit ISENSE2.
	GPIO_IS_ISENSE2 = 0x4
	// Position of ISENSE3 field.
	GPIO_IS_ISENSE3_Pos = 0x3
	// Bit mask of ISENSE3 field.
	GPIO_IS_ISENSE3_Msk = 0x8
	// Bit ISENSE3.
	GPIO_IS_ISENSE3 = 0x8
	// Position of ISENSE4 field.
	GPIO_IS_ISENSE4_Pos = 0x4
	// Bit mask of ISENSE4 field.
	GPIO_IS_ISENSE4_Msk = 0x10
	// Bit ISENSE4.
	GPIO_IS_ISENSE4 = 0x10
	// Position of ISENSE5 field.
	GPIO_IS_ISENSE5_Pos = 0x5
	// Bit mask of ISENSE5 field.
	GPIO_IS_ISENSE5_Msk = 0x20
	// Bit ISENSE5.
	GPIO_IS_ISENSE5 = 0x20
	// Position of ISENSE6 field.
	GPIO_IS_ISENSE6_Pos = 0x6
	// Bit mask of ISENSE6 field.
	GPIO_IS_ISENSE6_Msk = 0x40
	// Bit ISENSE6.
	GPIO_IS_ISENSE6 = 0x40
	// Position of ISENSE7 field.
	GPIO_IS_ISENSE7_Pos = 0x7
	// Bit mask of ISENSE7 field.
	GPIO_IS_ISENSE7_Msk = 0x80
	// Bit ISENSE7.
	GPIO_IS_ISENSE7 = 0x80
	// Position of ISENSE8 field.
	GPIO_IS_ISENSE8_Pos = 0x8
	// Bit mask of ISENSE8 field.
	GPIO_IS_ISENSE8_Msk = 0x100
	// Bit ISENSE8.
	GPIO_IS_ISENSE8 = 0x100
	// Position of ISENSE9 field.
	GPIO_IS_ISENSE9_Pos = 0x9
	// Bit mask of ISENSE9 field.
	GPIO_IS_ISENSE9_Msk = 0x200
	// Bit ISENSE9.
	GPIO_IS_ISENSE9 = 0x200
	// Position of ISENSE10 field.
	GPIO_IS_ISENSE10_Pos = 0xa
	// Bit mask of ISENSE10 field.
	GPIO_IS_ISENSE10_Msk = 0x400
	// Bit ISENSE10.
	GPIO_IS_ISENSE10 = 0x400
	// Position of ISENSE11 field.
	GPIO_IS_ISENSE11_Pos = 0xb
	// Bit mask of ISENSE11 field.
	GPIO_IS_ISENSE11_Msk = 0x800
	// Bit ISENSE11.
	GPIO_IS_ISENSE11 = 0x800
	// Position of RESERVED field.
	GPIO_IS_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_IS_RESERVED_Msk = 0xfffff000

	// IBE: Interrupt both edges register for port n
	// Position of IBE0 field.
	GPIO_IBE_IBE0_Pos = 0x0
	// Bit mask of IBE0 field.
	GPIO_IBE_IBE0_Msk = 0x1
	// Bit IBE0.
	GPIO_IBE_IBE0 = 0x1
	// Position of IBE1 field.
	GPIO_IBE_IBE1_Pos = 0x1
	// Bit mask of IBE1 field.
	GPIO_IBE_IBE1_Msk = 0x2
	// Bit IBE1.
	GPIO_IBE_IBE1 = 0x2
	// Position of IBE2 field.
	GPIO_IBE_IBE2_Pos = 0x2
	// Bit mask of IBE2 field.
	GPIO_IBE_IBE2_Msk = 0x4
	// Bit IBE2.
	GPIO_IBE_IBE2 = 0x4
	// Position of IBE3 field.
	GPIO_IBE_IBE3_Pos = 0x3
	// Bit mask of IBE3 field.
	GPIO_IBE_IBE3_Msk = 0x8
	// Bit IBE3.
	GPIO_IBE_IBE3 = 0x8
	// Position of IBE4 field.
	GPIO_IBE_IBE4_Pos = 0x4
	// Bit mask of IBE4 field.
	GPIO_IBE_IBE4_Msk = 0x10
	// Bit IBE4.
	GPIO_IBE_IBE4 = 0x10
	// Position of IBE5 field.
	GPIO_IBE_IBE5_Pos = 0x5
	// Bit mask of IBE5 field.
	GPIO_IBE_IBE5_Msk = 0x20
	// Bit IBE5.
	GPIO_IBE_IBE5 = 0x20
	// Position of IBE6 field.
	GPIO_IBE_IBE6_Pos = 0x6
	// Bit mask of IBE6 field.
	GPIO_IBE_IBE6_Msk = 0x40
	// Bit IBE6.
	GPIO_IBE_IBE6 = 0x40
	// Position of IBE7 field.
	GPIO_IBE_IBE7_Pos = 0x7
	// Bit mask of IBE7 field.
	GPIO_IBE_IBE7_Msk = 0x80
	// Bit IBE7.
	GPIO_IBE_IBE7 = 0x80
	// Position of IBE8 field.
	GPIO_IBE_IBE8_Pos = 0x8
	// Bit mask of IBE8 field.
	GPIO_IBE_IBE8_Msk = 0x100
	// Bit IBE8.
	GPIO_IBE_IBE8 = 0x100
	// Position of IBE9 field.
	GPIO_IBE_IBE9_Pos = 0x9
	// Bit mask of IBE9 field.
	GPIO_IBE_IBE9_Msk = 0x200
	// Bit IBE9.
	GPIO_IBE_IBE9 = 0x200
	// Position of IBE10 field.
	GPIO_IBE_IBE10_Pos = 0xa
	// Bit mask of IBE10 field.
	GPIO_IBE_IBE10_Msk = 0x400
	// Bit IBE10.
	GPIO_IBE_IBE10 = 0x400
	// Position of IBE11 field.
	GPIO_IBE_IBE11_Pos = 0xb
	// Bit mask of IBE11 field.
	GPIO_IBE_IBE11_Msk = 0x800
	// Bit IBE11.
	GPIO_IBE_IBE11 = 0x800
	// Position of RESERVED field.
	GPIO_IBE_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_IBE_RESERVED_Msk = 0xfffff000

	// IEV: Interrupt event register for port n
	// Position of IEV0 field.
	GPIO_IEV_IEV0_Pos = 0x0
	// Bit mask of IEV0 field.
	GPIO_IEV_IEV0_Msk = 0x1
	// Bit IEV0.
	GPIO_IEV_IEV0 = 0x1
	// Position of IEV1 field.
	GPIO_IEV_IEV1_Pos = 0x1
	// Bit mask of IEV1 field.
	GPIO_IEV_IEV1_Msk = 0x2
	// Bit IEV1.
	GPIO_IEV_IEV1 = 0x2
	// Position of IEV2 field.
	GPIO_IEV_IEV2_Pos = 0x2
	// Bit mask of IEV2 field.
	GPIO_IEV_IEV2_Msk = 0x4
	// Bit IEV2.
	GPIO_IEV_IEV2 = 0x4
	// Position of IEV3 field.
	GPIO_IEV_IEV3_Pos = 0x3
	// Bit mask of IEV3 field.
	GPIO_IEV_IEV3_Msk = 0x8
	// Bit IEV3.
	GPIO_IEV_IEV3 = 0x8
	// Position of IEV4 field.
	GPIO_IEV_IEV4_Pos = 0x4
	// Bit mask of IEV4 field.
	GPIO_IEV_IEV4_Msk = 0x10
	// Bit IEV4.
	GPIO_IEV_IEV4 = 0x10
	// Position of IEV5 field.
	GPIO_IEV_IEV5_Pos = 0x5
	// Bit mask of IEV5 field.
	GPIO_IEV_IEV5_Msk = 0x20
	// Bit IEV5.
	GPIO_IEV_IEV5 = 0x20
	// Position of IEV6 field.
	GPIO_IEV_IEV6_Pos = 0x6
	// Bit mask of IEV6 field.
	GPIO_IEV_IEV6_Msk = 0x40
	// Bit IEV6.
	GPIO_IEV_IEV6 = 0x40
	// Position of IEV7 field.
	GPIO_IEV_IEV7_Pos = 0x7
	// Bit mask of IEV7 field.
	GPIO_IEV_IEV7_Msk = 0x80
	// Bit IEV7.
	GPIO_IEV_IEV7 = 0x80
	// Position of IEV8 field.
	GPIO_IEV_IEV8_Pos = 0x8
	// Bit mask of IEV8 field.
	GPIO_IEV_IEV8_Msk = 0x100
	// Bit IEV8.
	GPIO_IEV_IEV8 = 0x100
	// Position of IEV9 field.
	GPIO_IEV_IEV9_Pos = 0x9
	// Bit mask of IEV9 field.
	GPIO_IEV_IEV9_Msk = 0x200
	// Bit IEV9.
	GPIO_IEV_IEV9 = 0x200
	// Position of IEV10 field.
	GPIO_IEV_IEV10_Pos = 0xa
	// Bit mask of IEV10 field.
	GPIO_IEV_IEV10_Msk = 0x400
	// Bit IEV10.
	GPIO_IEV_IEV10 = 0x400
	// Position of IEV11 field.
	GPIO_IEV_IEV11_Pos = 0xb
	// Bit mask of IEV11 field.
	GPIO_IEV_IEV11_Msk = 0x800
	// Bit IEV11.
	GPIO_IEV_IEV11 = 0x800
	// Position of RESERVED field.
	GPIO_IEV_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_IEV_RESERVED_Msk = 0xfffff000

	// IE: Interrupt mask register for port n
	// Position of MASK0 field.
	GPIO_IE_MASK0_Pos = 0x0
	// Bit mask of MASK0 field.
	GPIO_IE_MASK0_Msk = 0x1
	// Bit MASK0.
	GPIO_IE_MASK0 = 0x1
	// Position of MASK1 field.
	GPIO_IE_MASK1_Pos = 0x1
	// Bit mask of MASK1 field.
	GPIO_IE_MASK1_Msk = 0x2
	// Bit MASK1.
	GPIO_IE_MASK1 = 0x2
	// Position of MASK2 field.
	GPIO_IE_MASK2_Pos = 0x2
	// Bit mask of MASK2 field.
	GPIO_IE_MASK2_Msk = 0x4
	// Bit MASK2.
	GPIO_IE_MASK2 = 0x4
	// Position of MASK3 field.
	GPIO_IE_MASK3_Pos = 0x3
	// Bit mask of MASK3 field.
	GPIO_IE_MASK3_Msk = 0x8
	// Bit MASK3.
	GPIO_IE_MASK3 = 0x8
	// Position of MASK4 field.
	GPIO_IE_MASK4_Pos = 0x4
	// Bit mask of MASK4 field.
	GPIO_IE_MASK4_Msk = 0x10
	// Bit MASK4.
	GPIO_IE_MASK4 = 0x10
	// Position of MASK5 field.
	GPIO_IE_MASK5_Pos = 0x5
	// Bit mask of MASK5 field.
	GPIO_IE_MASK5_Msk = 0x20
	// Bit MASK5.
	GPIO_IE_MASK5 = 0x20
	// Position of MASK6 field.
	GPIO_IE_MASK6_Pos = 0x6
	// Bit mask of MASK6 field.
	GPIO_IE_MASK6_Msk = 0x40
	// Bit MASK6.
	GPIO_IE_MASK6 = 0x40
	// Position of MASK7 field.
	GPIO_IE_MASK7_Pos = 0x7
	// Bit mask of MASK7 field.
	GPIO_IE_MASK7_Msk = 0x80
	// Bit MASK7.
	GPIO_IE_MASK7 = 0x80
	// Position of MASK8 field.
	GPIO_IE_MASK8_Pos = 0x8
	// Bit mask of MASK8 field.
	GPIO_IE_MASK8_Msk = 0x100
	// Bit MASK8.
	GPIO_IE_MASK8 = 0x100
	// Position of MASK9 field.
	GPIO_IE_MASK9_Pos = 0x9
	// Bit mask of MASK9 field.
	GPIO_IE_MASK9_Msk = 0x200
	// Bit MASK9.
	GPIO_IE_MASK9 = 0x200
	// Position of MASK10 field.
	GPIO_IE_MASK10_Pos = 0xa
	// Bit mask of MASK10 field.
	GPIO_IE_MASK10_Msk = 0x400
	// Bit MASK10.
	GPIO_IE_MASK10 = 0x400
	// Position of MASK11 field.
	GPIO_IE_MASK11_Pos = 0xb
	// Bit mask of MASK11 field.
	GPIO_IE_MASK11_Msk = 0x800
	// Bit MASK11.
	GPIO_IE_MASK11 = 0x800
	// Position of RESERVED field.
	GPIO_IE_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_IE_RESERVED_Msk = 0xfffff000

	// RIS: Raw interrupt status register for port n
	// Position of RAWST0 field.
	GPIO_RIS_RAWST0_Pos = 0x0
	// Bit mask of RAWST0 field.
	GPIO_RIS_RAWST0_Msk = 0x1
	// Bit RAWST0.
	GPIO_RIS_RAWST0 = 0x1
	// Position of RAWST1 field.
	GPIO_RIS_RAWST1_Pos = 0x1
	// Bit mask of RAWST1 field.
	GPIO_RIS_RAWST1_Msk = 0x2
	// Bit RAWST1.
	GPIO_RIS_RAWST1 = 0x2
	// Position of RAWST2 field.
	GPIO_RIS_RAWST2_Pos = 0x2
	// Bit mask of RAWST2 field.
	GPIO_RIS_RAWST2_Msk = 0x4
	// Bit RAWST2.
	GPIO_RIS_RAWST2 = 0x4
	// Position of RAWST3 field.
	GPIO_RIS_RAWST3_Pos = 0x3
	// Bit mask of RAWST3 field.
	GPIO_RIS_RAWST3_Msk = 0x8
	// Bit RAWST3.
	GPIO_RIS_RAWST3 = 0x8
	// Position of RAWST4 field.
	GPIO_RIS_RAWST4_Pos = 0x4
	// Bit mask of RAWST4 field.
	GPIO_RIS_RAWST4_Msk = 0x10
	// Bit RAWST4.
	GPIO_RIS_RAWST4 = 0x10
	// Position of RAWST5 field.
	GPIO_RIS_RAWST5_Pos = 0x5
	// Bit mask of RAWST5 field.
	GPIO_RIS_RAWST5_Msk = 0x20
	// Bit RAWST5.
	GPIO_RIS_RAWST5 = 0x20
	// Position of RAWST6 field.
	GPIO_RIS_RAWST6_Pos = 0x6
	// Bit mask of RAWST6 field.
	GPIO_RIS_RAWST6_Msk = 0x40
	// Bit RAWST6.
	GPIO_RIS_RAWST6 = 0x40
	// Position of RAWST7 field.
	GPIO_RIS_RAWST7_Pos = 0x7
	// Bit mask of RAWST7 field.
	GPIO_RIS_RAWST7_Msk = 0x80
	// Bit RAWST7.
	GPIO_RIS_RAWST7 = 0x80
	// Position of RAWST8 field.
	GPIO_RIS_RAWST8_Pos = 0x8
	// Bit mask of RAWST8 field.
	GPIO_RIS_RAWST8_Msk = 0x100
	// Bit RAWST8.
	GPIO_RIS_RAWST8 = 0x100
	// Position of RAWST9 field.
	GPIO_RIS_RAWST9_Pos = 0x9
	// Bit mask of RAWST9 field.
	GPIO_RIS_RAWST9_Msk = 0x200
	// Bit RAWST9.
	GPIO_RIS_RAWST9 = 0x200
	// Position of RAWST10 field.
	GPIO_RIS_RAWST10_Pos = 0xa
	// Bit mask of RAWST10 field.
	GPIO_RIS_RAWST10_Msk = 0x400
	// Bit RAWST10.
	GPIO_RIS_RAWST10 = 0x400
	// Position of RAWST11 field.
	GPIO_RIS_RAWST11_Pos = 0xb
	// Bit mask of RAWST11 field.
	GPIO_RIS_RAWST11_Msk = 0x800
	// Bit RAWST11.
	GPIO_RIS_RAWST11 = 0x800
	// Position of RESERVED field.
	GPIO_RIS_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_RIS_RESERVED_Msk = 0xfffff000

	// MIS: Masked interrupt status register for port n
	// Position of MASK0 field.
	GPIO_MIS_MASK0_Pos = 0x0
	// Bit mask of MASK0 field.
	GPIO_MIS_MASK0_Msk = 0x1
	// Bit MASK0.
	GPIO_MIS_MASK0 = 0x1
	// Position of MASK1 field.
	GPIO_MIS_MASK1_Pos = 0x1
	// Bit mask of MASK1 field.
	GPIO_MIS_MASK1_Msk = 0x2
	// Bit MASK1.
	GPIO_MIS_MASK1 = 0x2
	// Position of MASK2 field.
	GPIO_MIS_MASK2_Pos = 0x2
	// Bit mask of MASK2 field.
	GPIO_MIS_MASK2_Msk = 0x4
	// Bit MASK2.
	GPIO_MIS_MASK2 = 0x4
	// Position of MASK3 field.
	GPIO_MIS_MASK3_Pos = 0x3
	// Bit mask of MASK3 field.
	GPIO_MIS_MASK3_Msk = 0x8
	// Bit MASK3.
	GPIO_MIS_MASK3 = 0x8
	// Position of MASK4 field.
	GPIO_MIS_MASK4_Pos = 0x4
	// Bit mask of MASK4 field.
	GPIO_MIS_MASK4_Msk = 0x10
	// Bit MASK4.
	GPIO_MIS_MASK4 = 0x10
	// Position of MASK5 field.
	GPIO_MIS_MASK5_Pos = 0x5
	// Bit mask of MASK5 field.
	GPIO_MIS_MASK5_Msk = 0x20
	// Bit MASK5.
	GPIO_MIS_MASK5 = 0x20
	// Position of MASK6 field.
	GPIO_MIS_MASK6_Pos = 0x6
	// Bit mask of MASK6 field.
	GPIO_MIS_MASK6_Msk = 0x40
	// Bit MASK6.
	GPIO_MIS_MASK6 = 0x40
	// Position of MASK7 field.
	GPIO_MIS_MASK7_Pos = 0x7
	// Bit mask of MASK7 field.
	GPIO_MIS_MASK7_Msk = 0x80
	// Bit MASK7.
	GPIO_MIS_MASK7 = 0x80
	// Position of MASK8 field.
	GPIO_MIS_MASK8_Pos = 0x8
	// Bit mask of MASK8 field.
	GPIO_MIS_MASK8_Msk = 0x100
	// Bit MASK8.
	GPIO_MIS_MASK8 = 0x100
	// Position of MASK9 field.
	GPIO_MIS_MASK9_Pos = 0x9
	// Bit mask of MASK9 field.
	GPIO_MIS_MASK9_Msk = 0x200
	// Bit MASK9.
	GPIO_MIS_MASK9 = 0x200
	// Position of MASK10 field.
	GPIO_MIS_MASK10_Pos = 0xa
	// Bit mask of MASK10 field.
	GPIO_MIS_MASK10_Msk = 0x400
	// Bit MASK10.
	GPIO_MIS_MASK10 = 0x400
	// Position of MASK11 field.
	GPIO_MIS_MASK11_Pos = 0xb
	// Bit mask of MASK11 field.
	GPIO_MIS_MASK11_Msk = 0x800
	// Bit MASK11.
	GPIO_MIS_MASK11 = 0x800
	// Position of RESERVED field.
	GPIO_MIS_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_MIS_RESERVED_Msk = 0xfffff000

	// IC: Interrupt clear register for port n
	// Position of CLR0 field.
	GPIO_IC_CLR0_Pos = 0x0
	// Bit mask of CLR0 field.
	GPIO_IC_CLR0_Msk = 0x1
	// Bit CLR0.
	GPIO_IC_CLR0 = 0x1
	// Position of CLR1 field.
	GPIO_IC_CLR1_Pos = 0x1
	// Bit mask of CLR1 field.
	GPIO_IC_CLR1_Msk = 0x2
	// Bit CLR1.
	GPIO_IC_CLR1 = 0x2
	// Position of CLR2 field.
	GPIO_IC_CLR2_Pos = 0x2
	// Bit mask of CLR2 field.
	GPIO_IC_CLR2_Msk = 0x4
	// Bit CLR2.
	GPIO_IC_CLR2 = 0x4
	// Position of CLR3 field.
	GPIO_IC_CLR3_Pos = 0x3
	// Bit mask of CLR3 field.
	GPIO_IC_CLR3_Msk = 0x8
	// Bit CLR3.
	GPIO_IC_CLR3 = 0x8
	// Position of CLR4 field.
	GPIO_IC_CLR4_Pos = 0x4
	// Bit mask of CLR4 field.
	GPIO_IC_CLR4_Msk = 0x10
	// Bit CLR4.
	GPIO_IC_CLR4 = 0x10
	// Position of CLR5 field.
	GPIO_IC_CLR5_Pos = 0x5
	// Bit mask of CLR5 field.
	GPIO_IC_CLR5_Msk = 0x20
	// Bit CLR5.
	GPIO_IC_CLR5 = 0x20
	// Position of CLR6 field.
	GPIO_IC_CLR6_Pos = 0x6
	// Bit mask of CLR6 field.
	GPIO_IC_CLR6_Msk = 0x40
	// Bit CLR6.
	GPIO_IC_CLR6 = 0x40
	// Position of CLR7 field.
	GPIO_IC_CLR7_Pos = 0x7
	// Bit mask of CLR7 field.
	GPIO_IC_CLR7_Msk = 0x80
	// Bit CLR7.
	GPIO_IC_CLR7 = 0x80
	// Position of CLR8 field.
	GPIO_IC_CLR8_Pos = 0x8
	// Bit mask of CLR8 field.
	GPIO_IC_CLR8_Msk = 0x100
	// Bit CLR8.
	GPIO_IC_CLR8 = 0x100
	// Position of CLR9 field.
	GPIO_IC_CLR9_Pos = 0x9
	// Bit mask of CLR9 field.
	GPIO_IC_CLR9_Msk = 0x200
	// Bit CLR9.
	GPIO_IC_CLR9 = 0x200
	// Position of CLR10 field.
	GPIO_IC_CLR10_Pos = 0xa
	// Bit mask of CLR10 field.
	GPIO_IC_CLR10_Msk = 0x400
	// Bit CLR10.
	GPIO_IC_CLR10 = 0x400
	// Position of CLR11 field.
	GPIO_IC_CLR11_Pos = 0xb
	// Bit mask of CLR11 field.
	GPIO_IC_CLR11_Msk = 0x800
	// Bit CLR11.
	GPIO_IC_CLR11 = 0x800
	// Position of RESERVED field.
	GPIO_IC_RESERVED_Pos = 0xc
	// Bit mask of RESERVED field.
	GPIO_IC_RESERVED_Msk = 0xfffff000
)
